32/41 + 0.035
(32/41 + 0.035)*100
100/41
23/40 * 100
(23/40 * 100)+5
(164 + 13.5 + 6)
(164 + 13.5 + 6)/365
(164 + 13.5 + 6 + (50))/365
(164 + 13.5 + 6 + (60))/365
(164 + 13.5 + 6 + (70))/365
(164 + 13.5 + 6 + (75))/365
102/40
102/41
?table
9.49/2
12.75+8.25
(10.5 + 6.5)/(12.75+8.25)
.25^2 * 2
(.25^2 * 2)^0.5
(.25^2 * 2)^0.5 * 2
3/8
5/8
6/8
30*1.5
40*15
40*1.5
13.25 - 4.5
(276.29+8.75)/365
16*3
16*4
84/12
9/12
9/12*14
22+60+78+80+88+98
22+38+18+2+8+10
239/785
(239+53)/785
.492+.139
.412+.166+.002
.412/.58
.166/.58
.412*.58
.71*.58
98-54
22+49+43+33+36+44
60-11
78-26
80-35
88-47
98-52
22+49+52+45+41+46
library(RMark)
?test_ddl
data(dipper)    dipper.processed=process.data(dipper,groups=("sex"))    release.gof(dipper.processed)
4+19+7+12
4+17.83+7+12
40.83/42
40.83/42*14
14
(11.25+5)/(25.5 + 10.25 - 14)
365*0.6666
365*0.6666 - 75.89
5/6 * 2
5/6 * 2 + 75.89
365*0.6666 -77.55667
365*0.6666 -77.55667 - 6 - 13 - 1
145.7523/2
15*3
11*5
8/12*14
4+15.33+5.5+12
(4+15.33+5.5+12)
(4+15.33+5.5+12)/(4+19+7+12)
(4+19+7+12)
(4+15.33+5.5+12)/(4+19+7+12)*14
2.5+17.5+12
32/42
32/42 * 14
4+12+6.5+12
(4+12+6.5+12)/42 * 14
5/6*2
5/6*2 + 0.25
5/6*2 + 0.5
2577.77/12
setwd('/Users/KSauby/Documents/Projects/ACS/tests/testthat')
N=100#
	n1=13#
	m=c(5,5,5,5,5,3,3,3,1,1,1,1,1)
length(m)
library(ACSampling)
setwd('/Users/KSauby/Documents/Projects/ACS/tests/testthat')
pi_ij_RACS_mthresh_6 	<- pi_ij_RACS(N,n1,m,m_threshold=6)#
	pi_ij_RACS_no_mthresh 	<- pi_ij(N,n1,m)#
	pi_ij_RACS_mthresh_4 	<- pi_ij_RACS(N,n1,m,m_threshold)
setwd('/Users/KSauby/Documents/Projects/ACS/tests/testthat')
N=100#
	n1=13#
	m=c(5,5,5,5,5,3,3,3,1,1,1,1,1)#
	m_threshold=4#
	pi_ij_RACS_mthresh_6 	<- pi_ij_RACS(N,n1,m,m_threshold=6)#
	pi_ij_RACS_no_mthresh 	<- pi_ij(N,n1,m)#
	pi_ij_RACS_mthresh_4 	<- pi_ij_RACS(N,n1,m,m_threshold)
setwd('/Users/KSauby/Documents/Projects/ACS/tests/testthat')
1 - (#
	choose(N-m_threshold,n1) +#
	choose(N-m[6],n1) - #
	choose(N-m_threshold-m[6],n1)#
) / choose(N,n1)
setwd('/Users/KSauby/Documents/Projects/ACS/tests/testthat')
pi_ij_RACS_mthresh_4[1,6]
setwd('/Users/KSauby/Documents/Projects/ACS/tests/testthat')
expect_that(#
		# (1,6)#
		# 5 is over threshold#
		# 3 is not#
		1 - (#
			choose(N-m_threshold,n1) +#
			choose(N-m[6],n1) - #
			choose(N-m_threshold-m[6],n1)#
		) / choose(N,n1),#
		equals(pi_ij_RACS_mthresh_4[1,6])
)
library(testthat)
expect_that(#
		# (1,6)#
		# 5 is over threshold#
		# 3 is not#
		1 - (#
			choose(N-m_threshold,n1) +#
			choose(N-m[6],n1) - #
			choose(N-m_threshold-m[6],n1)#
		) / choose(N,n1),#
		equals(pi_ij_RACS_mthresh_4[1,6])
)
expect_that(#
		# (1,6)#
		# 5 is over threshold#
		# 3 is not#
		1 - (#
			choose(N-m_threshold,n1) +#
			choose(N-m[6],n1) - #
			choose(N-m_threshold-m[6],n1)#
		) / choose(N,n1),#
		equals(pi_ij_RACS_mthresh_4[1,2])
)
setwd('/Users/KSauby/Documents/Projects/ACS/tests/testthat')
pi_ij_RACS_mthresh_4
setwd('/Users/KSauby/Documents/Projects/ACS/tests/testthat')
pi_ij_RACS_mthresh_4[1:5,6]
setwd('/Users/KSauby/Documents/Projects/ACS/tests/testthat')
pi_ij_RACS_mthresh_4[1:5,6:8]
setwd('/Users/KSauby/Documents/Projects/ACS/tests/testthat')
expect_that(#
		# (1,6)#
		# 5 is over threshold#
		# 3 is not#
		1 - (#
			choose(N-m_threshold,n1) +#
			choose(N-m[6],n1) - #
			choose(N-m_threshold-m[6],n1)#
		) / choose(N,n1),#
		equals(c(#
			pi_ij_RACS_mthresh_4[1:5,6:8]),#
			pi_ij_RACS_mthresh_4[6:8,1:5])#
	)
setwd('/Users/KSauby/Documents/Projects/ACS/tests/testthat')
expect_that(#
		# (1,6)#
		# 5 is over threshold#
		# 3 is not#
		1 - (#
			choose(N-m_threshold,n1) +#
			choose(N-m[6],n1) - #
			choose(N-m_threshold-m[6],n1)#
		) / choose(N,n1),#
		equals(c(#
			pi_ij_RACS_mthresh_4[1:5,6:8],#
			pi_ij_RACS_mthresh_4[6:8,1:5]#
		))#
	)
setwd('/Users/KSauby/Documents/Projects/ACS/tests/testthat')
c(#
			pi_ij_RACS_mthresh_4[1:5,6:8],#
			pi_ij_RACS_mthresh_4[6:8,1:5]#
		)
setwd('/Users/KSauby/Documents/Projects/ACS/tests/testthat')
vector(c(#
			pi_ij_RACS_mthresh_4[1:5,6:8],#
			pi_ij_RACS_mthresh_4[6:8,1:5]#
		))
setwd('/Users/KSauby/Documents/Projects/ACS/tests/testthat')
as.vector(c(#
			pi_ij_RACS_mthresh_4[1:5,6:8],#
			pi_ij_RACS_mthresh_4[6:8,1:5]#
		))
c(#
			pi_ij_RACS_mthresh_4[1:5,6:8],#
			pi_ij_RACS_mthresh_4[6:8,1:5]#
		)) %>% class
c(#
			pi_ij_RACS_mthresh_4[1:5,6:8],#
			pi_ij_RACS_mthresh_4[6:8,1:5]#
		) %>% class
c(#
			pi_ij_RACS_mthresh_4[1:5,6:8],#
			pi_ij_RACS_mthresh_4[6:8,1:5]#
		) %>% str
setwd('/Users/KSauby/Documents/Projects/ACS/tests/testthat')
expect_that(#
		# (1,6)#
		# 5 is over threshold#
		# 3 is not#
		1 - (#
			choose(N-m_threshold,n1) +#
			choose(N-m[6],n1) - #
			choose(N-m_threshold-m[6],n1)#
		) / choose(N,n1),#
		equals(c(#
			pi_ij_RACS_mthresh_4[1:5,6:8],#
			pi_ij_RACS_mthresh_4[6:8,1:5]#
		))#
	)
setwd('/Users/KSauby/Documents/Projects/ACS/tests/testthat')
expect_that(#
		# 5 is over threshold#
		# 3 is not#
		c(#
			pi_ij_RACS_mthresh_4[1:5,6:8],#
			pi_ij_RACS_mthresh_4[6:8,1:5]#
		),#
		is_equivalent_to(#
			1 - (#
				choose(N-m_threshold,n1) +#
				choose(N-m[6],n1) - #
				choose(N-m_threshold-m[6],n1)#
			) / choose(N,n1)#
		)	#
	)
setwd('/Users/KSauby/Documents/Projects/ACS/tests/testthat')
expect_that(#
		# 5 is over threshold#
		# 3 is not#
		c(#
			pi_ij_RACS_mthresh_4[1:5,6:8],#
			pi_ij_RACS_mthresh_4[6:8,1:5]#
		),#
		matches(#
			1 - (#
				choose(N-m_threshold,n1) +#
				choose(N-m[6],n1) - #
				choose(N-m_threshold-m[6],n1)#
			) / choose(N,n1)#
		)	#
	)
setwd('/Users/KSauby/Documents/Projects/ACS/tests/testthat')
expect_that(#
		# 5 is over threshold#
		# 3 is not#
		c(#
			pi_ij_RACS_mthresh_4[1:5,6:8],#
			pi_ij_RACS_mthresh_4[6:8,1:5]#
		),#
		equals(#
			1 - (#
				choose(N-m_threshold,n1) +#
				choose(N-m[6],n1) - #
				choose(N-m_threshold-m[6],n1)#
			) / choose(N,n1)#
		)	#
	)
setwd('/Users/KSauby/Documents/Projects/ACS/tests/testthat')
expect_that(#
		# 5 is over threshold#
		# 3 is not#
		c(#
			pi_ij_RACS_mthresh_4[1:5,6:8],#
			pi_ij_RACS_mthresh_4[6:8,1:5]#
		),#
		is_identical_to(#
			1 - (#
				choose(N-m_threshold,n1) +#
				choose(N-m[6],n1) - #
				choose(N-m_threshold-m[6],n1)#
			) / choose(N,n1)#
		)	#
	)
setwd('/Users/KSauby/Documents/Projects/ACS/tests/testthat')
expect_that(#
		# 5 is over threshold#
		# 3 is not#
		c(#
			pi_ij_RACS_mthresh_4[1:5,6:8],#
			pi_ij_RACS_mthresh_4[6:8,1:5]#
		),#
		 is_equivalent_to(#
			1 - (#
				choose(N-m_threshold,n1) +#
				choose(N-m[6],n1) - #
				choose(N-m_threshold-m[6],n1)#
			) / choose(N,n1)#
		)	#
	)
setwd('/Users/KSauby/Documents/Projects/ACS/tests/testthat')
is_equivalent_to
? is_equivalent_to
setwd('/Users/KSauby/Documents/Projects/ACS/tests/testthat')
rep(1 - (#
				choose(N-m_threshold,n1) +#
				choose(N-m[6],n1) - #
				choose(N-m_threshold-m[6],n1)#
			) / choose(N,n1), length(vec))
setwd('/Users/KSauby/Documents/Projects/ACS/tests/testthat')
vec = c(#
			pi_ij_RACS_mthresh_4[1:5,6:8],#
			pi_ij_RACS_mthresh_4[6:8,1:5]#
		)
setwd('/Users/KSauby/Documents/Projects/ACS/tests/testthat')
rep(1 - (#
				choose(N-m_threshold,n1) +#
				choose(N-m[6],n1) - #
				choose(N-m_threshold-m[6],n1)#
			) / choose(N,n1), length(vec))
setwd('/Users/KSauby/Documents/Projects/ACS/tests/testthat')
expect_that(#
		# 5 is over threshold#
		# 3 is not#
		(vec = c(#
			pi_ij_RACS_mthresh_4[1:5,6:8],#
			pi_ij_RACS_mthresh_4[6:8,1:5]#
		)),#
		 is_equivalent_to(#
			rep(#
				1 - (#
					choose(N-m_threshold,n1) +#
					choose(N-m[6],n1) - #
					choose(N-m_threshold-m[6],n1)#
				) / choose(N,n1),#
				length(vec)#
			)#
		)	#
	)
setwd('/Users/KSauby/Documents/Projects/ACS/tests/testthat')
pi_ij_RACS_mthresh_4
setwd('/Users/KSauby/Documents/Projects/ACS/tests/testthat')
pi_ij_RACS_mthresh_4[6:8,6:8]
write.csv(pi_ij_RACS_mthresh_4)
write.csv(pi_ij_RACS_mthresh_4, "pi_ij_RACS_mthresh_4.csv")
setwd('/Users/KSauby/Documents/Projects/ACS/tests/testthat')
pi_ij_RACS_mthresh_4[6:8,6:8]
setwd('/Users/KSauby/Documents/Projects/ACS/tests/testthat')
as.vector(pi_ij_RACS_mthresh_4[6:8,6:8])
setwd('/Users/KSauby/Documents/Projects/ACS/tests/testthat')
pi_ij_RACS_mthresh_4[1:5,6:8]
setwd('/Users/KSauby/Documents/Projects/ACS/tests/testthat')
expect_that(#
		# 3 is not over m_threshold#
		# 3 is not over m_threshold#
		(vec = as.vector(pi_ij_RACS_mthresh_4[6:8,6:8])),#
		 is_equivalent_to(#
			rep(#
				1 - (#
					choose(N-m[6],n1) +#
					choose(N-m[6],n1) - #
					choose(N-m[6]-m[6],n1)#
				) / choose(N,n1),#
				length(vec)#
			)#
		)	#
	)
setwd('/Users/KSauby/Documents/Projects/ACS/tests/testthat')
c(#
			pi_ij_RACS_mthresh_4[1:5,9:13],#
			pi_ij_RACS_mthresh_4[9:13,1:5]#
		)
setwd('/Users/KSauby/Documents/Projects/ACS/tests/testthat')
expect_that(#
		(vec = c(#
			pi_ij_RACS_mthresh_4[1:5,9:13],#
			pi_ij_RACS_mthresh_4[9:13,1:5]#
		)),#
		 is_equivalent_to(#
			rep(#
				1 - (#
					choose(N-m_threshold,n1) +#
					choose(N-m[9],n1) - #
					choose(N-m_threshold-m[9],n1)#
				) / choose(N,n1),#
				length(vec)#
			)#
		)	#
	)
setwd('/Users/KSauby/Documents/Projects/ACS/tests/testthat')
as.vector(pi_ij_RACS_mthresh_4[1:5,1:5])
setwd('/Users/KSauby/Documents/Projects/ACS/tests/testthat')
expect_that(#
		(vec = as.vector(pi_ij_RACS_mthresh_4[1:5,1:5])),#
		 is_equivalent_to(#
			rep(#
				1 - (#
					2*choose(N-m_threshold,n1) -#
					choose(N-2*m_threshold,n1)#
				) / choose(N,n1),#
				length(vec)#
			)#
		)	#
	)
setwd('/Users/KSauby/Documents/Projects/ACS/tests/testthat')
c(#
			pi_ij_RACS_mthresh_4[6:8,9:13],#
			pi_ij_RACS_mthresh_4[9:13,6:8],#
		)
setwd('/Users/KSauby/Documents/Projects/ACS/tests/testthat')
c(#
			pi_ij_RACS_mthresh_4[6:8,9:13],#
			pi_ij_RACS_mthresh_4[9:13,6:8]#
		)
setwd('/Users/KSauby/Documents/Projects/ACS/tests/testthat')
expect_that(#
		(vec = c(#
			pi_ij_RACS_mthresh_4[6:8,9:13],#
			pi_ij_RACS_mthresh_4[9:13,6:8]#
		)),#
		 is_equivalent_to(#
			1 - (#
				choose(N-m[6],n1) +#
				choose(N-m[9],n1) - #
				choose(N-m[6]-m[9],n1)#
			) / choose(N,n1)#
		)	#
	)
setwd('/Users/KSauby/Documents/Projects/ACS/tests/testthat')
1 - (#
				choose(N-m[6],n1) +#
				choose(N-m[9],n1) - #
				choose(N-m[6]-m[9],n1)#
			) / choose(N,n1)
setwd('/Users/KSauby/Documents/Projects/ACS/tests/testthat')
expect_that(#
		(vec = c(#
			pi_ij_RACS_mthresh_4[6:8,9:13],#
			pi_ij_RACS_mthresh_4[9:13,6:8]#
		)),#
		 is_equivalent_to(#
			rep(#
				1 - (#
					choose(N-m[6],n1) +#
					choose(N-m[9],n1) - #
					choose(N-m[6]-m[9],n1)#
				) / choose(N,n1),#
				length(vec)#
			)#
		)	#
	)
setwd('/Users/KSauby/Documents/Projects/ACS/tests/testthat')
as.vector(pi_ij_RACS_mthresh_4[9:13,9:13]))
as.vector(pi_ij_RACS_mthresh_4[9:13,9:13])
setwd('/Users/KSauby/Documents/Projects/ACS/tests/testthat')
expect_that(#
		(vec = as.vector(pi_ij_RACS_mthresh_4[9:13,9:13])),#
		 is_equivalent_to(#
			rep(#
				1 - (#
					choose(N-m[9],n1) +#
					choose(N-m[9],n1) - #
					choose(N-m[9]-m[9],n1)#
				) / choose(N,n1),#
				length(vec)#
			)#
		)	#
	)
setwd('/Users/KSauby/Documents/Projects/ACS/tests/testthat')
test_that("R_hat, Horvitz-Thompson Ratio Estimator, without replacement", {#
	N=100#
	n1=13#
	m=c(5,5,5,5,5,3,3,3,1,1,1,1,1)#
	m_threshold=4#
	pi_ij_RACS_mthresh_6 	<- pi_ij_RACS(N,n1,m,m_threshold=6)#
	pi_ij_RACS_no_mthresh 	<- pi_ij(N,n1,m)#
	pi_ij_RACS_mthresh_4 	<- pi_ij_RACS(N,n1,m,m_threshold)#
#
	# 3 is not over m_threshold#
	# 3 is not over m_threshold#
	expect_that(#
		(vec = as.vector(pi_ij_RACS_mthresh_4[6:8,6:8])),#
		 is_equivalent_to(#
			rep(#
				1 - (#
					choose(N-m[6],n1) +#
					choose(N-m[6],n1) - #
					choose(N-m[6]-m[6],n1)#
				) / choose(N,n1),#
				length(vec)#
			)#
		)	#
	),#
	# 5 is over threshold#
	# 3 is not#
	expect_that(#
		(vec = c(#
			pi_ij_RACS_mthresh_4[1:5,6:8],#
			pi_ij_RACS_mthresh_4[6:8,1:5]#
		)),#
		 is_equivalent_to(#
			rep(#
				1 - (#
					choose(N-m_threshold,n1) +#
					choose(N-m[6],n1) - #
					choose(N-m_threshold-m[6],n1)#
				) / choose(N,n1),#
				length(vec)#
			)#
		)	#
	),#
	# 5 is over threshold#
	# 1 is not#
	expect_that(#
		(vec = c(#
			pi_ij_RACS_mthresh_4[1:5,9:13],#
			pi_ij_RACS_mthresh_4[9:13,1:5]#
		)),#
		 is_equivalent_to(#
			rep(#
				1 - (#
					choose(N-m_threshold,n1) +#
					choose(N-m[9],n1) - #
					choose(N-m_threshold-m[9],n1)#
				) / choose(N,n1),#
				length(vec)#
			)#
		)	#
	),#
	# 3 is not over the threshold#
	# 1 is not over the threshold#
	expect_that(#
		(vec = c(#
			pi_ij_RACS_mthresh_4[6:8,9:13],#
			pi_ij_RACS_mthresh_4[9:13,6:8]#
		)),#
		 is_equivalent_to(#
			rep(#
				1 - (#
					choose(N-m[6],n1) +#
					choose(N-m[9],n1) - #
					choose(N-m[6]-m[9],n1)#
				) / choose(N,n1),#
				length(vec)#
			)#
		)	#
	),#
	# 1 is not over the threshold#
	# 1 is not over the threshold	#
	expect_that(#
		(vec = as.vector(pi_ij_RACS_mthresh_4[9:13,9:13])),#
		 is_equivalent_to(#
			rep(#
				1 - (#
					choose(N-m[9],n1) +#
					choose(N-m[9],n1) - #
					choose(N-m[9]-m[9],n1)#
				) / choose(N,n1),#
				length(vec)#
			)#
		)	#
	)	#
}
setwd('/Users/KSauby/Documents/Projects/ACS/tests/testthat')
test_that("R_hat, Horvitz-Thompson Ratio Estimator, without replacement", {#
	N=100#
	n1=13#
	m=c(5,5,5,5,5,3,3,3,1,1,1,1,1)#
	m_threshold=4#
	pi_ij_RACS_mthresh_6 	<- pi_ij_RACS(N,n1,m,m_threshold=6)#
	pi_ij_RACS_no_mthresh 	<- pi_ij(N,n1,m)#
	pi_ij_RACS_mthresh_4 	<- pi_ij_RACS(N,n1,m,m_threshold)#
#
	# 3 is not over m_threshold#
	# 3 is not over m_threshold#
	expect_that(#
		(vec = as.vector(pi_ij_RACS_mthresh_4[6:8,6:8])),#
		 is_equivalent_to(#
			rep(#
				1 - (#
					choose(N-m[6],n1) +#
					choose(N-m[6],n1) - #
					choose(N-m[6]-m[6],n1)#
				) / choose(N,n1),#
				length(vec)#
			)#
		)	#
	)#
	# 5 is over threshold#
	# 3 is not#
	expect_that(#
		(vec = c(#
			pi_ij_RACS_mthresh_4[1:5,6:8],#
			pi_ij_RACS_mthresh_4[6:8,1:5]#
		)),#
		 is_equivalent_to(#
			rep(#
				1 - (#
					choose(N-m_threshold,n1) +#
					choose(N-m[6],n1) - #
					choose(N-m_threshold-m[6],n1)#
				) / choose(N,n1),#
				length(vec)#
			)#
		)	#
	)#
	# 5 is over threshold#
	# 1 is not#
	expect_that(#
		(vec = c(#
			pi_ij_RACS_mthresh_4[1:5,9:13],#
			pi_ij_RACS_mthresh_4[9:13,1:5]#
		)),#
		 is_equivalent_to(#
			rep(#
				1 - (#
					choose(N-m_threshold,n1) +#
					choose(N-m[9],n1) - #
					choose(N-m_threshold-m[9],n1)#
				) / choose(N,n1),#
				length(vec)#
			)#
		)	#
	)#
	# 3 is not over the threshold#
	# 1 is not over the threshold#
	expect_that(#
		(vec = c(#
			pi_ij_RACS_mthresh_4[6:8,9:13],#
			pi_ij_RACS_mthresh_4[9:13,6:8]#
		)),#
		 is_equivalent_to(#
			rep(#
				1 - (#
					choose(N-m[6],n1) +#
					choose(N-m[9],n1) - #
					choose(N-m[6]-m[9],n1)#
				) / choose(N,n1),#
				length(vec)#
			)#
		)	#
	)#
	# 1 is not over the threshold#
	# 1 is not over the threshold	#
	expect_that(#
		(vec = as.vector(pi_ij_RACS_mthresh_4[9:13,9:13])),#
		 is_equivalent_to(#
			rep(#
				1 - (#
					choose(N-m[9],n1) +#
					choose(N-m[9],n1) - #
					choose(N-m[9]-m[9],n1)#
				) / choose(N,n1),#
				length(vec)#
			)#
		)	#
	)	#
}
)
setwd('/Users/KSauby/Documents/Projects/ACS/tests/testthat')
expect_that(#
		(vec = c(#
			pi_ij_RACS_mthresh_4[1:5,6:8],#
			pi_ij_RACS_mthresh_4[6:8,1:5]#
		)),#
		 is_equivalent_to(#
			rep(#
				1 - (#
					choose(N-m_threshold,n1) +#
					choose(N-3,n1) - #
					choose(N-m_threshold-3,n1)#
				) / choose(N,n1),#
				length(vec)#
			)#
		)	#
	)
setwd('/Users/KSauby/Documents/Projects/ACS/tests/testthat')
expect_that(#
		(vec = as.vector(pi_ij_RACS_mthresh_4[6:8,6:8])),#
		 is_equivalent_to(#
			rep(#
				1 - (#
					choose(N-3,n1) +#
					choose(N-3,n1) - #
					choose(N-3-3,n1)#
				) / choose(N,n1),#
				length(vec)#
			)#
		)	#
	)
setwd('/Users/KSauby/Documents/Projects/ACS/tests/testthat')
test_that("R_hat, Horvitz-Thompson Ratio Estimator, without replacement", {#
	N=100#
	n1=13#
	m=c(5,5,5,5,5,3,3,3,1,1,1,1,1)#
	m_threshold=4#
	pi_ij_RACS_mthresh_6 	<- pi_ij_RACS(N,n1,m,m_threshold=6)#
	pi_ij_RACS_no_mthresh 	<- pi_ij(N,n1,m)#
	pi_ij_RACS_mthresh_4 	<- pi_ij_RACS(N,n1,m,m_threshold)#
#
	# ARE PI_IJ FORMULAS EQUIVALENT WHEN ALL M ARE BELOW M_THRESHOLD#
	# MANUALLY CALCULATE AND CHECK VALUES IN MATRIX#
	# 3 is not over m_threshold#
	# 3 is not over m_threshold#
	expect_that(#
		(vec = as.vector(pi_ij_RACS_mthresh_4[6:8,6:8])),#
		 is_equivalent_to(#
			rep(#
				1 - (#
					choose(N-3,n1) +#
					choose(N-3,n1) - #
					choose(N-3-3,n1)#
				) / choose(N,n1),#
				length(vec)#
			)#
		)	#
	)#
	# 5 is over threshold#
	# 3 is not#
	expect_that(#
		(vec = c(#
			pi_ij_RACS_mthresh_4[1:5,6:8],#
			pi_ij_RACS_mthresh_4[6:8,1:5]#
		)),#
		 is_equivalent_to(#
			rep(#
				1 - (#
					choose(N-m_threshold,n1) +#
					choose(N-3,n1) - #
					choose(N-m_threshold-3,n1)#
				) / choose(N,n1),#
				length(vec)#
			)#
		)	#
	)#
	# 5 is over threshold#
	# 1 is not#
	expect_that(#
		(vec = c(#
			pi_ij_RACS_mthresh_4[1:5,9:13],#
			pi_ij_RACS_mthresh_4[9:13,1:5]#
		)),#
		 is_equivalent_to(#
			rep(#
				1 - (#
					choose(N-m_threshold,n1) +#
					choose(N-1,n1) - #
					choose(N-m_threshold-1,n1)#
				) / choose(N,n1),#
				length(vec)#
			)#
		)	#
	)#
	# 3 is not over the threshold#
	# 1 is not over the threshold#
	expect_that(#
		(vec = c(#
			pi_ij_RACS_mthresh_4[6:8,9:13],#
			pi_ij_RACS_mthresh_4[9:13,6:8]#
		)),#
		 is_equivalent_to(#
			rep(#
				1 - (#
					choose(N-3,n1) +#
					choose(N-1,n1) - #
					choose(N-3-1,n1)#
				) / choose(N,n1),#
				length(vec)#
			)#
		)	#
	)#
	# 1 is not over the threshold#
	# 1 is not over the threshold	#
	expect_that(#
		(vec = as.vector(pi_ij_RACS_mthresh_4[9:13,9:13])),#
		 is_equivalent_to(#
			rep(#
				1 - (#
					choose(N-1,n1) +#
					choose(N-1,n1) - #
					choose(N-1-1,n1)#
				) / choose(N,n1),#
				length(vec)#
			)#
		)	#
	)	#
}#
)
setwd('/Users/KSauby/Documents/Projects/ACS/tests/testthat')
expect_that(#
		(vec = c(#
			pi_ij_RACS_mthresh_4[6:8,9:13],#
			pi_ij_RACS_mthresh_4[9:13,6:8]#
		)),#
		 equals(#
			rep(#
				1 - (#
					choose(N-3,n1) +#
					choose(N-1,n1) - #
					choose(N-3-1,n1)#
				) / choose(N,n1),#
				length(vec)#
			)#
		)	#
	)#
	# 1 is not over the threshold
setwd('/Users/KSauby/Documents/Projects/ACS/tests/testthat')
expect_that(#
		pi_ij_RACS_mthresh_6,#
		 equals(pi_ij_RACS_no_mthresh)	#
	)
setwd('/Users/KSauby/Documents/Projects/ACS/tests/testthat')
test_that("R_hat, Horvitz-Thompson Ratio Estimator, without replacement", {#
	N=100#
	n1=13#
	m=c(5,5,5,5,5,3,3,3,1,1,1,1,1)#
	m_threshold=4#
	pi_ij_RACS_mthresh_6 	<- pi_ij_RACS(N,n1,m,m_threshold=6)#
	pi_ij_RACS_no_mthresh 	<- pi_ij(N,n1,m)#
	pi_ij_RACS_mthresh_4 	<- pi_ij_RACS(N,n1,m,m_threshold)#
#
	# ARE PI_IJ FORMULAS EQUIVALENT WHEN ALL M ARE BELOW M_THRESHOLD#
	expect_that(#
		pi_ij_RACS_mthresh_6,#
		 equals(pi_ij_RACS_no_mthresh)	#
	)#
	# MANUALLY CALCULATE AND CHECK VALUES IN MATRIX#
	# 3 is not over m_threshold#
	# 3 is not over m_threshold#
	expect_that(#
		(vec = as.vector(pi_ij_RACS_mthresh_4[6:8,6:8])),#
		 equals(#
			rep(#
				1 - (#
					choose(N-3,n1) +#
					choose(N-3,n1) - #
					choose(N-3-3,n1)#
				) / choose(N,n1),#
				length(vec)#
			)#
		)	#
	)#
	# 5 is over threshold#
	# 3 is not#
	expect_that(#
		(vec = c(#
			pi_ij_RACS_mthresh_4[1:5,6:8],#
			pi_ij_RACS_mthresh_4[6:8,1:5]#
		)),#
		 equals(#
			rep(#
				1 - (#
					choose(N-m_threshold,n1) +#
					choose(N-3,n1) - #
					choose(N-m_threshold-3,n1)#
				) / choose(N,n1),#
				length(vec)#
			)#
		)	#
	)#
	# 5 is over threshold#
	# 1 is not#
	expect_that(#
		(vec = c(#
			pi_ij_RACS_mthresh_4[1:5,9:13],#
			pi_ij_RACS_mthresh_4[9:13,1:5]#
		)),#
		 equals(#
			rep(#
				1 - (#
					choose(N-m_threshold,n1) +#
					choose(N-1,n1) - #
					choose(N-m_threshold-1,n1)#
				) / choose(N,n1),#
				length(vec)#
			)#
		)	#
	)#
	# 3 is not over the threshold#
	# 1 is not over the threshold#
	expect_that(#
		(vec = c(#
			pi_ij_RACS_mthresh_4[6:8,9:13],#
			pi_ij_RACS_mthresh_4[9:13,6:8]#
		)),#
		 equals(#
			rep(#
				1 - (#
					choose(N-3,n1) +#
					choose(N-1,n1) - #
					choose(N-3-1,n1)#
				) / choose(N,n1),#
				length(vec)#
			)#
		)	#
	)#
	# 1 is not over the threshold#
	# 1 is not over the threshold	#
	expect_that(#
		(vec = as.vector(pi_ij_RACS_mthresh_4[9:13,9:13])),#
		 equals(#
			rep(#
				1 - (#
					choose(N-1,n1) +#
					choose(N-1,n1) - #
					choose(N-1-1,n1)#
				) / choose(N,n1),#
				length(vec)#
			)#
		)	#
	)	#
}#
)
setwd('/Users/KSauby/Documents/Projects/ACSampling_project')
library(ProjectTemplate)#
#
# when working on a Windows computer#
# setwd("C:/Users/KSauby/Dropbox/gradschool/Research/Projects/sampling")#
#
# load project#
load.project()
setwd('/Users/KSauby/Documents/Projects/ACS/R')
patch = patch_data %>% filter(n.networks==unique(patch_data$n.networks)[3])#
#
S <- createSRS(population=patch, seed=26, n1=10)#
initial_sample <- S[, c("x", "y")]#
RACS = createRACS(population=patch, seed=26, n1=10, y_variable="Cactus", initial_sample=initial_sample) %>%#
mutate(Design="(b) RACS, n = 45")
setwd('/Users/KSauby/Documents/Projects/ACS/R')
RACS
setwd('/Users/KSauby/Documents/Projects/ACS/R')
var_y_HT_RACS(N=dim(patch)[1], n1=10, m=RACS$m, y=RACS$Cactus, m_threshold=7)
setwd('/Users/KSauby/Documents/Projects/ACS/R')
var_y_HT_RACS <- function(N, n1, m, y, m_threshold, pi_i_values=NULL) {#
	Z = data.frame(y=y, m=m)#
	A <- Z %>% filter(m <= m_threshold)#
	B <- Z %>% filter(m > m_threshold)#
	if (dim(A)[1] > 0) {#
		A$pi_i_values = pi_i(N, n1, A$m)	#
	}#
	if (dim(B)[1] > 0) {	#
		B$pi_i_values = pi_i(N, n1, m_threshold)#
	}#
	Z <- rbind.fill(A, B) %>% as.data.frame#
	pi_ij_values 		<- pi_ij_RACS(N, n1, m) %>% as.matrix#
	# replace diagonal (where h = j)#
	diag(pi_ij_values) 	<- Z$pi_i_values	#
	# dataframe to store sum(k=1 to kappa) sum(m=1 to kappa)#
	V = as.data.frame(matrix(nrow=length(m), ncol=length(m), NA))#
	# calculate for all pairs#
	V <- var_y_HT_cpp(m, pi_i_values, pi_ij_values, y)#
	sum(V, na.rm=T)/(N^2)#
}
setwd('/Users/KSauby/Documents/Projects/ACS/R')
var_y_HT_RACS(N=dim(patch)[1], n1=10, m=RACS$m, y=RACS$Cactus, m_threshold=7)
setwd('/Users/KSauby/Documents/Projects/ACS/R')
N=dim(patch)[1]
setwd('/Users/KSauby/Documents/Projects/ACS/R')
n1=10
setwd('/Users/KSauby/Documents/Projects/ACS/R')
m=RACS$m
setwd('/Users/KSauby/Documents/Projects/ACS/R')
y=RACS$Cactus
setwd('/Users/KSauby/Documents/Projects/ACS/R')
m_threshold=7
setwd('/Users/KSauby/Documents/Projects/ACS/R')
Z = data.frame(y=y, m=m)#
	A <- Z %>% filter(m <= m_threshold)#
	B <- Z %>% filter(m > m_threshold)#
	if (dim(A)[1] > 0) {#
		A$pi_i_values = pi_i(N, n1, A$m)	#
	}#
	if (dim(B)[1] > 0) {	#
		B$pi_i_values = pi_i(N, n1, m_threshold)#
	}#
	Z <- rbind.fill(A, B) %>% as.data.frame#
	pi_ij_values 		<- pi_ij_RACS(N, n1, m) %>% as.matrix
setwd('/Users/KSauby/Documents/Projects/ACS/R')
var_y_HT_RACS <- function(N, n1, m, y, m_threshold, pi_i_values=NULL) {#
	Z = data.frame(y=y, m=m)#
	A <- Z %>% filter(m <= m_threshold)#
	B <- Z %>% filter(m > m_threshold)#
	if (dim(A)[1] > 0) {#
		A$pi_i_values = pi_i(N, n1, A$m)	#
	}#
	if (dim(B)[1] > 0) {	#
		B$pi_i_values = pi_i(N, n1, m_threshold)#
	}#
	Z <- rbind.fill(A, B) %>% as.data.frame#
	pi_ij_values 		<- pi_ij_RACS(N, n1, m, m_threshold) %>% as.matrix#
	# replace diagonal (where h = j)#
	diag(pi_ij_values) 	<- Z$pi_i_values	#
	# dataframe to store sum(k=1 to kappa) sum(m=1 to kappa)#
	V = as.data.frame(matrix(nrow=length(m), ncol=length(m), NA))#
	# calculate for all pairs#
	V <- var_y_HT_cpp(m, pi_i_values, pi_ij_values, y)#
	sum(V, na.rm=T)/(N^2)#
}
setwd('/Users/KSauby/Documents/Projects/ACS/R')
var_y_HT_RACS(N=dim(patch)[1], n1=10, m=RACS$m, y=RACS$Cactus, m_threshold=7)
setwd('/Users/KSauby/Documents/Projects')
setwd("./ACS")#
#setwd("./modresproc")#
devtools::test()#
devtools::document()#
devtools::install()
setwd('/Users/KSauby/Documents/Projects')
setwd("./ACS")#
#setwd("./modresproc")#
devtools::test()#
devtools::document()#
devtools::install()
setwd('/Users/KSauby/Documents/Projects')
setwd("./ACS")#
#setwd("./modresproc")#
devtools::test()#
devtools::document()#
devtools::install()
library(testthat)
setwd('/Users/KSauby/Documents/Projects')
setwd("./ACS")#
#setwd("./modresproc")#
devtools::test()
setwd('/Users/KSauby/Documents/Projects/ACS/tests/testthat')
#### TESTING#
#
test_that("y_HT, Horvitz-Thompson Mean Estimator", {#
	# Ch. 24, Exercise #2, p. 307, from Thompson (2002)#
	expect_that(#
		round(#
			y_HT(#
				N = 1000, #
				n1 = 100, #
				m = c(2,3,rep(1,98)), #
				y = c(3,6,rep(0, 98)), #
				sampling = "SRSWOR", #
				criterion = 0#
			)*1000, 0#
		),#
		equals(38)#
	)#
	# Example from Thompson (1990), end of second full paragraph, p. 1055#
	mk <- c(1,0,2,2)#
	y_value <- c(1,2,10,1000)#
	sampling <- c("S","C","S","C")#
	dat <- data.frame(mk, y_value, sampling)#
	dat$mk %<>% as.numeric#
	dat$y_value %<>% as.numeric#
	dat_filter <- dat %>% filter(sampling=="S" | y_value > 4)#
	expect_that(#
		round(#
			y_HT(#
				N = 5, #
				m = dat_filter$mk, #
				n1 = 2, #
				y = dat_filter$y_value#
			), 2#
		),#
		equals(289.07)#
	)#
})
setwd('/Users/KSauby/Documents/Projects/ACS/tests/testthat')
expect_that(#
		round(#
			y_HT(#
				N = 1000, #
				n1 = 100, #
				m = c(2,3,rep(1,98)), #
				y = c(3,6,rep(0, 98)), #
				sampling = "SRSWOR", #
				criterion = 0#
			)*1000, 0#
		),#
		equals(38)#
	)
setwd('/Users/KSauby/Documents/Projects/ACS/tests/testthat')
y_HT(#
				N = 1000, #
				n1 = 100, #
				m = c(2,3,rep(1,98)), #
				y = c(3,6,rep(0, 98)), #
				sampling = "SRSWOR", #
				criterion = 0#
			)*1000
setwd('/Users/KSauby/Documents/Projects/ACS/tests/testthat')
round(#
			y_HT(#
				N = 1000, #
				n1 = 100, #
				m = c(2,3,rep(1,98)), #
				y = c(3,6,rep(0, 98)), #
				sampling = "SRSWOR", #
				criterion = 0#
			)*1000, 0#
		)
setwd('/Users/KSauby/Documents/Projects/ACS/tests/testthat')
expect_that(#
		round(#
			y_HT(#
				N = 1000, #
				n1 = 100, #
				m = c(2,3,rep(1,98)), #
				y = c(3,6,rep(0, 98)), #
				sampling = "SRSWOR", #
				criterion = 0#
			)*1000, 0#
		),#
		equals(38)#
	)
?expect_that
setwd('/Users/KSauby/Documents/Projects/ACS/tests/testthat')
round(#
			y_HT(#
				N = 1000, #
				n1 = 100, #
				m = c(2,3,rep(1,98)), #
				y = c(3,6,rep(0, 98)), #
				sampling = "SRSWOR", #
				criterion = 0#
			)*1000, 0#
		)

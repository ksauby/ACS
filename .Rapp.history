41180-35583
41200-35583
6+3.17+5
11.64*.7
.75*4
.85*4
.85*5
.9*5
.9*4
1+2+5+17+12+19
.29*4
.41*6
.41*10
2.89/6
2.89/6*10
.29*4
.58*4
.58*10
.43*4
.43*10
.48*10
.48*4
.39*4
.39*8
.39*10
4*.22
8*.22
4*.29
8*.29
4*.35
8*.35
1.74*5
1.74*5*.9
.58*20
5.99*.95
5.99*.95 - .2
286*.13
6*8*.13
15*.32
33+29
33+29+25
33+29+25+13
1.15-.87
1.15-.62
50+.29+.33
1.15 - .50-.29-.33
8.27+.69
7.76+.69
19+13+7
233.27*11
19+13+7
3081.26-926.29
70.50-52.75
70.50-52.75-.99
70.50-52.75
6.7+3.75
10.79-10.45
39.99*.6
80/3
263.50/541.71
485.04/541.71
263.50/541.71
397.07/541.71
3/75
25.5/75
2.5/75
32/500
5.82/4*10
5.82/4*10*.7
5.82/4*10*.6
5.82/4*10*.65
5.82/4*6*.65
5.82/4*4*.65
5.82/4*4*.6
5.82/4*6*.6
4.94*.8
4.66*.8
4.66*.7
4.66*.75
3.48/4
3.48/4*12
3.48/4*12*.9
3.48/4*12*.8
.29+.32+.05+.05
2.91/2
3.49/2
6.97/2
(3.49+5.82)/2
3.49/2
4.94/2
2.32+14.83
17.15/2
7.57/2
6.99/2
9.31/2
11.64/2
4.66/2
11.64/2
7.57/2
4.66/2
(1.74+2.61+12.21)/2
.04*4+.2*4+.32+.37+.1
.04*4+.2*4+.32+.37+.1+.8+.25+.25+.48+.45+.6+.17+.22+.08
.04*4+.2*4+.32+.37+.1+.8+.25+.25+.48+.45+.6+.17+.22+.08+.13*8
.04*4+.2*4+.32+.37+.1+.8+.25+.25+.48+.45+.6+.17+.22+.08+.13*8+.32+.32+.29+.33+.32
.04*4+.2*4+.32+.37+.1+.8+.25+.25+.48+.45+.6+.17+.22+.08+.13*8+.32+.32+.29+.33+.32+1+.5+.45+.03+.11+.02
12.9-9.78
.22+.08+.25+.17+.6+.25+.32+.33+.29+.32+.32+1+.5+2+1+.04*4+.2*4+.1+.45+.37+.32+.8+.48+.13*8+.12+.03+.11+.02+.45
3.49+1.75+1.16+1.16+2.33+1.16+.87+.58+.29+.29
setwd('/Users/KSauby/Documents/Projects/ACSampling_project')
library(ProjectTemplate)#
#
# when working on a Windows computer#
# setwd("C:/Users/KSauby/Dropbox/gradschool/Research/Projects/sampling")#
#
# load project#
load.project()
setwd('/Users/KSauby/Documents/Projects/ACSampling_project/code/Manuscript/simulations')
# -----------------------------------------------------------------------------##
# ABUNDANCE VARIABLES#
# -----------------------------------------------------------------------------##
# -----------------------------------------------------------------------------##
# OCCUPANCY VARIABLES#
# -----------------------------------------------------------------------------##
ovar <- c(#
	"Stricta",#
	"Pusilla",#
	"Cactus"#
)#
# -----------------------------------------------------------------------------##
# RATIO VARIABLES#
# -----------------------------------------------------------------------------##
rvar <- c(#
	"MEPR_on_Stricta",#
	"CACA_on_Stricta",#
	"Percent_Cover_Stricta",#
	"Height_Stricta",#
	#"Old_Moth_Evidence_Pusilla",#
	"Old_Moth_Evidence_Stricta"#
)#
#
# "Percent_Cover_Pusilla",#
# "Height_Pusilla",#
# )
setwd('/Users/KSauby/Documents/Projects/ACSampling_project/code/Manuscript/simulations')
N 					<- patch_data$N[1]#
nsamples			<- c( 20, 30, 40, 75, 100) #, 150, 200)#
grouping.variables	<- c("population", "realization")#
#
patch_data <- summarizeNetworkInformation(#
	population_data = patch_data, #
	variables = c(ovar, rvar), #
	grouping.variables = grouping.variables, #
	nsamples = nsamples, #
	m_var="Cactus"#
)
setwd('/Users/KSauby/Documents/Projects/ACSampling_project/code/Manuscript/simulations')
population.grouping.variables	<- c("population")#
sampling.grouping.variables <- c("N.SRSWOR.plots", "SamplingDesign", "Plots")#
statistics 			<- c("mean", "var")#
ratio.statistics	<- c("mean")#
#
patch_data_summary_wide <- createWidePopulationSummaryStatistics(#
	PopulationSummaryStatistics = patch_data_summary,#
	ovar = ovar,#
	rvar = rvar#
)
setwd('/Users/KSauby/Documents/Projects/ACSampling_project/code/Manuscript/simulations')
population_data_summary	= patch_data_summary_wide
setwd('/Users/KSauby/Documents/Projects/ACSampling_project/code/Manuscript/simulations')
simulation_data		= simdata_all
setwd('/Users/KSauby/Documents/Projects/ACSampling_project/code/Manuscript/simulations')
o_rvar			= "Stricta"
head(simdata_all)
setwd('/Users/KSauby/Documents/Projects/ACS/R')
rvar_variables <- paste(rvar, "_ratio", sep="")#
	. <- n_sims <- A <- B <- C <- D <- E <- I <- G <- H <- NULL#
	A <- merge(#
		population_data_summary, #
		simulation_data, #
		by=population.grouping.variables#
	)#
	# ------------------------------------------------------------------------ ##
	# OCCUPANCY VARIABLES	#
	# ------------------------------------------------------------------------ ##
	B <- A #
	# add number of simulations to dataset#
	B %<>% #
		group_by_(.dots = c(#
			population.grouping.variables, #
			sampling.grouping.variables#
		)) %>%#
		mutate(n_sims = n())
setwd('/Users/KSauby/Documents/Projects/ACS/R')
dataframe=B
setwd('/Users/KSauby/Documents/Projects/ACS/R')
variables=ovar
setwd('/Users/KSauby/Documents/Projects/ACS/R')
temp <- dataframe %>% group_by_(.dots = c(#
		population.grouping.variables, #
		sampling.grouping.variables, #
		"n_sims"#
	))#
	# list for saving results#
	C <- vector("list", length(variables))#
	# for each of the population.grouping.va
setwd('/Users/KSauby/Documents/Projects/ACS/R')
variables
setwd('/Users/KSauby/Documents/Projects/ACS/R')
calculateMeanofObservedMeans <- function(dataframe, variables, nsims) {#
	# group data to prep for processing by #
	#		population.grouping.variables, #
	#		sampling.grouping.variables, and#
	#		n_sims#
	temp <- dataframe %>% group_by_(.dots = c(#
		population.grouping.variables, #
		sampling.grouping.variables, #
		"n_sims"#
	))#
	# list for saving results#
	C <- vector("list", length(variables))#
	# for each of the population.grouping.variables and sampling.grouping.variables, calculate:#
	#	mean of observed means#
	#	sample size used for those calculations#
	for (i in 1:length(variables)) {#
		C[[i]] <- list()#
		# observed mean#
		C[[i]] <- temp %>%#
			summarise_(#
				mean_of_observed_means = interp(#
					~mean(var, na.rm = TRUE), #
					var = as.name(#
						paste(#
							variables[i],#
							"_mean_observed",#
							sep=""#
						)#
					)#
				),#
				sample_size = interp(#
					~length(var[which(!is.na(var))]), #
					var = as.name(#
						paste(#
							variables[i],#
							"_mean_observed",#
							sep=""#
						)#
					)#
				)#
			) %>%#
			setnames(#
		      	.,#
		      	"mean_of_observed_means",#
		      	paste(#
		      		c(rvar_variables, o_rvar)[i],#
		      		"_mean_of_observed_means",#
		      		sep=""#
				)#
			) %>%#
			setnames(#
		      	.,#
		      	"sample_size",#
		      	paste(#
		      		c(rvar_variables, o_rvar)[i],#
		      		"_mean_of_observed_means_n",#
		      		sep=""#
				)#
			)#
		D <- Reduce(#
			function(x, y) merge(#
				x, y,#
				by=c(#
					population.grouping.variables, #
					sampling.grouping.variables, #
					"n_sims"#
				)#
			),#
			C#
		)#
		dataframe %<>% merge(#
			D, #
			by=c(#
				population.grouping.variables, #
				sampling.grouping.variables,#
				"n_sims"#
			)#
		)#
	}#
	return(dataframe)#
}
setwd('/Users/KSauby/Documents/Projects/ACS/R')
B %<>% calculateMeanofObservedMeans(dataframe=B, variables=ovar)
setwd('/Users/KSauby/Documents/Projects/ACS/R')
temp <- dataframe %>% group_by_(.dots = c(#
		population.grouping.variables, #
		sampling.grouping.variables, #
		"n_sims"#
	))#
	# list for saving results#
	C <- vector("list", length(variables))#
	# for each of the population.grouping.variables and sampling.grouping.variables, calculate:#
	#	mean of observed means#
	#	sample size used for those calculations#
	for (i in 1:length(variables)) {#
		C[[i]] <- list()#
		# observed mean#
		C[[i]] <- temp %>%#
			summarise_(#
				mean_of_observed_means = interp(#
					~mean(var, na.rm = TRUE), #
					var = as.name(#
						paste(#
							variables[i],#
							"_mean_observed",#
							sep=""#
						)#
					)#
				),#
				sample_size = interp(#
					~length(var[which(!is.na(var))]), #
					var = as.name(#
						paste(#
							variables[i],#
							"_mean_observed",#
							sep=""#
						)#
					)#
				)#
			) %>%#
			setnames(#
		      	.,#
		      	"mean_of_observed_means",#
		      	paste(#
		      		c(rvar_variables, o_rvar)[i],#
		      		"_mean_of_observed_means",#
		      		sep=""#
				)#
			) %>%#
			setnames(#
		      	.,#
		      	"sample_size",#
		      	paste(#
		      		c(rvar_variables, o_rvar)[i],#
		      		"_mean_of_observed_means_n",#
		      		sep=""#
				)#
			)#
		D <- Reduce(#
			function(x, y) merge(#
				x, y,#
				by=c(#
					population.grouping.variables, #
					sampling.grouping.variables, #
					"n_sims"#
				)#
			),#
			C#
		)#
		dataframe %<>% merge(#
			D, #
			by=c(#
				population.grouping.variables, #
				sampling.grouping.variables,#
				"n_sims"#
			)#
		)#
	}
i=1
setwd('/Users/KSauby/Documents/Projects/ACS/R')
C[[i]] <- list()#
		# observed mean#
		C[[i]] <- temp %>%#
			summarise_(#
				mean_of_observed_means = interp(#
					~mean(var, na.rm = TRUE), #
					var = as.name(#
						paste(#
							variables[i],#
							"_mean_observed",#
							sep=""#
						)#
					)#
				),#
				sample_size = interp(#
					~length(var[which(!is.na(var))]), #
					var = as.name(#
						paste(#
							variables[i],#
							"_mean_observed",#
							sep=""#
						)#
					)#
				)#
			) %>%#
			setnames(#
		      	.,#
		      	"mean_of_observed_means",#
		      	paste(#
		      		c(rvar_variables, o_rvar)[i],#
		      		"_mean_of_observed_means",#
		      		sep=""#
				)#
			) %>%#
			setnames(#
		      	.,#
		      	"sample_size",#
		      	paste(#
		      		c(rvar_variables, o_rvar)[i],#
		      		"_mean_of_observed_means_n",#
		      		sep=""#
				)#
			)
setwd('/Users/KSauby/Documents/Projects/ACS/R')
C[[i]] <- list()#
		# observed mean#
		C[[i]] <- temp %>%#
			summarise_(#
				mean_of_observed_means = interp(#
					~mean(var, na.rm = TRUE), #
					var = as.name(#
						paste(#
							variables[i],#
							"_mean_observed",#
							sep=""#
						)#
					)#
				),#
				sample_size = interp(#
					~length(var[which(!is.na(var))]), #
					var = as.name(#
						paste(#
							variables[i],#
							"_mean_observed",#
							sep=""#
						)#
					)#
				)#
			) %>%#
			setnames(#
		      	.,#
		      	"mean_of_observed_means",#
		      	paste(#
		      		c(rvar_variables, o_rvar)[i],#
		      		"_mean_of_observed_means",#
		      		sep=""#
				)#
			) %>%#
			setnames(#
		      	.,#
		      	"sample_size",#
		      	paste(#
		      		c(rvar_variables, o_rvar)[i],#
		      		"_mean_of_observed_means_n",#
		      		sep=""#
				)#
			)#
		}
setwd('/Users/KSauby/Documents/Projects/ACS/R')
for (i in 1:length(variables)) {#
		C[[i]] <- list()#
		# observed mean#
		C[[i]] <- temp %>%#
			summarise_(#
				mean_of_observed_means = interp(#
					~mean(var, na.rm = TRUE), #
					var = as.name(#
						paste(#
							variables[i],#
							"_mean_observed",#
							sep=""#
						)#
					)#
				),#
				sample_size = interp(#
					~length(var[which(!is.na(var))]), #
					var = as.name(#
						paste(#
							variables[i],#
							"_mean_observed",#
							sep=""#
						)#
					)#
				)#
			) %>%#
			setnames(#
		      	.,#
		      	"mean_of_observed_means",#
		      	paste(#
		      		c(rvar_variables, o_rvar)[i],#
		      		"_mean_of_observed_means",#
		      		sep=""#
				)#
			) %>%#
			setnames(#
		      	.,#
		      	"sample_size",#
		      	paste(#
		      		c(rvar_variables, o_rvar)[i],#
		      		"_mean_of_observed_means_n",#
		      		sep=""#
				)#
			)#
		}
setwd('/Users/KSauby/Documents/Projects/ACS/R')
D <- Reduce(#
			function(x, y) merge(#
				x, y,#
				by=c(#
					population.grouping.variables, #
					sampling.grouping.variables, #
					"n_sims"#
				)#
			),#
			C#
		)
setwd('/Users/KSauby/Documents/Projects/ACS/R')
dataframe %<>% merge(#
			D, #
			by=c(#
				population.grouping.variables, #
				sampling.grouping.variables,#
				"n_sims"#
			)#
		)
setwd('/Users/KSauby/Documents/Projects/ACS/R')
B %<>% calculateMeanofObservedMeans(dataframe=B, variables=ovar)
setwd('/Users/KSauby/Documents/Projects/ACS/R')
calculateMeanofObservedMeans <- function(dataframe, variables, nsims) {#
	# group data to prep for processing by #
	#		population.grouping.variables, #
	#		sampling.grouping.variables, and#
	#		n_sims#
	temp <- dataframe %>% group_by_(.dots = c(#
		population.grouping.variables, #
		sampling.grouping.variables, #
		"n_sims"#
	))#
	# list for saving results#
	C <- vector("list", length(variables))#
	# for each of the population.grouping.variables and sampling.grouping.variables, calculate:#
	#	mean of observed means#
	#	sample size used for those calculations#
	for (i in 1:length(variables)) {#
		C[[i]] <- list()#
		# observed mean#
		C[[i]] <- temp %>%#
			summarise_(#
				mean_of_observed_means = interp(#
					~mean(var, na.rm = TRUE), #
					var = as.name(#
						paste(#
							variables[i],#
							"_mean_observed",#
							sep=""#
						)#
					)#
				),#
				sample_size = interp(#
					~length(var[which(!is.na(var))]), #
					var = as.name(#
						paste(#
							variables[i],#
							"_mean_observed",#
							sep=""#
						)#
					)#
				)#
			) %>%#
			setnames(#
		      	.,#
		      	"mean_of_observed_means",#
		      	paste(#
		      		c(rvar_variables, o_rvar)[i],#
		      		"_mean_of_observed_means",#
		      		sep=""#
				)#
			) %>%#
			setnames(#
		      	.,#
		      	"sample_size",#
		      	paste(#
		      		c(rvar_variables, o_rvar)[i],#
		      		"_mean_of_observed_means_n",#
		      		sep=""#
				)#
			)#
	}#
	D <- Reduce(#
		function(x, y) merge(#
			x, y,#
			by=c(#
				population.grouping.variables, #
				sampling.grouping.variables, #
				"n_sims"#
			)#
		),#
		C#
	)#
	dataframe %<>% merge(#
		D, #
		by=c(#
			population.grouping.variables, #
			sampling.grouping.variables,#
			"n_sims"#
		)#
	)#
	return(dataframe)#
}
setwd('/Users/KSauby/Documents/Projects/ACS/R')
B %<>% calculateMeanofObservedMeans(dataframe=B, variables=ovar)
setwd('/Users/KSauby/Documents/Projects/ACS/R')
# ------------------------------------------------------------------------ ##
	E <- A#
	# E %<>% filter(Stricta_mean_observed!=0)#
	E %<>% calculateMeanofObservedMeans(dataframe=B, variables=c(rvar_variables, o_rvar))
setwd('/Users/KSauby/Documents/Projects/ACS/R')
E %<>% calculatedSquaredDifferences(variables=c(o_rvar, rvar_variables))#
	E %<>% calculateDifferencesinMeans(variables=c(o_rvar, rvar_variables))#
#
	B %<>% calculatedSquaredDifferences(variables=ovar)#
	B %<>% calculateDifferencesinMeans(variables=ovar)
setwd('/Users/KSauby/Documents/Projects/ACS/R')
calculatedSquaredDifferences <- function(dataframe, variables) {#
	# for each simulation and variable, calculate:#
	#	(observed mean - true mean)^2#
	for (i in 1:length(variables)) {#
		dataframe %<>%#
			mutate(#
				observed_minus_true_squared = #
						# observed -#
						(eval(#
							parse(#
								text=paste(#
									variables[i], #
									"_mean_observed", #
									sep=""#
								)#
							)#
						) - #
						# true#
						eval(#
							parse(#
								text = paste(#
								variables[i], #
								"_mean", #
								sep=""#
							)#
						)#
						)#
				)^2#
			) %>%#
			setnames(#
				., #
				"observed_minus_true_squared", #
				paste(#
					variables[i], #
					"_mean_observed_minus_true_squared", #
					sep=""#
				)#
			)#
	}#
	return(dataframe)#
}
setwd('/Users/KSauby/Documents/Projects/ACS/R')
E %<>% calculatedSquaredDifferences(variables=c(o_rvar, rvar_variables))#
	E %<>% calculateDifferencesinMeans(variables=c(o_rvar, rvar_variables))#
#
	B %<>% calculatedSquaredDifferences(variables=ovar)#
	B %<>% calculateDifferencesinMeans(variables=ovar)
setwd('/Users/KSauby/Documents/Projects/ACS/R')
calculateDifferencesinMeans <- function(dataframe, variables) {#
	# for each simulation and variable, calculate:#
	#	observed mean - mean of observed means#
	for (i in 1:length(variables)) {#
		dataframe %<>%#
			mutate(#
				observed_minus_mean_of_observed_means = #
						# (observed -#
						eval(#
							parse(#
								text = paste(#
									variables[i], #
									"_mean_observed", #
									sep=""#
								)#
							)#
						) - #
						# true)#
						eval(#
							parse(#
								text = paste(#
									variables[i], #
									"_mean_of_observed_means", #
									sep=""#
								)#
							)#
						)#
			) %>%#
			setnames(#
				., #
				"observed_minus_mean_of_observed_means", #
				paste(#
					variables[i], #
					"_observed_minus_mean_of_observed_means", #
					sep=""#
				)#
			)#
	}#
	return(dataframe)#
}#
calculateBiasComponents	<- function(dataframe, resultslist, variables) {#
	for (i in 1:length(variables)) {#
		resultslist[[i]] <- list()#
		resultslist[[i]] <- dataframe %>%#
			summarise_(#
				# save true mean#
				mean_RB_true_mean = interp(#
					~var[1], #
					var = #
					as.name(#
						paste(#
							variables[i],#
							"_mean", #
							sep=""#
						)#
					)#
				),#
				# calculate mean of observed means#
				mean_RB_mean_of_observed_means = interp(#
					~mean(var, na.rm = TRUE), #
					var = #
					as.name(#
						paste(#
							variables[i],#
							"_mean_observed",#
							sep=""#
						)#
					)#
				),#
				# sample size used to calculate mean of observed means#
				RB_n = interp(#
					~length(var[which(!is.na(var))]), #
					var = #
					as.name(#
						paste(#
							variables[i],#
							"_mean_observed",#
							sep=""#
						)#
					)#
				),#
				# calculate MSE#
				MSE_sum_of_observed_minus_true_sqrd = interp(#
					~sum(var, na.rm = TRUE), #
					var = #
					as.name(#
						paste(#
							variables[i],#
							"_mean_observed_minus_true_squared",#
							sep=""#
						)#
					)#
				),#
				# sample size used to calculate MSE#
				MSE_n_sims = interp(#
					~length(var[which(!is.na(var))]), #
					var = #
					as.name(#
						paste(#
							variables[i],#
							"_mean_observed_minus_true_squared",#
							sep=""#
						)#
					)#
				),#
				# for var_RB: calculate mean of simulated HT variance estimates#
				var_RB_mean_of_var_estimates = interp(#
					~mean(var, na.rm = TRUE), #
					var = #
					as.name(#
						paste(#
							variables[i],#
							"_var_observed",#
							sep=""#
						)#
					)#
				),#
				# for var_RB: sample size used to calculate mean of simulated HT variance estimates#
				var_RB_mean_of_var_estimates_n = interp(#
					~length(var[which(!is.na(var))]), #
					var = #
					as.name(#
						paste(#
							variables[i],#
							"_var_observed",#
							sep=""#
						)#
					)#
				),#
				# for var_RB: calculate variance of _mean_observed#
				var_RB_var_of_mean_estimates = interp(#
					~var(variable, na.rm = TRUE), #
					variable = #
					as.name(#
						paste(#
							variables[i],#
							"_mean_observed",#
							sep=""#
						)#
					)#
				),#
				# for var_RB: calculate sample size used to calculate variance of _mean_observed#
				var_RB_var_of_mean_estimates_n = interp(#
					~length(var[which(!is.na(var))]), #
					var = #
					as.name(#
						paste(#
							variables[i],#
							"_mean_observed",#
							sep=""#
						)#
					)#
				)#
			) %>%#
			as.data.frame#
		resultslist[[i]] %<>% #
			mutate(#
				RB = 100 * #
					(mean_RB_mean_of_observed_means - mean_RB_true_mean) / #
					mean_RB_true_mean,#
				MSE = MSE_sum_of_observed_minus_true_sqrd/MSE_n_sims,#
				var_RB = 100 *#
				(var_RB_mean_of_var_estimates - var_RB_var_of_mean_estimates) / #
					var_RB_var_of_mean_estimates,#
				var_RB_n = min(#
					var_RB_mean_of_var_estimates_n, #
					var_RB_var_of_mean_estimates_n#
				)#
			) %>%#
			setnames(#
	      		.,#
	      		"mean_RB_true_mean",#
	      		paste(#
	      			variables[i],#
	      			"_true_mean",#
	      			sep=""#
				)#
			) %>%#
			setnames(#
	      		.,#
	      		"RB",#
	      		paste(#
	      			variables[i],#
	      			"_mean_RB",#
	      			sep=""#
				)#
			) %>%#
			setnames(#
	      		.,#
	      		"MSE",#
	      		paste(#
	      			variables[i],#
	      			"_mean_MSE",#
	      			sep=""#
				)#
			) %>%#
			setnames(#
	      		.,#
	      		"var_RB",#
	      		paste(#
	      			variables[i],#
	      			"_var_RB",#
	      			sep=""#
				)#
			) %>%#
			# rename sample size variables#
			setnames(#
	      		.,#
	      		"RB_n",#
	      		paste(#
	      			variables[i],#
	      			"_mean_RB_n",#
	      			sep=""#
				)#
			) %>%#
			setnames(#
	      		.,#
	      		"MSE_n_sims",#
	      		paste(#
	      			variables[i],#
	      			"_mean_MSE_n",#
	      			sep=""#
				)#
			) %>%#
			setnames(#
	      		.,#
	      		"var_RB_n",#
	      		paste(#
	      			variables[i],#
	      			"_var_RB_n",#
	      			sep=""#
				)#
			) %>%#
			dplyr::select(-c(#
				mean_RB_mean_of_observed_means,#
				MSE_sum_of_observed_minus_true_sqrd,#
				var_RB_mean_of_var_estimates,#
				var_RB_mean_of_var_estimates_n,#
				var_RB_var_of_mean_estimates,#
				var_RB_var_of_mean_estimates_n#
			))#
	}#
	return(resultslist)#
}
setwd('/Users/KSauby/Documents/Projects/ACS/R')
B %<>% calculatedSquaredDifferences(variables=ovar)#
	B %<>% calculateDifferencesinMeans(variables=ovar)
setwd('/Users/KSauby/Documents/Projects/ACS/R')
rvar_variables <- paste(rvar, "_ratio", sep="")#
	. <- n_sims <- A <- B <- C <- D <- E <- I <- G <- H <- NULL#
	A <- merge(#
		population_data_summary, #
		simulation_data, #
		by=population.grouping.variables#
	)#
	# ------------------------------------------------------------------------ ##
	# OCCUPANCY VARIABLES	#
	# ------------------------------------------------------------------------ ##
	B <- A #
	# add number of simulations to dataset#
	B %<>% #
		group_by_(.dots = c(#
			population.grouping.variables, #
			sampling.grouping.variables#
		)) %>%#
		mutate(n_sims = n())#
	B %<>% calculateMeanofObservedMeans(dataframe=B, variables=ovar)#
	# ------------------------------------------------------------------------ ##
	# RATIO VARIABLES	#
	# ------------------------------------------------------------------------ ##
	E <- A#
	# E %<>% filter(Stricta_mean_observed!=0)#
	E %<>% calculateMeanofObservedMeans(dataframe=B, variables=c(rvar_variables, o_rvar))#
	E %<>% calculatedSquaredDifferences(variables=c(o_rvar, rvar_variables))#
	E %<>% calculateDifferencesinMeans(variables=c(o_rvar, rvar_variables))#
#
	B %<>% calculatedSquaredDifferences(variables=ovar)#
	B %<>% calculateDifferencesinMeans(variables=ovar)
setwd('/Users/KSauby/Documents/Projects/ACS/R')
variables=c(o_rvar, rvar_variables)
dataframe=E
head(E)
setwd('/Users/KSauby/Documents/Projects/ACS/R')
variables
head(B)
str(B)
setwd('/Users/KSauby/Documents/Projects/ACS/R')
ovar
setwd('/Users/KSauby/Documents/Projects/ACS/R')
B <- A #
	# add number of simulations to dataset#
	B %<>% #
		group_by_(.dots = c(#
			population.grouping.variables, #
			sampling.grouping.variables#
		)) %>%#
		mutate(n_sims = n())#
	B %<>% calculateMeanofObservedMeans(dataframe=B, variables=ovar)
head(B)
setwd('/Users/KSauby/Documents/Projects/ACS/R')
ovar
setwd('/Users/KSauby/Documents/Projects/ACS/R')
rvar_variables <- paste(rvar, "_ratio", sep="")#
	. <- n_sims <- A <- B <- C <- D <- E <- I <- G <- H <- NULL#
	A <- merge(#
		population_data_summary, #
		simulation_data, #
		by=population.grouping.variables#
	)#
	# ------------------------------------------------------------------------ ##
	# OCCUPANCY VARIABLES	#
	# ------------------------------------------------------------------------ ##
	B <- A #
	# add number of simulations to dataset#
	B %<>% #
		group_by_(.dots = c(#
			population.grouping.variables, #
			sampling.grouping.variables#
		)) %>%#
		mutate(n_sims = n())#
	B %<>% calculateMeanofObservedMeans(dataframe=B, variables=ovar)
str(B)
setwd('/Users/KSauby/Documents/Projects/ACS/R')
calculateDifferencesinMeans <- function(dataframe, variables) {#
	# for each simulation and variable, calculate:#
	#	observed mean - mean of observed means#
	for (i in 1:length(variables)) {#
		dataframe %<>%#
			mutate(#
				observed_minus_mean_of_observed_means = #
						# (observed -#
						eval(#
							parse(#
								text = paste(#
									variables[i], #
									"_mean_observed", #
									sep=""#
								)#
							)#
						) - #
						# true)#
						eval(#
							parse(#
								text = paste(#
									variables[i], #
									"_mean_of_observed_means", #
									sep=""#
								)#
							)#
						)#
			) %>%#
			setnames(#
				., #
				"observed_minus_mean_of_observed_means", #
				paste(#
					variables[i], #
					"_observed_minus_mean_of_observed_means", #
					sep=""#
				)#
			)#
	}#
	return(dataframe)#
}
setwd('/Users/KSauby/Documents/Projects/ACS/R')
rvar_variables <- paste(rvar, "_ratio", sep="")#
	. <- n_sims <- A <- B <- C <- D <- E <- I <- G <- H <- NULL#
	A <- merge(#
		population_data_summary, #
		simulation_data, #
		by=population.grouping.variables#
	)#
	# ------------------------------------------------------------------------ ##
	# OCCUPANCY VARIABLES	#
	# ------------------------------------------------------------------------ ##
	B <- A #
	# add number of simulations to dataset#
	B %<>% #
		group_by_(.dots = c(#
			population.grouping.variables, #
			sampling.grouping.variables#
		)) %>%#
		mutate(n_sims = n())#
	B %<>% calculateMeanofObservedMeans(dataframe=B, variables=ovar)
str(B)
setwd('/Users/KSauby/Documents/Projects/ACS/R')
rvar_variables <- paste(rvar, "_ratio", sep="")#
	. <- n_sims <- A <- B <- C <- D <- E <- I <- G <- H <- NULL#
	A <- merge(#
		population_data_summary, #
		simulation_data, #
		by=population.grouping.variables#
	)#
	# ------------------------------------------------------------------------ ##
	# OCCUPANCY VARIABLES	#
	# ------------------------------------------------------------------------ ##
	B <- A #
	# add number of simulations to dataset#
	B %<>% #
		group_by_(.dots = c(#
			population.grouping.variables, #
			sampling.grouping.variables#
		)) %>%#
		mutate(n_sims = n())
head(B )
head(B )%>%as.data.frame
setwd('/Users/KSauby/Documents/Projects/ACS/R')
B %<>% calculateMeanofObservedMeans(dataframe=B, variables=ovar)
head(B)
str(B)
setwd('/Users/KSauby/Documents/Projects/ACS/R')
variables=ovar
setwd('/Users/KSauby/Documents/Projects/ACS/R')
variables
setwd('/Users/KSauby/Documents/Projects/ACS/R')
dataframe=B
setwd('/Users/KSauby/Documents/Projects/ACS/R')
temp <- dataframe %>% group_by_(.dots = c(#
		population.grouping.variables, #
		sampling.grouping.variables, #
		"n_sims"#
	))#
	# list for saving results#
	C <- vector("list", length(variables))
setwd('/Users/KSauby/Documents/Projects/ACS/R')
variables
setwd('/Users/KSauby/Documents/Projects/ACS/R')
paste(#
							variables[i],#
							"_mean_observed",#
							sep=""#
						)
setwd('/Users/KSauby/Documents/Projects/ACS/R')
calculateMeanofObservedMeans <- function(dataframe, variables, nsims) {#
	# group data to prep for processing by #
	#		population.grouping.variables, #
	#		sampling.grouping.variables, and#
	#		n_sims#
	temp <- dataframe %>% group_by_(.dots = c(#
		population.grouping.variables, #
		sampling.grouping.variables, #
		"n_sims"#
	))#
	# list for saving results#
	C <- vector("list", length(variables))#
	# for each of the population.grouping.variables and sampling.grouping.variables, calculate:#
	#	mean of observed means#
	#	sample size used for those calculations#
	for (i in 1:length(variables)) {#
		C[[i]] <- list()#
		# observed mean#
		C[[i]] <- temp %>%#
			summarise_(#
				mean_of_observed_means = interp(#
					~mean(var, na.rm = TRUE), #
					var = as.name(#
						paste(#
							variables[i],#
							"_mean_observed",#
							sep=""#
						)#
					)#
				),#
				sample_size = interp(#
					~length(var[which(!is.na(var))]), #
					var = as.name(#
						paste(#
							variables[i],#
							"_mean_observed",#
							sep=""#
						)#
					)#
				)#
			) %>%#
			setnames(#
		      	.,#
		      	"mean_of_observed_means",#
		      	paste(#
		      		variables[i],#
		      		"_mean_of_observed_means",#
		      		sep=""#
				)#
			) %>%#
			setnames(#
		      	.,#
		      	"sample_size",#
		      	paste(#
		      		variables[i],#
		      		"_mean_of_observed_means_n",#
		      		sep=""#
				)#
			)#
	}#
	D <- Reduce(#
		function(x, y) merge(#
			x, y,#
			by=c(#
				population.grouping.variables, #
				sampling.grouping.variables, #
				"n_sims"#
			)#
		),#
		C#
	)#
	dataframe %<>% merge(#
		D, #
		by=c(#
			population.grouping.variables, #
			sampling.grouping.variables,#
			"n_sims"#
		)#
	)#
	return(dataframe)#
}
setwd('/Users/KSauby/Documents/Projects/ACS/R')
rvar_variables <- paste(rvar, "_ratio", sep="")#
	. <- n_sims <- A <- B <- C <- D <- E <- I <- G <- H <- NULL#
	A <- merge(#
		population_data_summary, #
		simulation_data, #
		by=population.grouping.variables#
	)#
	# ------------------------------------------------------------------------ ##
	# OCCUPANCY VARIABLES	#
	# ------------------------------------------------------------------------ ##
	B <- A #
	# add number of simulations to dataset#
	B %<>% #
		group_by_(.dots = c(#
			population.grouping.variables, #
			sampling.grouping.variables#
		)) %>%#
		mutate(n_sims = n())#
	B %<>% calculateMeanofObservedMeans(dataframe=B, variables=ovar)
str(B)
setwd('/Users/KSauby/Documents/Projects/ACS/R')
E <- A#
	# E %<>% filter(Stricta_mean_observed!=0)#
	E %<>% calculateMeanofObservedMeans(dataframe=B, variables=c(rvar_variables, o_rvar))
str(E)
setwd('/Users/KSauby/Documents/Projects/ACS/R')
rvar_variables
setwd('/Users/KSauby/Documents/Projects/ACS/R')
o_rvar
setwd('/Users/KSauby/Documents/Projects/ACS/R')
E <- A#
	# E %<>% filter(Stricta_mean_observed!=0)#
	E %<>% calculateMeanofObservedMeans(dataframe=B, variables=c(rvar_variables))
str(E)
setwd('/Users/KSauby/Documents/Projects/ACS/R')
E %<>% calculatedSquaredDifferences(variables=c(o_rvar, rvar_variables))#
	E %<>% calculateDifferencesinMeans(variables=c(o_rvar, rvar_variables))
setwd('/Users/KSauby/Documents/Projects/ACS/R')
B %<>% calculatedSquaredDifferences(variables=ovar)#
	B %<>% calculateDifferencesinMeans(variables=ovar)
head(E)
head(Thompson1990Table1data)
Thompson1990Table1data
setwd('/Users/KSauby/Documents/Projects/ACS/R')
Thompson1990Figure1Population
Thompson1990Table1data
head(Thompson1990Figure1Population)
str(#'   \item y. Y coordinate.#
)
str(Thompson1990Figure1Population)
? Thompson1990Figure1Population
library(ggplot2)#
#
data(Thompson1990Figure1Population)#
data(Thompson1990Figure1Sample)#
#
# plot population#
library(ggplot2)#
ggplot(data=Thompson1990Figure1Population, aes(x,y, size=factor(y_value), shape=factor(y_value))) +#
	geom_point() +#
	scale_shape_manual(values=c(1, rep(16, length(2:13))))
# plot sample overlaid onto population#
ggplot() +#
	geom_point(data=Thompson1990Figure1Population, aes(x,y, size=factor(y_value),#
		shape=factor(y_value))) +#
	scale_shape_manual(values=c(1, rep(16, length(2:13)))) +#
	geom_point(data=Thompson1990Figure1Sample, aes(x,y), shape=0, size=7)
Thompson1990Figure1Sample
setwd('/Users/KSauby/Documents/Projects')
setwd("./ACS")#
#setwd("./modresproc")#
#devtools::test()#
# devtools::check()#
#devtools::check()#
devtools::document()#
devtools::install()
setwd("./ACS")#
#setwd("./modresproc")#
#devtools::test()#
# devtools::check()#
#devtools::check()#
devtools::document()#
devtools::install()
?lambdap_5_tau_1

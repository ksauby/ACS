21.4 -21.4*.813
library(lubridaste)
library(lubrida=te)
library(lubridate)
-v
install.packages("rgeos", repos="http://R-Forge.R-project.org")#
require(rgeos)
library(rgeos)
require(rgeos)
library(rgeos)
install.packages("rgdal", repos="http://R-Forge.R-project.org")#
require(rgdal)
R CMD INSTALL ~/Downloads/rgdal_0.9-1.tar.gz --configure-args='--with-gdal-config=/Library/Frameworks/GDAL.framework/Programs/gdal-config#
 --with-proj-include=/Library/Frameworks/PROJ.framework/Headers#
 --with-proj-lib=/Library/Frameworks/PROJ.framework/unix/lib'
R CMD INSTALL ~/Downloads/rgdal_0.9-1.tar.gz --configure-args='--with-gdal-config=/Library/Frameworks/GDAL.framework/Programs/gdal-config--with-proj-include=/Library/Frameworks/PROJ.framework/Headers--with-proj-lib=/Library/Frameworks/PROJ.framework/unix/lib'
library(lme3)
library(lme4)
300/241
.244*30
1.25*300
1.25*240
7*12
7849-7527
322/1353
8028-7527
501/1353
8028-7957
1353-501
852/71
7956-7878
8176-8029
8176-8092
250*.75
250*.25
42*2 + 17*2
118/19
21/6.2
59.5*.75
59.5*.5 + 59.5
71/12
597/80
597/8
432/8
15*8 + 9*3
?seq_len
7.25/3
7.25/4
for(i in 0:9){x=cos(2*pi/10*i);y=x+1;z=(y-2)*22;pie(c(y,8-y),col=c(0,7),init.angl=135-z,bo=F,la=NA)}
install.packages("ProjectTemplate")
install.packages("dplyr")
install.packages("ggplot2")
install.packages("data.table")
install.packages("corrgram")
install.packages("survival")
install.packages("shapefiles")
install.packages("rgdal")
install.packages("PBSmapping")
install.packages("sp")
install.packages("gdistance")
install.packages("chron")
install.packages("unmarked")
install.packages("lme4")
install.packages("rgeos", repos="http://R-Forge.R-project.org", type="source")#
require(rgeos)
install.packages('rgdal',repos="http://www.stats.ox.ac.uk/pub/RWin")
library(rgdal)
install.packages("http://cran.r-project.org/src/contrib/rgdal_0.9-1.tar.gz", repos = NULL, type="source", configure.args = "--with-gdal-config=/Library/Frameworks/GDAL.framework/Versions/1.10/unix/bin/gdal-config --with-proj-include=/Library/Frameworks/PROJ.framework/unix/include --with-proj-lib=/Library/Frameworks/PROJ.framework/unix/lib")
18/1.618
189+114
library(lubridate)
library(magrittr)
seasons <- data.frame(#
	   SE = as.POSIXct(c("2009-3-20", "2010-3-20", "2011-3-20", "2012-3-20", #
            "2013-3-20", "2014-3-20"), format="%Y-%m-%d"),#
	   SS = as.POSIXct(c("2009-6-21", "2010-6-21", "2011-6-21", "2012-6-20",#
            "2013-6-20", "2014-6-20"), format="%Y-%m-%d"),#
	   FE = as.POSIXct(c("2009-9-22", "2010-9-23", "2011-9-23", "2012-9-22",#
            "2013-9-22", "2014-9-22"), format="%Y-%m-%d"),#
	   WS = as.POSIXct(c("2009-12-21", "2010-12-21", "2011-12-22", "2012-12-21", #
            "2013-12-21", "2014-12-21"), format="%Y-%m-%d")#
    )#
#
    assignSeason <- function(dat, SeasonStarts=seasons) {#
	    dat %<>% mutate(#
		    Season = lapply(Date,#
				function(x) {#
					findInterval(#
						x, #
						SeasonStarts[which(year(x)==year(SeasonStarts$WS)), ]#
					)#
				}#
			) %>% unlist	#
		)#
	    dat[which(dat$Season==0 | dat$Season==4), ]$Season 	<- "Winter"#
	    dat[which(dat$Season==1), ]$Season 					<- "Spring"#
	    dat[which(dat$Season==2), ]$Season 					<- "Summer"#
	    dat[which(dat$Season==3), ]$Season 					<- "Fall"#
	    return(dat)#
    }
dat = data.frame(#
	    Date = as.POSIXct(strptime(as.Date("2011-12-01", format = "%Y-%m-%d") + #
            (0:10)*30, format="%Y-%m-%d" ))#
    )#
    dat %>% assignSeason
library(dplyr)
dat = data.frame(#
	    Date = as.POSIXct(strptime(as.Date("2011-12-01", format = "%Y-%m-%d") + #
            (0:10)*30, format="%Y-%m-%d" ))#
    )#
    dat %>% assignSeason
library(devtoolks)
library(devtools)
?install_github
devtools::install_github("ksauby/ACSampling", auth_token="2ab30a602e52fae481f4249cc25e892c0a9ccfc7", subdir="/code/Restricted_ACS_Simulations/ACSampling", repos=NULL)
devtools::install_github("ksauby/ACSampling", auth_token="2794c3f10db92f525181a0b1f6c19064fe3a2ef3", subdir="/code/Restricted_ACS_Simulations/ACSampling", repos=NULL)
devtools::install("~/Documents/Projects/ACSampling/code/Restricted_ACS_Simulations/ACSampling_0.0.0.9000.tar.gz")
devtools::install(pkg="~/Documents/Projects/ACSampling/code/Restricted_ACS_Simulations/ACSampling_0.0.0.9000.tar.gz")
devtools::install(pkg="Users/KSauby/Documents/Projects/ACSampling/code/Restricted_ACS_Simulations/ACSampling_0.0.0.9000.tar.gz")
devtools::install(pkg="~/Users/KSauby/Documents/Projects/ACSampling/code/Restricted_ACS_Simulations/ACSampling_0.0.0.9000.tar.gz")
devtools::install(pkg="/Users/KSauby/Documents/Projects/ACSampling/code/Restricted_ACS_Simulations/ACSampling_0.0.0.9000.tar.gz")
devtools::install_local(path="/Users/KSauby/Documents/Projects/ACSampling/code/Restricted_ACS_Simulations/ACSampling_0.0.0.9000.tar.gz")
library(devtools)
devtools::install_local(path="/Users/KSauby/Documents/Projects/ACSampling/code/Restricted_ACS_Simulations/ACSampling_0.0.0.9000.tar.gz")
devtools::install(pkg="/Users/KSauby/Documents/Projects/ACSampling/code/Restricted_ACS_Simulations/ACSampling_0.0.0.9000.tar.gz")
install.packages("~/Documents/Projects/ACSampling/code/Restricted_ACS_Simulations/ACSampling_0.0.0.9000.tar.gz")
??limit
37-13
24/37
37-13
26/37
25/37
23/37
29/37
30/37
22/37
30/37
29/37
28/37
27/37
35/37
30/37
29/37
26/37
26/37 - .6757
28/37
30/37
29/37
37-12
25/37
219*.8
219*.8 - 17
26/3
17/900
42/900
49/900
29/40
1/25
8/25
10/25
(7.5 + 3.75)/15
12*0.75
11 * 0.75
11/15
11*0.25
11/15 * 6
32/41 +0.03.5
32/41 + 0.035
(32/41 + 0.035)*100
100/41
23/40 * 100
(23/40 * 100)+5
(164 + 13.5 + 6)
(164 + 13.5 + 6)/365
(164 + 13.5 + 6 + (50))/365
(164 + 13.5 + 6 + (60))/365
(164 + 13.5 + 6 + (70))/365
(164 + 13.5 + 6 + (75))/365
102/40
102/41
?table
(38.40 + 4.99)/14
(39.60+4.99)/9
17.20/4
(54+4.99)/27
(34+4.99)/20
setwd('/Users/KSauby/Documents/Projects/ACSampling_project')
library(ProjectTemplate)#
#
# when working on a Windows computer#
# setwd("C:/Users/KSauby/Dropbox/gradschool/Research/Projects/sampling")#
#
# load project#
load.project()
setwd('/Users/KSauby/Documents/Projects/ACS/R')
# create population#
lambdap_5_tau_1 <- expand.grid(#
	x = 1:10,#
	y = 1:10#
) %>%#
	cbind(#
		y_value = c(#
			rep(0,10),#
			rep(0,4), 49, rep(0,5),#
			rep(0,4), 1, rep(0,5),#
			rep(0,10),#
			rep(0,10),#
			rep(0,7), 52, 5, 0,#
			rep(0,8), 45, 0,#
			rep(0,10),#
			rep(0,10),#
			rep(0,10)#
		)#
	)#
lambdap_5_tau_1_networks <- assignNetworkMembership(#
	lambdap_5_tau_1 %>% filter(y_value > 0), #
	plot.size=1#
)#
# fill in m values#
lambdap_5_tau_1 %<>% merge(lambdap_5_tau_1_networks, all=T)#
lambdap_5_tau_1[which(lambdap_5_tau_1$y_value==0), ]$m <- 1#
# fill in NetworkIDs#
maxID <- max(P$NetworkID, na.rm=T)#
lambdap_5_tau_1[which(is.na(lambdap_5_tau_1$NetworkID)), ]$NetworkID <- seq(from=(maxID + 1), #
	to=(maxID + length(which(is.na(lambdap_5_tau_1$NetworkID)))), by=1)#
#
ggplot(lambdap_5_tau_1, aes(x, y)) + geom_text(aes(label=y_value))
setwd('/Users/KSauby/Documents/Projects/ACS/R')
# create population#
lambdap_5_tau_25 <- expand.grid(#
	x = 1:10,#
	y = 1:10#
) %>%#
	cbind(#
		y_value = c(#
			0,0,0,4,rep(0,6),#
			0,0,0,43,17,rep(0,5),#
			rep(0,10),#
			rep(0,10),#
			rep(0,10),#
			rep(0,2), rep(1,4), rep(0,4),#
			rep(0,2), 50, 51, 41, 5, rep(0,4),#
			rep(0,2), 2, 1, rep(0,6),#
			rep(0,10),#
			rep(0,10)#
		)#
	)#
lambdap_5_tau_25_networks <- assignNetworkMembership(#
	lambdap_5_tau_25 %>% filter(y_value > 0), #
	plot.size=1#
)#
# fill in m values#
lambdap_5_tau_25 %<>% merge(lambdap_5_tau_25_networks, all=T)#
lambdap_5_tau_25[which(lambdap_5_tau_25$y_value==0), ]$m <- 1#
# fill in NetworkIDs#
maxID <- max(lambdap_5_tau_25$NetworkID, na.rm=T)#
lambdap_5_tau_25[which(is.na(lambdap_5_tau_25$NetworkID)), ]$NetworkID <- seq(from=(maxID + 1), #
	to=(maxID + length(which(is.na(lambdap_5_tau_25$NetworkID)))), by=1)#
#
ggplot(lambdap_5_tau_25 %>% filter(y_value!=0), aes(x, y)) + geom_text(aes(label=y_value))
setwd('/Users/KSauby/Documents/Projects/ACS/R')
# create population#
lambdap_5_tau_10 <- expand.grid(#
	x = 1:10,#
	y = 1:10#
) %>%#
	cbind(#
		y_value = c(#
			rep(0,4),3,10,22,16,7,7,#
			rep(0,3),2,1,10,10,13,16,9,#
			0,0,1,5,1,5,8,5,8,6,#
			2,1,4,9,8,1,0,1,1,1,#
			1,6,7,9,3,5,1,1,2,0,#
			0,4,8,6,5,2,4,3,2,2,#
			1,1,rep(0,4),3,9,8,3,#
			0,0,0,2,0,0,0,2,3,1,#
			rep(0,7),1,0,0,#
			rep(0,10)#
		)#
	)#
lambdap_5_tau_10_networks <- assignNetworkMembership(#
	lambdap_5_tau_10 %>% filter(y_value > 0), #
	plot.size=1#
)#
# fill in m values#
lambdap_5_tau_10 %<>% merge(lambdap_5_tau_10_networks, all=T)#
lambdap_5_tau_10[which(lambdap_5_tau_10$y_value==0), ]$m <- 1#
# fill in NetworkIDs#
maxID <- max(lambdap_5_tau_10$NetworkID, na.rm=T)#
lambdap_5_tau_10[which(is.na(lambdap_5_tau_10$NetworkID)), ]$NetworkID <- seq(from=(maxID + 1), #
	to=(maxID + length(which(is.na(lambdap_5_tau_10$NetworkID)))), by=1)#
#
ggplot(lambdap_5_tau_10, aes(x, y)) + geom_text(aes(label=y_value))
setwd('/Users/KSauby/Documents/Projects/ACS/R')
ggplot(lambdap_5_tau_1 %>% filter(y_value!=0), aes(x, y)) + geom_text(aes(label=y_value))
setwd('/Users/KSauby/Documents/Projects/ACS/R')
# create population#
lambdap_5_tau_10 <- expand.grid(#
	x = 1:10,#
	y = 1:10#
) %>%#
	cbind(#
		y_value = c(#
			rep(0,4),3,10,22,16,7,7,#
			rep(0,3),2,1,10,10,13,16,9,#
			0,0,1,5,1,5,8,5,8,6,#
			2,1,4,9,8,1,0,1,1,1,#
			1,6,7,9,3,5,1,1,2,0,#
			0,4,8,6,5,2,4,3,2,2,#
			1,1,rep(0,4),3,9,8,3,#
			0,0,0,2,0,0,0,2,3,1,#
			rep(0,7),1,0,0,#
			rep(0,10)#
		)#
	)#
lambdap_5_tau_10_networks <- assignNetworkMembership(#
	lambdap_5_tau_10 %>% filter(y_value > 0), #
	plot.size=1#
)#
# fill in m values#
lambdap_5_tau_10 %<>% merge(lambdap_5_tau_10_networks, all=T)#
lambdap_5_tau_10[which(lambdap_5_tau_10$y_value==0), ]$m <- 1#
# fill in NetworkIDs#
maxID <- max(lambdap_5_tau_10$NetworkID, na.rm=T)#
lambdap_5_tau_10[which(is.na(lambdap_5_tau_10$NetworkID)), ]$NetworkID <- seq(from=(maxID + 1), #
	to=(maxID + length(which(is.na(lambdap_5_tau_10$NetworkID)))), by=1)#
#
ggplot(lambdap_5_tau_10 %>% filter(y_value!=0), aes(x, y)) + geom_text(aes(label=y_value))
setwd('/Users/KSauby/Documents/Projects/ACS/R')
# create population#
lambdap_5_tau_1 <- expand.grid(#
	x = 1:10,#
	y = 1:10#
) %>%#
	cbind(#
		y_value = c(#
			rep(0,10),#
			rep(0,4), 49, rep(0,5),#
			rep(0,4), 1, rep(0,5),#
			rep(0,10),#
			rep(0,10),#
			rep(0,7), 52, 5, 0,#
			rep(0,8), 45, 0,#
			rep(0,10),#
			rep(0,10),#
			rep(0,10)#
		)#
	)#
lambdap_5_tau_1_networks <- assignNetworkMembership(#
	lambdap_5_tau_1 %>% filter(y_value > 0), #
	plot.size=1#
)#
# fill in m values#
lambdap_5_tau_1 %<>% merge(lambdap_5_tau_1_networks, all=T)#
lambdap_5_tau_1[which(lambdap_5_tau_1$y_value==0), ]$m <- 1#
# fill in NetworkIDs#
maxID <- max(P$NetworkID, na.rm=T)#
lambdap_5_tau_1[which(is.na(lambdap_5_tau_1$NetworkID)), ]$NetworkID <- seq(from=(maxID + 1), #
	to=(maxID + length(which(is.na(lambdap_5_tau_1$NetworkID)))), by=1)#
#
ggplot(lambdap_5_tau_1 %>% filter(y_value!=0), aes(x, y)) + geom_text(aes(label=y_value))
setwd('/Users/KSauby/Documents/Projects/ACS/R')
# create population#
lambdap_5_tau_1 <- expand.grid(#
	x = 1:10,#
	y = 1:10#
) %>%#
	cbind(#
		y_value = c(#
			rep(0,10),#
			rep(0,4), 49, rep(0,5),#
			rep(0,4), 1, rep(0,5),#
			rep(0,10),#
			rep(0,10),#
			rep(0,7), 52, 5, 0,#
			rep(0,8), 45, 0,#
			rep(0,10),#
			rep(0,10),#
			rep(0,10)#
		)#
	)#
lambdap_5_tau_1_networks <- assignNetworkMembership(#
	lambdap_5_tau_1 %>% filter(y_value > 0), #
	plot.size=1#
)#
# fill in m values#
lambdap_5_tau_1 %<>% merge(lambdap_5_tau_1_networks, all=T)#
lambdap_5_tau_1[which(lambdap_5_tau_1$y_value==0), ]$m <- 1#
# fill in NetworkIDs#
maxID <- max(lambdap_5_tau_1$NetworkID, na.rm=T)#
lambdap_5_tau_1[which(is.na(lambdap_5_tau_1$NetworkID)), ]$NetworkID <- seq(from=(maxID + 1), #
	to=(maxID + length(which(is.na(lambdap_5_tau_1$NetworkID)))), by=1)#
#
ggplot(lambdap_5_tau_1 %>% filter(y_value!=0), aes(x, y)) + geom_text(aes(label=y_value))
head(#
ggplot(lambdap_5_tau_1 %>% filter(y_value!=0), aes(x, y)) + geom_text(aes(label=y_value)))
head()
head(lambdap_5_tau_1)
dim(lambdap_5_tau_1)
setwd('/Users/KSauby/Documents/Projects')
setwd("./ACS")#
#setwd("./modresproc")#
devtools::test()#
devtools::document()#
devtools::install()
setwd('/Users/KSauby/Documents/Projects')
setwd("./ACS")#
#setwd("./modresproc")#
devtools::test()#
devtools::document()#
devtools::install()
setwd('/Users/KSauby/Documents/Projects/ACS/tests/testthat')
data(lambdap_5_tau_10)#
data(lambdap_5_tau_1)#
data(lambdap_5_tau_25)
lambdap_5_tau_1 <- createlambdap_5_tau_1()
lambdap_5_tau_1
save.rda(lambdap_5_tau_1.rda)
save(lambdap_5_tau_1, file="lambdap_5_tau_1.rda")
save(lambdap_5_tau_10, file="lambdap_5_tau_10.rda")
lambdap_5_tau_10 <- createlambdap_5_tau_10()
save(lambdap_5_tau_10, file="lambdap_5_tau_10.rda")
lambdap_5_tau_25 <- createlambdap_5_tau_25()
setwd('/Users/KSauby/Documents/Projects')
setwd("./ACS")#
#setwd("./modresproc")#
devtools::test()#
devtools::document()#
devtools::install()
lambdap_5_tau_25 <- createlambdap_5_tau_25()
getwd()
lambdap_5_tau_25 <- createlambdap_5_tau_25()
lambdap_5_tau_25
save(lambdap_5_tau_25, "lambdap_5_tau_25.rda")
save(lambdap_5_tau_25, file="lambdap_5_tau_25.rda")
setwd('/Users/KSauby/Documents/Projects')
setwd("./ACS")#
#setwd("./modresproc")#
devtools::test()#
devtools::document()#
devtools::install()
setwd("./ACS")#
#setwd("./modresproc")#
devtools::test()#
devtools::document()#
devtools::install()
library(ACSampling)
setwd('/Users/KSauby/Documents/Projects/ACS/R')
#' Create the population, $\lambda_P$ = 5, $tau$ = 10, from Christman (1997)#
#' #
#' @return The population displayed in Christman (1997), where $\lambda_P$ = 5, $tau$ = 10.#
#' @examples #
#' library(ggplot2)#
#' data(lambdap_5_tau_25)#
#' #
#' ggplot(lambdap_5_tau_25 %>% filter(y_value!=0), aes(x, y)) + geom_text(aes(label=y_value))#
#' @references Sauby, K.E and Christman, M.C. \emph{In preparation.} Restricted adaptive cluster sampling.#
#' Christman, M. C. (1997). Efficiency of some sampling designs for spatially clustered populations. \emph{Environmetrics}, 8: 145--166.#
#' @export#
#
createlambdap_5_tau_25 <- function() {#
	lambdap_5_tau_25 <- expand.grid(#
		x = 1:10,#
		y = 1:10#
	) %>%#
		cbind(#
			y_value = c(#
				0,0,0,4,rep(0,6),#
				0,0,0,43,17,rep(0,5),#
				rep(0,10),#
				rep(0,10),#
				rep(0,10),#
				rep(0,2), rep(1,4), rep(0,4),#
				rep(0,2), 50, 51, 41, 5, rep(0,4),#
				rep(0,2), 2, 1, rep(0,6),#
				rep(0,10),#
				rep(0,10)#
			)#
		)#
	lambdap_5_tau_25_networks <- assignNetworkMembership(#
		lambdap_5_tau_25 %>% filter(y_value > 0), #
		plot.size=1#
	)#
	# fill in m values#
	lambdap_5_tau_25 %<>% merge(lambdap_5_tau_25_networks, all=T)#
	lambdap_5_tau_25[which(lambdap_5_tau_25$y_value==0), ]$m <- 1#
	# fill in NetworkIDs#
	maxID <- max(lambdap_5_tau_25$NetworkID, na.rm=T)#
	lambdap_5_tau_25[which(is.na(lambdap_5_tau_25$NetworkID)), ]$NetworkID <- seq(from=(maxID + 1), #
		to=(maxID + length(which(is.na(lambdap_5_tau_25$NetworkID)))), by=1)#
#
	ggplot(lambdap_5_tau_25 %>% filter(y_value!=0), aes(x, y)) + geom_text(aes(label=y_value))#
	return(lambdap_5_tau_25)#
}
setwd('/Users/KSauby/Documents/Projects/ACS/R')
#' Create the population, $\lambda_P$ = 5, $tau$ = 1, from Christman (1997)#
#' #
#' @return The population displayed in Christman (1997), where $\lambda_P$ = 5, $tau$ = 1.#
#' @examples #
#' library(ggplot2)#
#' data(lambdap_5_tau_1)#
#' #
#' ggplot(lambdap_5_tau_1 %>% filter(y_value!=0), aes(x, y)) + geom_text(aes(label=y_value))#
#
#' @references Sauby, K.E and Christman, M.C. \emph{In preparation.} Restricted adaptive cluster sampling.#
#' Christman, M. C. (1997). Efficiency of some sampling designs for spatially clustered populations.. \emph{Environmetrics}, 8: 145--166.#
#' @export#
#
createlambdap_5_tau_1 <- function() {#
	lambdap_5_tau_1 <- expand.grid(#
		x = 1:10,#
		y = 1:10#
	) %>%#
		cbind(#
			y_value = c(#
				rep(0,10),#
				rep(0,4), 49, rep(0,5),#
				rep(0,4), 1, rep(0,5),#
				rep(0,10),#
				rep(0,10),#
				rep(0,7), 52, 5, 0,#
				rep(0,8), 45, 0,#
				rep(0,10),#
				rep(0,10),#
				rep(0,10)#
			)#
		)#
	lambdap_5_tau_1_networks <- assignNetworkMembership(#
		lambdap_5_tau_1 %>% filter(y_value > 0), #
		plot.size=1#
	)#
	# fill in m values#
	lambdap_5_tau_1 %<>% merge(lambdap_5_tau_1_networks, all=T)#
	lambdap_5_tau_1[which(lambdap_5_tau_1$y_value==0), ]$m <- 1#
	# fill in NetworkIDs#
	maxID <- max(lambdap_5_tau_1$NetworkID, na.rm=T)#
	lambdap_5_tau_1[which(is.na(lambdap_5_tau_1$NetworkID)), ]$NetworkID <- seq(from=(maxID + 1), #
		to=(maxID + length(which(is.na(lambdap_5_tau_1$NetworkID)))), by=1)#
	return(lambdap_5_tau_1)#
}
setwd('/Users/KSauby/Documents/Projects/ACS/R')
#' Create the population, $\lambda_P$ = 5, $tau$ = 10, from Christman (1997)#
#' #
#' @return The population displayed in Christman (1997), where $\lambda_P$ = 5, $tau$ = 10.#
#' @examples #
#' library(ggplot2)#
#' data(lambdap_5_tau_10)#
#' #
#' ggplot(lambdap_5_tau_10 %>% filter(y_value!=0), aes(x, y)) + geom_text(aes(label=y_value))#
#' @references Sauby, K.E and Christman, M.C. \emph{In preparation.} Restricted adaptive cluster sampling.#
#' Christman, M. C. (1997). Efficiency of some sampling designs for spatially clustered populations. \emph{Environmetrics}, 8: 145--166.#
#' @export#
#
createlambdap_5_tau_10 <- function() {#
	lambdap_5_tau_10 <- expand.grid(#
		x = 1:10,#
		y = 1:10#
	) %>%#
		cbind(#
			y_value = c(#
				rep(0,4),3,10,22,16,7,7,#
				rep(0,3),2,1,10,10,13,16,9,#
				0,0,1,5,1,5,8,5,8,6,#
				2,1,4,9,8,1,0,1,1,1,#
				1,6,7,9,3,5,1,1,2,0,#
				0,4,8,6,5,2,4,3,2,2,#
				1,1,rep(0,4),3,9,8,3,#
				0,0,0,2,0,0,0,2,3,1,#
				rep(0,7),1,0,0,#
				rep(0,10)#
			)#
		)#
	lambdap_5_tau_10_networks <- assignNetworkMembership(#
		lambdap_5_tau_10 %>% filter(y_value > 0), #
		plot.size=1#
	)#
	# fill in m values#
	lambdap_5_tau_10 %<>% merge(lambdap_5_tau_10_networks, all=T)#
	lambdap_5_tau_10[which(lambdap_5_tau_10$y_value==0), ]$m <- 1#
	# fill in NetworkIDs#
	maxID <- max(lambdap_5_tau_10$NetworkID, na.rm=T)#
	lambdap_5_tau_10[which(is.na(lambdap_5_tau_10$NetworkID)), ]$NetworkID <- seq(from=(maxID + 1), #
		to=(maxID + length(which(is.na(lambdap_5_tau_10$NetworkID)))), by=1)#
	return(lambdap_5_tau_10)#
}
load(:~/Documents/Projects/ACS/data/lambdap_5_tau_1.rda")
load(""~/Documents/Projects/ACS/data/lambdap_5_tau_1.rda")
load("~/Documents/Projects/ACS/data/lambdap_5_tau_1.rda")
head(lambdap_5_tau_1)
load("~/Documents/Projects/ACS/data/lambdap_5_tau_10.rda")
getwd()
load("~/Documents/Projects/ACS/data/lambdap_5_tau_25.rda")
load("~/Documents/Projects/ACS/data/lambdap_5_tau_24.rda")
setwd('/Users/KSauby/Documents/Projects/ACS/tests/testthat')
data(lambdap_5_tau_10)#
data(lambdap_5_tau_1)#
data(lambdap_5_tau_25)
setwd('/Users/KSauby/Documents/Projects/ACS/tests/testthat')
datasets <- c("lambdap_5_tau_1", "lambdap_5_tau_10", "lambdap_5_tau_25")
setwd('/Users/KSauby/Documents/Projects/ACS/tests/testthat')
samplesizes <- data.frame(#
	seed = 1:12000,#
	N.SRSWOR.plots = rep(c(1,10,25,50),each=3000)#
)#
y_value_mean_observed <- vector()#
y_value_var_observed <- vector()#
total_sample_size <- vector()
i=1
j=1
setwd('/Users/KSauby/Documents/Projects/ACS/tests/testthat')
temp <- createACS(#
			population=dataset[j], #
			seed=samplesizes$seed[i], #
			n1=samplesizes$N.SRSWOR.plots[i],#
			y_variable="y_value"#
		) %>% filter(Sampling!="Edge")
setwd('/Users/KSauby/Documents/Projects')
setwd("./ACS")#
#setwd("./modresproc")#
devtools::test()#
devtools::document()#
devtools::install()
options (error= recover)
setwd('/Users/KSauby/Documents/Projects')
setwd("./ACS")#
#setwd("./modresproc")#
devtools::test()#
devtools::document()#
devtools::install()
options (error= NULL)
setwd('/Users/KSauby/Documents/Projects')
setwd("./ACS")#
#setwd("./modresproc")#
devtools::test()#
devtools::document()#
devtools::install()
setwd('/Users/KSauby/Documents/Projects/ACS/R')
#' Create the population, $\lambda_P$ = 5, $tau$ = 1, from Christman (1997)#
#' #
#' @return The population displayed in Christman (1997), where $\lambda_P$ = 5, $tau$ = 1.#
#' @examples #
#' library(ggplot2)#
#' data(lambdap_5_tau_1)#
#' #
#' ggplot(lambdap_5_tau_1 %>% filter(y_value!=0), aes(x, y)) + geom_text(aes(label=y_value))#
#
#' @references Sauby, K.E and Christman, M.C. \emph{In preparation.} Restricted adaptive cluster sampling.#
#' Christman, M. C. (1997). Efficiency of some sampling designs for spatially clustered populations.. \emph{Environmetrics}, 8: 145--166.#
#' @export#
#
createlambdap_5_tau_1 <- function() {#
	lambdap_5_tau_1 <- expand.grid(#
		x = 1:10,#
		y = 1:10#
	) %>%#
		cbind(#
			y_value = c(#
				rep(0,10),#
				rep(0,4), 49, rep(0,5),#
				rep(0,4), 1, rep(0,5),#
				rep(0,10),#
				rep(0,10),#
				rep(0,7), 52, 5, 0,#
				rep(0,8), 45, 0,#
				rep(0,10),#
				rep(0,10),#
				rep(0,10)#
			)#
		)#
	lambdap_5_tau_1_networks <- assignNetworkMembership(#
		lambdap_5_tau_1 %>% filter(y_value > 0), #
		plot.size=1#
	)#
	# fill in m values#
	lambdap_5_tau_1 %<>% merge(lambdap_5_tau_1_networks, all=T)#
	lambdap_5_tau_1[which(lambdap_5_tau_1$y_value==0), ]$m <- 1#
	# fill in NetworkIDs#
	maxID <- max(lambdap_5_tau_1$NetworkID, na.rm=T)#
	lambdap_5_tau_1[which(is.na(lambdap_5_tau_1$NetworkID)), ]$NetworkID <- seq(from=(maxID + 1), #
		to=(maxID + length(which(is.na(lambdap_5_tau_1$NetworkID)))), by=1)#
	return(lambdap_5_tau_1)#
}
setwd('/Users/KSauby/Documents/Projects/ACS/R')
#' Create the population, $\lambda_P$ = 5, $tau$ = 10, from Christman (1997)#
#' #
#' @return The population displayed in Christman (1997), where $\lambda_P$ = 5, $tau$ = 10.#
#' @examples #
#' library(ggplot2)#
#' data(lambdap_5_tau_10)#
#' #
#' ggplot(lambdap_5_tau_10 %>% filter(y_value!=0), aes(x, y)) + geom_text(aes(label=y_value))#
#' @references Sauby, K.E and Christman, M.C. \emph{In preparation.} Restricted adaptive cluster sampling.#
#' Christman, M. C. (1997). Efficiency of some sampling designs for spatially clustered populations. \emph{Environmetrics}, 8: 145--166.#
#' @export#
#
createlambdap_5_tau_10 <- function() {#
	lambdap_5_tau_10 <- expand.grid(#
		x = 1:10,#
		y = 1:10#
	) %>%#
		cbind(#
			y_value = c(#
				rep(0,4),3,10,22,16,7,7,#
				rep(0,3),2,1,10,10,13,16,9,#
				0,0,1,5,1,5,8,5,8,6,#
				2,1,4,9,8,1,0,1,1,1,#
				1,6,7,9,3,5,1,1,2,0,#
				0,4,8,6,5,2,4,3,2,2,#
				1,1,rep(0,4),3,9,8,3,#
				0,0,0,2,0,0,0,2,3,1,#
				rep(0,7),1,0,0,#
				rep(0,10)#
			)#
		)#
	lambdap_5_tau_10_networks <- assignNetworkMembership(#
		lambdap_5_tau_10 %>% filter(y_value > 0), #
		plot.size=1#
	)#
	# fill in m values#
	lambdap_5_tau_10 %<>% merge(lambdap_5_tau_10_networks, all=T)#
	lambdap_5_tau_10[which(lambdap_5_tau_10$y_value==0), ]$m <- 1#
	# fill in NetworkIDs#
	maxID <- max(lambdap_5_tau_10$NetworkID, na.rm=T)#
	lambdap_5_tau_10[which(is.na(lambdap_5_tau_10$NetworkID)), ]$NetworkID <- seq(from=(maxID + 1), #
		to=(maxID + length(which(is.na(lambdap_5_tau_10$NetworkID)))), by=1)#
	return(lambdap_5_tau_10)#
}
setwd('/Users/KSauby/Documents/Projects/ACS/R')
#' Create the population, $\lambda_P$ = 5, $tau$ = 10, from Christman (1997)#
#' #
#' @return The population displayed in Christman (1997), where $\lambda_P$ = 5, $tau$ = 10.#
#' @examples #
#' library(ggplot2)#
#' data(lambdap_5_tau_25)#
#' #
#' ggplot(lambdap_5_tau_25 %>% filter(y_value!=0), aes(x, y)) + geom_text(aes(label=y_value))#
#' @references Sauby, K.E and Christman, M.C. \emph{In preparation.} Restricted adaptive cluster sampling.#
#' Christman, M. C. (1997). Efficiency of some sampling designs for spatially clustered populations. \emph{Environmetrics}, 8: 145--166.#
#' @export#
#
createlambdap_5_tau_25 <- function() {#
	lambdap_5_tau_25 <- expand.grid(#
		x = 1:10,#
		y = 1:10#
	) %>%#
		cbind(#
			y_value = c(#
				0,0,0,4,rep(0,6),#
				0,0,0,43,17,rep(0,5),#
				rep(0,10),#
				rep(0,10),#
				rep(0,10),#
				rep(0,2), rep(1,4), rep(0,4),#
				rep(0,2), 50, 51, 41, 5, rep(0,4),#
				rep(0,2), 2, 1, rep(0,6),#
				rep(0,10),#
				rep(0,10)#
			)#
		)#
	lambdap_5_tau_25_networks <- assignNetworkMembership(#
		lambdap_5_tau_25 %>% filter(y_value > 0), #
		plot.size=1#
	)#
	# fill in m values#
	lambdap_5_tau_25 %<>% merge(lambdap_5_tau_25_networks, all=T)#
	lambdap_5_tau_25[which(lambdap_5_tau_25$y_value==0), ]$m <- 1#
	# fill in NetworkIDs#
	maxID <- max(lambdap_5_tau_25$NetworkID, na.rm=T)#
	lambdap_5_tau_25[which(is.na(lambdap_5_tau_25$NetworkID)), ]$NetworkID <- seq(from=(maxID + 1), #
		to=(maxID + length(which(is.na(lambdap_5_tau_25$NetworkID)))), by=1)#
#
	ggplot(lambdap_5_tau_25 %>% filter(y_value!=0), aes(x, y)) + geom_text(aes(label=y_value))#
	return(lambdap_5_tau_25)#
}
setwd('/Users/KSauby/Documents/Projects/ACS/R')
#' Example dataset from Christman (1997)#
#'#
#' An example dataset from Christman (1997): $\lambda_P$ = 5, $tau$ = 1.#
#'#
#' \itemize{#
#'   \item y. Y coordinate.#
#'   \item x. X coordinate.#
#'   \item NetworkID. The ID of the network to which the unit belongs.#
#'   \item m. The number of units in the given network.#
#'   \item y_value. The abundance of the species of interest.#
#' }#
#'#
#' @format A data frame with 100 rows and 5 variables#
#' @name lambdap_5_tau_1#
#' @references Sauby, K.E and Christman, M.C. \emph{In preparation.}  #
#'#
#' Christman, M. C. (1997). Efficiency of some sampling designs for spatially clustered populations. \emph{Environmetrics}, 8: 145--166.#
#' @examples #
#' library(ggplot2)#
#' #
#' data(lambdap_5_tau_1)#
#' #
#' ggplot(lambdap_5_tau_1 %>% filter(y_value!=0), aes(x, y)) + geom_text(aes(label=y_value))#
#
NULL
setwd('/Users/KSauby/Documents/Projects/ACS/R')
#' Example dataset from Christman (1997)#
#'#
#' An example dataset from Christman (1997): $\lambda_P$ = 5, $tau$ = 10.#
#'#
#' \itemize{#
#'   \item y. Y coordinate.#
#'   \item x. X coordinate.#
#'   \item NetworkID. The ID of the network to which the unit belongs.#
#'   \item m. The number of units in the given network.#
#'   \item y_value. The abundance of the species of interest.#
#' }#
#'#
#' @format A data frame with 100 rows and 5 variables#
#' @name lambdap_5_tau_10#
#' @references Sauby, K.E and Christman, M.C. \emph{In preparation.}  #
#'#
#' Christman, M. C. (1997). Efficiency of some sampling designs for spatially clustered populations. \emph{Environmetrics}, 8: 145--166.#
#' @examples #
#' library(ggplot2)#
#' #
#' data(lambdap_5_tau_10)#
#' #
#' ggplot(lambdap_5_tau_10 %>% filter(y_value!=0), aes(x, y)) + geom_text(aes(label=y_value))#
#
NULL
setwd('/Users/KSauby/Documents/Projects/ACS/R')
#' Example dataset from Christman (1997)#
#'#
#' An example dataset from Christman (1997): $\lambda_P$ = 5, $tau$ = 2.5.#
#'#
#' \itemize{#
#'   \item y. Y coordinate.#
#'   \item x. X coordinate.#
#'   \item NetworkID. The ID of the network to which the unit belongs.#
#'   \item m. The number of units in the given network.#
#'   \item y_value. The abundance of the species of interest.#
#' }#
#'#
#' @format A data frame with 100 rows and 5 variables#
#' @name lambdap_5_tau_25#
#' @references Sauby, K.E and Christman, M.C. \emph{In preparation.}  #
#'#
#' Christman, M. C. (1997). Efficiency of some sampling designs for spatially clustered populations. \emph{Environmetrics}, 8: 145--166.#
#' @examples #
#' library(ggplot2)#
#' #
#' data(lambdap_5_tau_25)#
#' #
#' ggplot(lambdap_5_tau_25 %>% filter(y_value!=0), aes(x, y)) + geom_text(aes(label=y_value))#
#
NULL
setwd('/Users/KSauby/Documents/Projects')
setwd("./ACS")#
#setwd("./modresproc")#
devtools::test()#
devtools::document()#
devtools::install()
options (error= recover)
setwd('/Users/KSauby/Documents/Projects')
setwd("./ACS")#
#setwd("./modresproc")#
devtools::test()#
devtools::document()#
devtools::install()
options (error= recover)
setwd("./ACS")#
#setwd("./modresproc")#
devtools::test()#
devtools::document()#
devtools::install()
setwd('/Users/KSauby/Documents/Projects')
devtools::test()
setwd('/Users/KSauby/Documents/Projects')
setwd("./ACS")#
#setwd("./modresproc")#
devtools::test()
setwd('/Users/KSauby/Documents/Projects')
setwd("./ACS")#
#setwd("./modresproc")#
devtools::test()#
devtools::document()#
devtools::install()
library(ACSampling)

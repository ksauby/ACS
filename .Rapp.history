setwd('/Users/KSauby/Documents/Projects/ACSampling_project/code/Manuscript/simulations')
calculated_pi_ijs = population_inclusion_probabilities$pop2$piij_20
setwd('/Users/KSauby/Documents/Projects/ACSampling_project/code/Manuscript/simulations')
pop_data <- patch_data %>% filter(pop == population)#
	pop_data_saved <- pop_data#
	pop_data %<>%#
		group_by(NetworkID) %>% #
		summarise(m = m[1]) %>% #
		as.data.frame#
	# arrange population data the same as simulation data#
	sim_data_names <- simulation_data %>% colnames() %>% as.numeric#
	pop_data %<>% .[match(sim_data_names, .$NetworkID), ]#
	# calculate pi_ij from simulations#
	D <- simulation_data/simulation_sample_size#
	# error = (observed - expected)/expected#
	sim_error <- ((calculated_pi_ijs - D))#/simulation_sample_size
head(sim_error)
sim_error[, "10"]
setwd('/Users/KSauby/Documents/Projects/ACSampling_project/code/Manuscript/simulations')
patchdat = lambdap_10_tau_25
setwd('/Users/KSauby/Documents/Projects/ACSampling_project/code/Manuscript/simulations')
nsamples = c(10,20)
setwd('/Users/KSauby/Documents/Projects/ACSampling_project/code/Manuscript/simulations')
simulations = 10000
setwd('/Users/KSauby/Documents/Projects/ACSampling_project/code/Manuscript/simulations')
#ACS=TRUE, #
	SamplingDesign="ACS"
setwd('/Users/KSauby/Documents/Projects/ACSampling_project/code/Manuscript/simulations')
y_variable = "y_value"
setwd('/Users/KSauby/Documents/Projects/ACSampling_project/code/Manuscript/simulations')
population.grouping.variable="pop"
head(lambdap_10_tau_25)
setwd('/Users/KSauby/Documents/Projects/ACS/R')
pop <- i <- j <- Sampling <- . <- NetworkID <- NULL#
	TIME 			<- Sys.time()#
	patchdat 		%<>% arrange_(.dots=population.grouping.variable)#
	if (population.grouping.variable != "pop") {#
		patchdat	%<>% setnames(population.grouping.variable, "pop") #
	}#
	n.pop 			<- length(unique(patchdat$pop))#
	nsample.length 	<- length(nsamples)#
	A 				<- vector("list", n.pop)#
	B 				<- vector("list", n.pop)
i=1
j=1
k=1
setwd('/Users/KSauby/Documents/Projects/ACS/R')
P 			<- patchdat %>% filter(pop==unique(patchdat$pop)[i])#
			P$coords <- with(P, paste(x,y,sep="_"))#
			N 			<- dim(P)[1]#
			n1 			<- nsamples[j]#
			# save simulation attributes#
			A[[i]][[j]] <- list()#
			# save counts of joint inclusions#
			B[[i]][[j]] <- matrix(#
				nrow=length(unique(P$NetworkID)),#
				ncol=length(unique(P$NetworkID)),#
				dimnames=list(#
					unique(P$NetworkID),#
					unique(P$NetworkID)#
				),#
				0#
			)#
			# zeros#
			zeros <- matrix(#
				nrow=length(unique(P$NetworkID)),#
				ncol=length(unique(P$NetworkID)),#
				dimnames=list(#
					unique(P$NetworkID),#
					unique(P$NetworkID)#
				),#
				0#
			)#
			r 			<- (i - 1) * j + j#
			seeds 		<- runif(simulations)
setwd('/Users/KSauby/Documents/Projects/ACS/R')
temp_seed <- seeds[k]*100000
setwd('/Users/KSauby/Documents/Projects/ACS/R')
alldata <- createACS(#
						population=P, #
						seed=temp_seed, #
						n1=n1, #
						y_variable=y_variable#
					) %>% #
						as.data.table
setwd('/Users/KSauby/Documents/Projects/ACS/R')
alldata %>% #
					filter(Sampling!="Edge") %>%#
					dplyr::select(pop, x, y, NetworkID)
setwd('/Users/KSauby/Documents/Projects/ACS/R')
A[[i]][[j]][[k]] <- alldata %>% #
					filter(Sampling!="Edge") %>%#
					dplyr::select(pop, x, y, NetworkID)#
				# save for m summary data#
				data_networks <- alldata %>%#
					filter(m!=0)
setwd('/Users/KSauby/Documents/Projects/ACS/R')
A[[i]][[j]][[k]]$coords <- with(#
					A[[i]][[j]][[k]], #
					paste(x,y,sep="_")#
				)
setwd('/Users/KSauby/Documents/Projects/ACS/R')
Z <- matrix(#
					nrow=length(unique(A[[i]][[j]][[k]]$NetworkID)),#
					ncol=length(unique(A[[i]][[j]][[k]]$NetworkID)),#
					dimnames=list(#
						unique(A[[i]][[j]][[k]]$NetworkID),#
						unique(A[[i]][[j]][[k]]$NetworkID)#
					),#
					1#
				)
setwd('/Users/KSauby/Documents/Projects/ACS/R')
unique(A[[i]][[j]][[k]]$NetworkID)
setwd('/Users/KSauby/Documents/Projects/ACS/R')
Z
setwd('/Users/KSauby/Documents/Projects/ACS/R')
indxB <- outer(#
					rownames(B[[i]][[j]]), #
					colnames(B[[i]][[j]]), #
					FUN=paste#
				) %in% outer(#
					rownames(Z), #
					colnames(Z), #
					FUN=paste#
				)#
				B1 <- zeros#
				# fill B1 with values from Z at indxB locations#
				B1[indxB] <- Z
setwd('/Users/KSauby/Documents/Projects/ACS/R')
B1
setwd('/Users/KSauby/Documents/Projects/ACS/R')
B[[i]][[j]]
setwd('/Users/KSauby/Documents/Projects/ACS/R')
B1
setwd('/Users/KSauby/Documents/Projects')
setwd("./ACS")#
#setwd("./modresproc")#
#devtools::test()#
devtools::document()#
devtools::install()
setwd('/Users/KSauby/Documents/Projects/ACSampling_project/code')
cl<-makeCluster(4)#
registerDoParallel(cl)
setwd('/Users/KSauby/Documents/Projects/ACSampling_project/code/Manuscript/simulations')
lambdap_10_tau_25$pop=1#
calc_20Nov16_5 <- calculateJointInclusionProbabilities(#
	patchdat = lambdap_10_tau_25, #
	simulations = 2000, #
	nsamples = c(10,20), # 40 and 75 took 3.4 hours! #
	#ACS=TRUE, #
	SamplingDesign="ACS",#
	y_variable = "y_value",#
	population.grouping.variable="pop"#
) #
#
write.csv(calc_20Nov16_5[[1]], "/Users/KSauby/Documents/Projects/ACSampling_project/data/csv_data_files/simulatedJointInclusProb_test_lambdap_10_tau_25_attr_19ju17.csv")#
list.save(calc_20Nov16_5[[2]], file="simulatedJointInclusProb_test_lambdap_10_tau_2519ju17.RData")
setwd('/Users/KSauby/Documents/Projects/ACSampling_project/code/Manuscript/simulations')
dat1 <-	list.load("simulatedJointInclusProb_test_lambdap_10_tau_2519ju17.RData")
setwd('/Users/KSauby/Documents/Projects/ACSampling_project/code/Manuscript')
rmarkdown::render('Manuscript.Rmd')
setwd('/Users/KSauby/Documents/Projects/ACSampling_project/code/Manuscript/simulations')
source("1_set_variables.R")#
source("2_create_realizations.R")#
source("3_summarise_network_information.R")#
source("4_calculate_realization_summary_statistics.R")#
Sys.time()#
#source("5_run_simulations.R")#
source("6_merge_simulation_results.R")#
source("7_simulation_summary_statistics.R")#
source("8_number_of_bootstraps_per_realization_sampling.R")
setwd('/Users/KSauby/Documents/Projects/ACSampling_project/code/Manuscript')
rmarkdown::render('Manuscript.Rmd')
? summarise_at
setwd('/Users/KSauby/Documents/Projects/ACS/R')
#' Calculate the number of units per network and the unit inclusion probability for each network. #
#' @description The purpose of this is to reduce computation time by calculating some necessary information before the data is boostrapped. The function calculates (1) $pi_i$ (the unit inclusion probability) for each network and sample size (\code{nsamples}) and (2) the number of units per network for each of the \code{variables}.#
#' @param population_data population data#
#' @param variables variables to summarise#
#' @param grouping.variables categories that group networks#
#' @param nsamples Size(s) of the initial simple random sample(s) without replacement. Can be a single value or a vector values.#
#' @param m_var The variable on which the ACS sampling criterion is based#
#' @return The population data (one row per cell of each population), with additional columns indicating $pi_i$ for each network and (\code{nsamples}) and the number of units per network for each of the \code{variables}.#
#' @references Sauby, K.E and Christman, M.C. \emph{In preparation.} Restricted adaptive cluster sampling.#
#' @export#
#' @importFrom dplyr funs#
#
summarizeNetworkInformation <- function(population_data, variables, grouping.variables=NULL, nsamples, m_var) {#
	stopifnot(length(unique(patch_data$N)) == 1)#
	N <- unique(patch_data$N) #. <- NULL#
	# calculate the number of units per network for each variable#
	Networks <- patch_data %>%#
		# select these columns#
		.[, c(variables, "NetworkID", grouping.variables, "m")] %>%#
		# group_by these columns#
		group_by_(.dots=c("NetworkID", grouping.variables, "m")) %>%#
		# calculate the sum of the remaining columns (the "variables" columns)#
		summarise_at(funs(sum(., na.rm=T)))#
	m <- paste("Networks$", m_var, sep="")#
	# calculate pi_i for each network and sample size (nsample)#
	for (i in 1:length(nsamples)) {#
		Networks$Var = sapply(#
			Networks$m,#
			function(x) {pi_i(N=N, n1=nsamples[i], m=x)}#
		)#
		names(Networks)[dim(Networks)[2]] <- paste(#
			"pi_i_n1_", nsamples[i], sep=""#
		)#
	}#
	# #
	for (i in 1:length(variables)) {#
		names(Networks) <- ifelse(#
			names(Networks) %in% variables[i],#
			paste(variables[i], "_network_sum", sep=""),#
			names(Networks)#
		)#
	}#
	patch_data %<>% merge(Networks)#
	return(patch_data)#
}
setwd('/Users/KSauby/Documents/Projects/ACSampling_project/code/Manuscript/simulations')
N 					<- patch_data$N[1]#
nsamples			<- c( 20, 30, 40, 75, 100) #, 150, 200)#
grouping.variables	<- c("n.networks", "realization")#
#
patch_data <- summarizeNetworkInformation(#
	population_data = patch_data, #
	variables = c(ovar, rvar), #
	grouping.variables = grouping.variables, #
	nsamples = nsamples, #
	m_var="Cactus"#
)
setwd('/Users/KSauby/Documents/Projects/ACS/R')
#' Calculate the number of units per network and the unit inclusion probability for each network. #
#' @description The purpose of this is to reduce computation time by calculating some necessary information before the data is boostrapped. The function calculates (1) $pi_i$ (the unit inclusion probability) for each network and sample size (\code{nsamples}) and (2) the number of units per network for each of the \code{variables}.#
#' @param population_data population data#
#' @param variables variables to summarise#
#' @param grouping.variables categories that group networks#
#' @param nsamples Size(s) of the initial simple random sample(s) without replacement. Can be a single value or a vector values.#
#' @param m_var The variable on which the ACS sampling criterion is based#
#' @return The population data (one row per cell of each population), with additional columns indicating $pi_i$ for each network and (\code{nsamples}) and the number of units per network for each of the \code{variables}.#
#' @references Sauby, K.E and Christman, M.C. \emph{In preparation.} Restricted adaptive cluster sampling.#
#' @export#
#' @importFrom dplyr funs#
#
summarizeNetworkInformation <- function(population_data, variables, grouping.variables=NULL, nsamples, m_var) {#
	stopifnot(length(unique(patch_data$N)) == 1)#
	N <- unique(patch_data$N) #. <- NULL#
	# calculate the number of units per network for each variable#
	Networks <- patch_data %>%#
		# select these columns#
		.[, c(variables, "NetworkID", grouping.variables, "m")] %>%#
		# group_by these columns#
		group_by_(.dots=c("NetworkID", grouping.variables, "m")) %>%#
		# calculate the sum of the remaining columns (the "variables" columns)#
		summarise_all(funs(sum(., na.rm=T)))#
	m <- paste("Networks$", m_var, sep="")#
	# calculate pi_i for each network and sample size (nsample)#
	for (i in 1:length(nsamples)) {#
		Networks$Var = sapply(#
			Networks$m,#
			function(x) {pi_i(N=N, n1=nsamples[i], m=x)}#
		)#
		names(Networks)[dim(Networks)[2]] <- paste(#
			"pi_i_n1_", nsamples[i], sep=""#
		)#
	}#
	# #
	for (i in 1:length(variables)) {#
		names(Networks) <- ifelse(#
			names(Networks) %in% variables[i],#
			paste(variables[i], "_network_sum", sep=""),#
			names(Networks)#
		)#
	}#
	patch_data %<>% merge(Networks)#
	return(patch_data)#
}
setwd('/Users/KSauby/Documents/Projects/ACSampling_project/code/Manuscript/simulations')
N 					<- patch_data$N[1]#
nsamples			<- c( 20, 30, 40, 75, 100) #, 150, 200)#
grouping.variables	<- c("n.networks", "realization")#
#
patch_data <- summarizeNetworkInformation(#
	population_data = patch_data, #
	variables = c(ovar, rvar), #
	grouping.variables = grouping.variables, #
	nsamples = nsamples, #
	m_var="Cactus"#
)
setwd('/Users/KSauby/Documents/Projects/ACSampling_project/code/Manuscript/simulations')
population.grouping.variables	<- c("population")#
sampling.grouping.variables <- c("N.SRSWOR.plots", "SamplingDesign", "Plots")#
statistics 			<- c("mean", "var")#
ratio.statistics	<- c("mean")#
#
# variance#
A <- patch_data_summary[[2]] %>%#
	dplyr::select(Var, variable, population) %>%#
	rowwise() %>%#
	mutate(#
		variable = replace(#
			variable,#
			which(variable %in% rvar),#
			paste(variable, "ratio", sep="_")#
			)#
	) %>%#
	ungroup() %>%#
	reshape2::dcast(., population ~ variable, value.var="Var")#
names(A)[2:10] <- paste(names(A)[2:10], "var", sep="_")#
# mean#
B <- patch_data_summary[[2]] %>%#
	dplyr::select(Mean, variable, population) %>%#
	rowwise() %>%#
	mutate(#
		variable = replace(#
			variable,#
			which(variable %in% rvar),#
			paste(variable, "ratio", sep="_")#
			)#
	) %>%#
	ungroup() %>%#
	reshape2::dcast(., population ~ variable, value.var="Mean")#
names(B)[2:10] <- paste(names(B)[2:10], "mean", sep="_")#
patch_data_summary_wide <- merge(A, B)
setwd('/Users/KSauby/Documents/Projects/ACSampling_project/code/Manuscript/simulations')
simdata_all <- rbind.fill(#
	simdata_restricted,#
	simdata#
)#
#
names(simdata_all)[#
	which(names(simdata_all) %in% c(#
		"CACA_on_Stricta_mean_observed",#
		"CACA_on_Stricta_var_observed",#
		"MEPR_on_Stricta_mean_observed",#
		"MEPR_on_Stricta_var_observed",#
		"Old_Moth_Evidence_Pusilla_mean_observed",#
		"Old_Moth_Evidence_Pusilla_var_observed",#
		"Old_Moth_Evidence_Stricta_mean_observed", 		"Old_Moth_Evidence_Stricta_var_observed",#
		"Percent_Cover_Stricta_mean_observed",    #
		"Percent_Cover_Stricta_var_observed",#
		"Height_Stricta_mean_observed",#
		"Height_Stricta_var_observed"#
	))#
] <- c(#
	"CACA_on_Stricta_ratio_mean_observed",#
	"CACA_on_Stricta_ratio_var_observed",#
	"MEPR_on_Stricta_ratio_mean_observed",#
	"MEPR_on_Stricta_ratio_var_observed",#
	"Old_Moth_Evidence_Pusilla_ratio_mean_observed",#
	"Old_Moth_Evidence_Pusilla_ratio_var_observed",#
	"Old_Moth_Evidence_Stricta_ratio_mean_observed", 	"Old_Moth_Evidence_Stricta_ratio_var_observed",#
	"Percent_Cover_Stricta_ratio_mean_observed",    #
	"Percent_Cover_Stricta_ratio_var_observed",#
	"Height_Stricta_ratio_mean_observed",#
	"Height_Stricta_ratio_var_observed"#
)#
#
simdata_all %<>% setnames("n.networks", "population")#
simdata_all$population %<>% as.factor()#
levels(simdata_all$population) <- 1:6#
simulation_data_summary_table_original_yHT = calculateSamplingBias(#
	population_data_summary	= patch_data_summary_wide, #
	simulation_data		= simdata_all, #
	sampling.grouping.variables	= sampling.grouping.variables, #
	population.grouping.variables = population.grouping.variables,#
	variables			= ovar, #
	rvar				= rvar#
)#
#
simulation_data_summary_table_ACS <- simulation_data_summary_table_original_yHT %>% filter(SamplingDesign=="ACS")#
#
simulation_data_summary_table_RACS <- simulation_data_summary_table_original_yHT %>% filter(SamplingDesign=="RACS")
setwd('/Users/KSauby/Documents/Projects/ACSampling_project/code/Manuscript/simulations')
population_data_summary	= patch_data_summary_wide
setwd('/Users/KSauby/Documents/Projects/ACSampling_project/code/Manuscript/simulations')
simulation_data		= simdata_all
setwd('/Users/KSauby/Documents/Projects/ACSampling_project/code/Manuscript/simulations')
sampling.grouping.variables	= sampling.grouping.variables
setwd('/Users/KSauby/Documents/Projects/ACSampling_project/code/Manuscript/simulations')
variables			= ovar
setwd('/Users/KSauby/Documents/Projects/ACS/R')
rvar <- paste(rvar, "_ratio", sep="")#
	variables <- c(variables, rvar)#
	. <- NULL#
	X <- merge(population_data_summary, simulation_data, by=population.grouping.variables)#
	# number of simulations#
	n_sims <- X %>% #
		group_by_(.dots = c(#
			population.grouping.variables, #
			sampling.grouping.variables#
		)) %>%#
		summarise(n_sims = n()#
		)
setwd('/Users/KSauby/Documents/Projects/ACS/R')
X <- merge(#
		X, #
		n_sims, #
		by = c(#
			population.grouping.variables, #
			sampling.grouping.variables#
		)#
	)#
	# mean of observed means	#
	temp <- X %>% group_by_(.dots = c(#
		population.grouping.variables, #
		sampling.grouping.variables, #
		"n_sims"#
	))#
	A <- vector("list", length(variables))
i=1
setwd('/Users/KSauby/Documents/Projects/ACS/R')
variables
setwd('/Users/KSauby/Documents/Projects/ACS/R')
A[[i]] <- list()#
		# observed mean#
		A[[i]] <- temp %>%#
			summarise_(#
				mean_of_observed_means = interp(#
					~mean(var, na.rm = TRUE), #
					var = #
					as.name(#
						paste(#
							variables[i],#
							"_mean_observed",#
							sep=""#
						)#
					)#
				),#
				sample_size = interp(#
					~length(var[which(!is.na(var))]), #
					var = #
					as.name(#
						paste(#
							variables[i],#
							"_mean_observed",#
							sep=""#
						)#
					)#
				)#
			) %>%#
			setnames(#
		      	.,#
		      	"mean_of_observed_means",#
		      	paste(#
		      		variables[i],#
		      		"_mean_of_observed_means",#
		      		sep=""#
				)#
			) %>%#
			setnames(#
		      	.,#
		      	"sample_size",#
		      	paste(#
		      		variables[i],#
		      		"_mean_of_observed_means_n",#
		      		sep=""#
				)#
			)
setwd('/Users/KSauby/Documents/Projects/ACS/R')
for (i in 1:length(variables)) {#
		A[[i]] <- list()#
		# observed mean#
		A[[i]] <- temp %>%#
			summarise_(#
				mean_of_observed_means = interp(#
					~mean(var, na.rm = TRUE), #
					var = #
					as.name(#
						paste(#
							variables[i],#
							"_mean_observed",#
							sep=""#
						)#
					)#
				),#
				sample_size = interp(#
					~length(var[which(!is.na(var))]), #
					var = #
					as.name(#
						paste(#
							variables[i],#
							"_mean_observed",#
							sep=""#
						)#
					)#
				)#
			) %>%#
			setnames(#
		      	.,#
		      	"mean_of_observed_means",#
		      	paste(#
		      		variables[i],#
		      		"_mean_of_observed_means",#
		      		sep=""#
				)#
			) %>%#
			setnames(#
		      	.,#
		      	"sample_size",#
		      	paste(#
		      		variables[i],#
		      		"_mean_of_observed_means_n",#
		      		sep=""#
				)#
			)#
	}#
	Y <- Reduce(#
		function(x, y) merge(#
			x, y,#
			by=c(#
				population.grouping.variables, #
				sampling.grouping.variables, #
				"n_sims"#
			)#
		),#
		A#
	)#
	X <- merge(#
		X, #
		Y, #
		by=c(#
			population.grouping.variables, #
			sampling.grouping.variables,#
			"n_sims"#
		)#
	)
i=1
setwd('/Users/KSauby/Documents/Projects/ACS/R')
X %<>%#
			mutate(#
				observed_minus_true = #
						# observed -#
						(eval(#
							parse(#
								text=paste(#
									"X$", #
									variables[i], #
									"_mean_observed", #
									sep=""#
								)#
							)#
						) - #
						# true#
						eval(#
							parse(#
								text = paste(#
								"X$", #
								variables[i], #
								"_mean", #
								sep=""#
							)#
						)#
						)#
				)^2#
			) %>%#
			setnames(#
				., #
				"observed_minus_true", #
				paste(#
					variables[i], #
					"_mean_observed_minus_true", #
					sep=""#
				)
)
setwd('/Users/KSauby/Documents/Projects/ACS/R')
paste(#
									"X$", #
									variables[i], #
									"_mean_observed", #
									sep=""#
								)
setwd('/Users/KSauby/Documents/Projects/ACS/R')
eval(#
							parse(#
								text=paste(#
									"X$", #
									variables[i], #
									"_mean_observed", #
									sep=""#
								)#
							)
)
setwd('/Users/KSauby/Documents/Projects/ACS/R')
X %<>%#
			mutate(#
				observed_minus_true = #
						# observed -#
						(eval(#
							parse(#
								text=paste(#
									"X$", #
									variables[i], #
									"_mean_observed", #
									sep=""#
								)#
							)#
						) - #
						# true#
						eval(#
							parse(#
								text = paste(#
								"X$", #
								variables[i], #
								"_mean", #
								sep=""#
							)#
						)#
						)#
				)^2#
			)
x<-c(1,2)#
x#
names(x)<- c("bob","ed")#
x$ed
x
class(x)
x["ed"]
setwd('/Users/KSauby/Documents/Projects/ACS/R')
X %<>%#
			mutate(#
				observed_minus_true = #
						# observed -#
						(eval(#
							parse(#
								text=paste(#
									variables[i], #
									"_mean_observed", #
									sep=""#
								)#
							)#
						) - #
						# true#
						eval(#
							parse(#
								text = paste(#
								variables[i], #
								"_mean", #
								sep=""#
							)#
						)#
						)#
				)^2#
			)
setwd('/Users/KSauby/Documents/Projects/ACS/R')
#' Calculate Simulation Data Sampling Bias#
#' #
#' @param population_data_summary Summary statistics on the species patch realizations of patches (created by \code{calculateRealizationSummaryStatistics} function).#
#' @param simulation_data Simulation data on sampling of the multiple patch realizations.#
#' @param population.grouping.variables Categorical variables with which to group the population data (e.g., artificial population number if there are more than 1)#
#' @param sampling.grouping.variables Categorical variables with which to group the simulation data (e.g., sampling design used, number of primary samples).#
#' @param variables Vector of variables for which sampling bias should be estimated.#
#' @param rvar Variables for which to use ratio estimators#
#' @return Dataframe including simulation data summary statistics, including relative bias and mean squared error (MSE) of the mean and variance.#
#' @examples#
#' # Create realizations#
#' x_start = 1#
#' x_end = 30#
#' y_start = 1#
#' y_end = 30#
#' n.networks = c(5, 15, 10, 20, 30, 40)#
#' n.realizations = 1#
#' SpeciesInfo = PlotSurveys_season1#
#' Species.Fields = c("Stricta", "Pusilla", "Cactus")#
#' cactus.realizations = createSpeciesPatchRealizations(x_start, x_end,#
#' 	y_start, y_end, buffer=5, n.networks, n.realizations, SpeciesInfo, #
#' 	start.seed=1, Species.Fields)#
#' #
#' # Sample from the realizations#
#' simulations=1#
#' nsamples=c(5,10,20,40)#
#' population <- createPopulation(x_start = 1, x_end = 30, y_start = 1, #
#' 	y_end = 30)#
#' abundance.variables = NULL#
#' occupancy.variables = c(#
#' 	"Stricta",#
#' 	"Pusilla",#
#' 	"Cactus",#
#' 	"CACA_on_Pusilla",#
#' 	"CACA_on_Stricta",#
#' 	"MEPR_on_Pusilla",#
#' 	"MEPR_on_Stricta",#
#' 	"Old_Moth_Evidence_Pusilla",#
#' 	"Old_Moth_Evidence_Stricta"#
#' 	# "Percent_Cover_Pusilla", # how do I do these? they are occupancy nor abundance#
#' 	# "Percent_Cover_Stricta",#
#' 	# "Height_Pusilla",#
#' 	# "Height_Stricta",#
#' )		#
#' patch_data = cactus.realizations#
#' # simulation_data <- sampleSpeciesPatchRealizations(patch_data, simulations, #
#' #	nsamples, population, abundance.variables, occupancy.variables)#
#' #
#' # summary.variables = occupancy.variables#
#' # grouping.variables = c("n.networks", "realization")#
#' # dataset = cactus.realizations#
#' # patch_data_summary <- calculateRealizationSummaryStatistics(dataset, #
#' # 	summary.variables, grouping.variables)#
#' # avar = NULL#
#' @export#
#
calculateSamplingBias <- function(#
	population_data_summary, #
	simulation_data, #
	population.grouping.variables, #
	sampling.grouping.variables,#
	variables, #
	rvar#
)#
{#
	rvar <- paste(rvar, "_ratio", sep="")#
	variables <- c(variables, rvar)#
	. <- NULL#
	X <- merge(population_data_summary, simulation_data, by=population.grouping.variables)#
	# number of simulations#
	n_sims <- X %>% #
		group_by_(.dots = c(#
			population.grouping.variables, #
			sampling.grouping.variables#
		)) %>%#
		summarise(n_sims = n()#
		)#
	X <- merge(#
		X, #
		n_sims, #
		by = c(#
			population.grouping.variables, #
			sampling.grouping.variables#
		)#
	)#
	# mean of observed means	#
	temp <- X %>% group_by_(.dots = c(#
		population.grouping.variables, #
		sampling.grouping.variables, #
		"n_sims"#
	))#
	A <- vector("list", length(variables))#
	### OCCUPANCY VARIABLES	#
	for (i in 1:length(variables)) {#
		A[[i]] <- list()#
		# observed mean#
		A[[i]] <- temp %>%#
			summarise_(#
				mean_of_observed_means = interp(#
					~mean(var, na.rm = TRUE), #
					var = #
					as.name(#
						paste(#
							variables[i],#
							"_mean_observed",#
							sep=""#
						)#
					)#
				),#
				sample_size = interp(#
					~length(var[which(!is.na(var))]), #
					var = #
					as.name(#
						paste(#
							variables[i],#
							"_mean_observed",#
							sep=""#
						)#
					)#
				)#
			) %>%#
			setnames(#
		      	.,#
		      	"mean_of_observed_means",#
		      	paste(#
		      		variables[i],#
		      		"_mean_of_observed_means",#
		      		sep=""#
				)#
			) %>%#
			setnames(#
		      	.,#
		      	"sample_size",#
		      	paste(#
		      		variables[i],#
		      		"_mean_of_observed_means_n",#
		      		sep=""#
				)#
			)#
	}#
	Y <- Reduce(#
		function(x, y) merge(#
			x, y,#
			by=c(#
				population.grouping.variables, #
				sampling.grouping.variables, #
				"n_sims"#
			)#
		),#
		A#
	)#
	X <- merge(#
		X, #
		Y, #
		by=c(#
			population.grouping.variables, #
			sampling.grouping.variables,#
			"n_sims"#
		)#
	)#
	# calculate squared differences for each simulation and variable#
	for (i in 1:length(variables)) {#
		X %<>%#
			mutate(#
				observed_minus_true = #
						# observed -#
						(eval(#
							parse(#
								text=paste(#
									variables[i], #
									"_mean_observed", #
									sep=""#
								)#
							)#
						) - #
						# true#
						eval(#
							parse(#
								text = paste(#
								variables[i], #
								"_mean", #
								sep=""#
							)#
						)#
						)#
				)^2#
			) %>%#
			setnames(#
				., #
				"observed_minus_true", #
				paste(#
					variables[i], #
					"_mean_observed_minus_true", #
					sep=""#
				)#
			)#
	}#
	# calculate squared differences (observed - mean of observed) for each variable#
	for (i in 1:length(variables)) {#
		X %<>%#
			mutate(#
				observed_minus_mean_of_observed_means = #
						# (observed -#
						eval(#
							parse(#
								text = paste(#
									variables[i], #
									"_mean_observed", #
									sep=""#
								)#
							)#
						) - #
						# true)#
						eval(#
							parse(#
								text = paste(#
									variables[i], #
									"_mean_of_observed_means", #
									sep=""#
								)#
							)#
						)#
			) %>%#
			setnames(#
				., #
				"observed_minus_mean_of_observed_means", #
				paste(#
					variables[i], #
					"_observed_minus_mean_of_observed_means", #
					sep=""#
				)#
			)#
	}#
	# calculate bias and MSE#
	A <- vector("list", length(variables))#
	X.grp <- X %>% group_by_(.dots=c(#
		population.grouping.variables, #
		sampling.grouping.variables, #
		"n_sims"#
	))#
	for (i in 1:length(variables)) {#
		A[[i]] <- list()#
		A[[i]] <- X.grp %>%#
			summarise_(#
				# save true mean#
				true_mean = interp(#
					~var[1], #
					var = #
					as.name(#
						paste(#
							variables[i],#
							"_mean", #
							sep=""#
						)#
					)#
				),#
				# calculate mean of observed means#
				mean_of_observed_means = interp(#
					~mean(var, na.rm = TRUE), #
					var = #
					as.name(#
						paste(#
							variables[i],#
							"_mean_observed",#
							sep=""#
						)#
					)#
				),#
				RB_n = interp(#
					~length(var[which(!is.na(var))]), #
					var = #
					as.name(#
						paste(#
							variables[i],#
							"_mean_observed",#
							sep=""#
						)#
					)#
				),#
				# calculate sum of MSEs#
				sum_of_observed_minus_true_sqrd = interp(#
					~sum(var, na.rm = TRUE), #
					var = #
					as.name(#
						paste(#
							variables[i],#
							"_mean_observed_minus_true",#
							sep=""#
						)#
					)#
				),#
				MSE_n = interp(#
					~length(var[which(!is.na(var))]), #
					var = #
					as.name(#
						paste(#
							variables[i],#
							"_mean_observed_minus_true",#
							sep=""#
						)#
					)#
				),#
				# calculate mean of simulated HT variance estimates#
				mean_of_var_estimates = interp(#
					~mean(var, na.rm = TRUE), #
					var = #
					as.name(#
						paste(#
							variables[i],#
							"_var_observed",#
							sep=""#
						)#
					)#
				),#
				mean_of_var_estimates_n = interp(#
					~length(var[which(!is.na(var))]), #
					var = #
					as.name(#
						paste(#
							variables[i],#
							"_var_observed",#
							sep=""#
						)#
					)#
				),#
				# calculate variance of simulated HT mean estimates#
				var_of_mean_estimates = interp(#
					~var(variable, na.rm = TRUE), #
					variable = #
					as.name(#
						paste(#
							variables[i],#
							"_observed_minus_mean_of_observed_means",#
							sep=""#
						)#
					)#
				),#
				var_of_mean_estimates_n = interp(#
					~length(var[which(!is.na(var))]), #
					var = #
					as.name(#
						paste(#
							variables[i],#
							"_observed_minus_mean_of_observed_means",#
							sep=""#
						)#
					)#
				)#
			) %>%#
				as.data.frame#
			A[[i]] %<>% #
				mutate(#
					# var_mean = Mean()#
					RB = 100 * #
						(mean_of_observed_means - true_mean) / #
						true_mean,#
					MSE = sum_of_observed_minus_true_sqrd/n_sims,#
					var_RB = 100 * (mean_of_var_estimates - #
						var_of_mean_estimates) / #
						var_of_mean_estimates,#
					var_RB_n = min(#
						mean_of_var_estimates_n, #
						var_of_mean_estimates_n#
					)#
				) %>%#
				setnames(#
		      		.,#
		      		"true_mean",#
		      		paste(#
		      			variables[i],#
		      			"_true_mean",#
		      			sep=""#
					)#
				) %>%#
				setnames(#
		      		.,#
		      		"RB",#
		      		paste(#
		      			variables[i],#
		      			"_mean_RB",#
		      			sep=""#
					)#
				) %>%#
				setnames(#
		      		.,#
		      		"MSE",#
		      		paste(#
		      			variables[i],#
		      			"_mean_MSE",#
		      			sep=""#
					)#
				) %>%#
				setnames(#
		      		.,#
		      		"var_RB",#
		      		paste(#
		      			variables[i],#
		      			"_var_RB",#
		      			sep=""#
					)#
				) %>%#
				# rename sample size variables#
				setnames(#
		      		.,#
		      		"RB_n",#
		      		paste(#
		      			variables[i],#
		      			"_mean_RB_n",#
		      			sep=""#
					)#
				) %>%#
				setnames(#
		      		.,#
		      		"MSE_n",#
		      		paste(#
		      			variables[i],#
		      			"_mean_MSE_n",#
		      			sep=""#
					)#
				) %>%#
				setnames(#
		      		.,#
		      		"var_RB_n",#
		      		paste(#
		      			variables[i],#
		      			"_var_RB_n",#
		      			sep=""#
					)#
				) %>%#
				dplyr::select(-c(#
					mean_of_observed_means,#
					sum_of_observed_minus_true_sqrd,#
					mean_of_var_estimates,#
					mean_of_var_estimates_n,#
					var_of_mean_estimates,#
					var_of_mean_estimates_n#
				))#
	}#
	Y <- Reduce(#
		function(x, y) merge(#
			x, y,#
			by=c(#
				population.grouping.variables, #
				sampling.grouping.variables, #
				"n_sims"#
			)#
		),#
		A#
	)#
#	X$Prop.Area.Surveyed = with(X, N.Total.plots/N)		#
	return(Y)#
}
setwd('/Users/KSauby/Documents/Projects/ACSampling_project/code/Manuscript/simulations')
simulation_data_summary_table_original_yHT = calculateSamplingBias(#
	population_data_summary	= patch_data_summary_wide, #
	simulation_data		= simdata_all, #
	sampling.grouping.variables	= sampling.grouping.variables, #
	population.grouping.variables = population.grouping.variables,#
	variables			= ovar, #
	rvar				= rvar#
)
setwd('/Users/KSauby/Documents/Projects')
setwd("./ACS")#
#setwd("./modresproc")#
#devtools::test()#
devtools::document()#
devtools::install()
setwd('/Users/KSauby/Documents/Projects/ACSampling_project/code/Manuscript/simulations')
population.grouping.variables	<- c("population")#
sampling.grouping.variables <- c("N.SRSWOR.plots", "SamplingDesign", "Plots")#
statistics 			<- c("mean", "var")#
ratio.statistics	<- c("mean")#
#
# variance#
A <- patch_data_summary[[2]] %>%#
	dplyr::select(Var, variable, population) %>%#
	rowwise() %>%#
	mutate(#
		variable = replace(#
			variable,#
			which(variable %in% rvar),#
			paste(variable, "ratio", sep="_")#
			)#
	) %>%#
	ungroup() %>%#
	reshape2::dcast(., population ~ variable, value.var="Var")#
names(A)[2:10] <- paste(names(A)[2:10], "var", sep="_")#
# mean#
B <- patch_data_summary[[2]] %>%#
	dplyr::select(Mean, variable, population) %>%#
	rowwise() %>%#
	mutate(#
		variable = replace(#
			variable,#
			which(variable %in% rvar),#
			paste(variable, "ratio", sep="_")#
			)#
	) %>%#
	ungroup() %>%#
	reshape2::dcast(., population ~ variable, value.var="Mean")#
names(B)[2:10] <- paste(names(B)[2:10], "mean", sep="_")#
patch_data_summary_wide <- merge(A, B)#
#
# -----------------------------------------------------------------------------##
# Simulations testing biased-ness of insects variables NOT using ratio estimator#
# -----------------------------------------------------------------------------##
#
# simdatainsect_denom <- rbind.fill(#
# 	simulation_data_25Jan17_RACS, #
# 	simulation_data_30Jan17_ACS#
# )#
# simdata %<>% setnames("n.networks", "population")#
# simdata$population %<>% as.factor()#
# levels(simdata$population) <- 1:6#
# simulation_data_summary_table_original_insectdenom = calculateSamplingBias(#
# 	population_data_summary	= patch_data_summary_wide, #
# 	simulation_data		= simdata,#
# 	sampling.grouping.variables	= sampling.grouping.variables, #
# 	population.grouping.variables = "population",#
# 	variables			= c(ovar,rvar), #
# 	rvar				= rvar#
# )#
#
# simulation_data_summary_table_original_insectdenom %<>% filter(SamplingDesign=="RACS")#
#
# -----------------------------------------------------------------------------##
# Sampling Bias - original Y_HT formula#
# -----------------------------------------------------------------------------##
#
simdata_all <- rbind.fill(#
	simdata_restricted,#
	simdata#
)#
#
names(simdata_all)[#
	which(names(simdata_all) %in% c(#
		"CACA_on_Stricta_mean_observed",#
		"CACA_on_Stricta_var_observed",#
		"MEPR_on_Stricta_mean_observed",#
		"MEPR_on_Stricta_var_observed",#
		"Old_Moth_Evidence_Pusilla_mean_observed",#
		"Old_Moth_Evidence_Pusilla_var_observed",#
		"Old_Moth_Evidence_Stricta_mean_observed", 		"Old_Moth_Evidence_Stricta_var_observed",#
		"Percent_Cover_Stricta_mean_observed",    #
		"Percent_Cover_Stricta_var_observed",#
		"Height_Stricta_mean_observed",#
		"Height_Stricta_var_observed"#
	))#
] <- c(#
	"CACA_on_Stricta_ratio_mean_observed",#
	"CACA_on_Stricta_ratio_var_observed",#
	"MEPR_on_Stricta_ratio_mean_observed",#
	"MEPR_on_Stricta_ratio_var_observed",#
	"Old_Moth_Evidence_Pusilla_ratio_mean_observed",#
	"Old_Moth_Evidence_Pusilla_ratio_var_observed",#
	"Old_Moth_Evidence_Stricta_ratio_mean_observed", 	"Old_Moth_Evidence_Stricta_ratio_var_observed",#
	"Percent_Cover_Stricta_ratio_mean_observed",    #
	"Percent_Cover_Stricta_ratio_var_observed",#
	"Height_Stricta_ratio_mean_observed",#
	"Height_Stricta_ratio_var_observed"#
)#
#
simdata_all %<>% setnames("n.networks", "population")#
simdata_all$population %<>% as.factor()#
levels(simdata_all$population) <- 1:6#
simulation_data_summary_table_original_yHT = calculateSamplingBias(#
	population_data_summary	= patch_data_summary_wide, #
	simulation_data		= simdata_all, #
	sampling.grouping.variables	= sampling.grouping.variables, #
	population.grouping.variables = population.grouping.variables,#
	variables			= ovar, #
	rvar				= rvar#
)#
#
simulation_data_summary_table_ACS <- simulation_data_summary_table_original_yHT %>% filter(SamplingDesign=="ACS")#
#
simulation_data_summary_table_RACS <- simulation_data_summary_table_original_yHT %>% filter(SamplingDesign=="RACS")#
#
# -----------------------------------------------------------------------------##
# Sampling Bias - new Y_HT formula#
# -----------------------------------------------------------------------------##
#
# sim.12Dec16_RACS_6 %>% mutate(m_threshold = 5) %>% filter(n.networks==5) %>% dim#
sim.12Dec16_RACS_7 %<>% mutate(m_threshold = 8) %>% filter(n.networks==20)#
#
# new y_HT formula#
simdata_new_yHT <- rbind.fill(#
	sim.12Dec16_RACS_7, # only for m_threshold = 8, n.networks = 20 (pop 4), 2000 simulations#
	sim.17Dec16_RACS,  # only for m_threshold = 7, n.networks = 10, 15, 30 (pops 2, 3, 5), 2000 simulations#
	sim.17Dec16_RACS_2, # only for m_threshold = 5, n.networks = 5 (pop 1), 5000 simulations#
	sim.18Dec16_RACS, # only for m_threshold = 9, n.networks = 40 (pop 6),#
	sim_20Dec16_RACS, # only for m_threshold = 8, n.networks = 20 (pop 4), 3000 simulations#
	sim_20Dec16_RACS_2,#
	#sim_20Dec16_RACS_3,#
	sim_20Dec16_RACS_4#
)#
simdata_new_yHT %<>% setnames("n.networks", "population")#
simdata_new_yHT$population %<>% as.factor()#
levels(simdata_new_yHT$population) <- 1:6#
#
names(simdata_new_yHT)[#
	which(names(simdata_new_yHT) %in% c(#
		"CACA_on_Stricta_mean_observed",#
		"CACA_on_Stricta_var_observed",#
		"MEPR_on_Stricta_mean_observed",#
		"MEPR_on_Stricta_var_observed",#
		"Old_Moth_Evidence_Pusilla_mean_observed",#
		"Old_Moth_Evidence_Pusilla_var_observed",#
		"Old_Moth_Evidence_Stricta_mean_observed", 		"Old_Moth_Evidence_Stricta_var_observed",#
		"Percent_Cover_Stricta_mean_observed",    #
		"Percent_Cover_Stricta_var_observed",#
		"Height_Stricta_mean_observed",#
		"Height_Stricta_var_observed"#
	))#
] <- c(#
	"MEPR_on_Stricta_ratio_mean_observed",#
	"MEPR_on_Stricta_ratio_var_observed",#
	"CACA_on_Stricta_ratio_mean_observed",#
	"CACA_on_Stricta_ratio_var_observed",#
	"Percent_Cover_Stricta_ratio_mean_observed",    #
	"Percent_Cover_Stricta_ratio_var_observed",#
	"Height_Stricta_ratio_mean_observed",#
	"Height_Stricta_ratio_var_observed",#
	"Old_Moth_Evidence_Pusilla_ratio_mean_observed",#
	"Old_Moth_Evidence_Pusilla_ratio_var_observed",#
	"Old_Moth_Evidence_Stricta_ratio_mean_observed", 	"Old_Moth_Evidence_Stricta_ratio_var_observed"#
)#
simulation_data_summary_table_new_yHT = calculateSamplingBias(#
	population_data_summary	= patch_data_summary_wide, #
	simulation_data		= simdata_new_yHT,#
	sampling.grouping.variables	= c(sampling.grouping.variables, "m_threshold"), #
	population.grouping.variables = population.grouping.variables,#
	variables			= ovar, #
	rvar				= rvar#
) %>%#
mutate(f_max = 2)#
#
simulation_data_summary_table_new_yHT %>%#
group_by(population, m_threshold, N.SRSWOR.plots, Plots, f_max) %>%#
summarise(n())#
#
simdata_new_yHT %>%#
group_by(population, m_threshold, N.SRSWOR.plots, Plots) %>%#
summarise(n()) %>%#
filter(Plots=="Horvitz Thompson Mean (All Plots)")#
# #### CORRECTED VARIANCE#
#
# mar2417_RACS %<>%#
# setnames("realization_variable", "realization") %>%#
# setnames("patch_variable", "n.networks")	#
# mar2417_RACS %<>% setnames("n.networks", "population")#
# mar2417_RACS$population %<>% as.factor()#
# levels(mar2417_RACS$population) <- 1:6#
#
# simulation_data_summary_table_new_var_yHT = calculateSamplingBias(#
# 	population_data_summary	= patch_data_summary_wide, #
# 	simulation_data		= mar2417_RACS,#
# 	sampling.grouping.variables	= c(sampling.grouping.variables, # "m_threshold"), #
# 	population.grouping.variables = population.grouping.variables,#
# 	variables			= ovar, #
# 	rvar				= rvar#
# ) %>%#
# mutate(f_max = 2)#
# -----------------------------------------------------------------------------##
# Sampling Bias - new Y_HT formula, F_MAX = 1#
# -----------------------------------------------------------------------------##
#
names(sim_24Dec16_RACS_2)[#
	which(names(sim_24Dec16_RACS_2) %in% c(#
		"MEPR_on_Stricta_mean_observed",#
		"MEPR_on_Stricta_var_observed",#
		"CACA_on_Stricta_mean_observed",#
		"CACA_on_Stricta_var_observed",#
		"Percent_Cover_Stricta_mean_observed",    #
		"Percent_Cover_Stricta_var_observed",#
		"Height_Stricta_mean_observed",#
		"Height_Stricta_var_observed",#
		"Old_Moth_Evidence_Pusilla_mean_observed",#
		"Old_Moth_Evidence_Pusilla_var_observed",#
		"Old_Moth_Evidence_Stricta_mean_observed", 		"Old_Moth_Evidence_Stricta_var_observed"#
	))#
] <- c(#
	"MEPR_on_Stricta_ratio_mean_observed",#
	"MEPR_on_Stricta_ratio_var_observed",#
	"CACA_on_Stricta_ratio_mean_observed",#
	"CACA_on_Stricta_ratio_var_observed",#
	"Percent_Cover_Stricta_ratio_mean_observed",    #
	"Percent_Cover_Stricta_ratio_var_observed",#
	"Height_Stricta_ratio_mean_observed",#
	"Height_Stricta_ratio_var_observed",#
	"Old_Moth_Evidence_Pusilla_ratio_mean_observed",#
	"Old_Moth_Evidence_Pusilla_ratio_var_observed",#
	"Old_Moth_Evidence_Stricta_ratio_mean_observed", 	"Old_Moth_Evidence_Stricta_ratio_var_observed"#
)#
sim_24Dec16_RACS_2 %<>% setnames("n.networks", "population")#
sim_24Dec16_RACS_2$population %<>% as.factor()#
levels(sim_24Dec16_RACS_2$population) <- 1:6#
#
unique(sim_24Dec16_RACS_2$f_max)#
simulation_data_summary_table_new_yHT_fmax_1 = calculateSamplingBias(#
	population_data_summary	= patch_data_summary_wide, #
	simulation_data		= sim_24Dec16_RACS_2,#
	sampling.grouping.variables	= c(sampling.grouping.variables, "m_threshold"), #
	population.grouping.variables = population.grouping.variables,#
	variables			= ovar, #
	rvar				= rvar#
) %>%#
mutate(f_max = 1)#
#
#simulation_data_summary_table_new_yHT_fmax_1 %>%#
#	group_by(n.networks, m_threshold, N.SRSWOR.plots, Plots, f_max) %>%#
#	summarise(n())#
#
# -----------------------------------------------------------------------------##
# Sampling Bias - new Y_HT formula, F_MAX = 1, m_threshold = 4#
# -----------------------------------------------------------------------------##
#
names(sim_24Dec16_RACS_3)[#
	which(names(sim_24Dec16_RACS_3) %in% c(#
		"MEPR_on_Stricta_mean_observed",#
		"MEPR_on_Stricta_var_observed",#
		"CACA_on_Stricta_mean_observed",#
		"CACA_on_Stricta_var_observed",#
		"Percent_Cover_Stricta_mean_observed",    #
		"Percent_Cover_Stricta_var_observed",#
		"Height_Stricta_mean_observed",#
		"Height_Stricta_var_observed",#
		"Old_Moth_Evidence_Pusilla_mean_observed",#
		"Old_Moth_Evidence_Pusilla_var_observed",#
		"Old_Moth_Evidence_Stricta_mean_observed", 		"Old_Moth_Evidence_Stricta_var_observed"#
	))#
] <- c(#
	"MEPR_on_Stricta_ratio_mean_observed",#
	"MEPR_on_Stricta_ratio_var_observed",#
	"CACA_on_Stricta_ratio_mean_observed",#
	"CACA_on_Stricta_ratio_var_observed",#
	"Percent_Cover_Stricta_ratio_mean_observed",    #
	"Percent_Cover_Stricta_ratio_var_observed",#
	"Height_Stricta_ratio_mean_observed",#
	"Height_Stricta_ratio_var_observed",#
	"Old_Moth_Evidence_Pusilla_ratio_mean_observed",#
	"Old_Moth_Evidence_Pusilla_ratio_var_observed",#
	"Old_Moth_Evidence_Stricta_ratio_mean_observed", 	"Old_Moth_Evidence_Stricta_ratio_var_observed"#
)#
sim_24Dec16_RACS_3 %<>% setnames("n.networks", "population")#
sim_24Dec16_RACS_3$population %<>% as.factor()#
levels(sim_24Dec16_RACS_3$population) <- 1:6#
#
unique(sim_24Dec16_RACS_3$f_max)#
#
simulation_data_summary_table_new_yHT_fmax_1_4 = calculateSamplingBias(#
	population_data_summary	= patch_data_summary_wide, #
	simulation_data		= sim_24Dec16_RACS_3,#
	sampling.grouping.variables	= c(sampling.grouping.variables, "m_threshold"), #
	population.grouping.variables = population.grouping.variables,#
	variables			= ovar, #
	rvar				= rvar#
) %>%#
mutate(f_max = 1)#
#
simulation_data_summary_table_new_yHT_fmax_1_4 %>%#
group_by(population, m_threshold, N.SRSWOR.plots, Plots, f_max) %>%#
summarise(n())#
setwd("/Users/KSauby/Documents/Projects/ACSampling_project")#
	cache("simulation_data_summary_table_ACS")	#
	cache("simulation_data_summary_table_RACS")	#
	cache("simulation_data_summary_table_original_insectdenom")	#
	cache("simulation_data_summary_table_new_y_HT_re")	#
	cache("simulation_data_summary_table_new_yHT")#
	cache("simulation_data_summary_table_new_yHT_fmax_1_4")#
	cache("simulation_data_summary_table_new_yHT_fmax_1")#
	cache("simulation_data_summary_table_re")
setwd('/Users/KSauby/Documents/Projects/ACSampling_project/code/Manuscript/simulations')
# -----------------------------------------------------------------------------##
# ABUNDANCE VARIABLES#
# -----------------------------------------------------------------------------##
# -----------------------------------------------------------------------------##
# OCCUPANCY VARIABLES#
# -----------------------------------------------------------------------------##
ovar <- c(#
	"Stricta",#
	"Pusilla",#
	"Cactus"#
)#
# -----------------------------------------------------------------------------##
# RATIO VARIABLES#
# -----------------------------------------------------------------------------##
rvar <- c(#
	"MEPR_on_Stricta",#
	"CACA_on_Stricta",#
	"Percent_Cover_Stricta",#
	"Height_Stricta",#
	"Old_Moth_Evidence_Pusilla",#
	"Old_Moth_Evidence_Stricta"#
)#
#
# "Percent_Cover_Pusilla",#
# "Height_Pusilla",#
# )
setwd('/Users/KSauby/Documents/Projects/ACSampling_project/code/Manuscript/simulations')
population.grouping.variables	<- c("population")#
sampling.grouping.variables <- c("N.SRSWOR.plots", "SamplingDesign", "Plots")#
statistics 			<- c("mean", "var")#
ratio.statistics	<- c("mean")#
#
# variance#
A <- patch_data_summary[[2]] %>%#
	dplyr::select(Var, variable, population) %>%#
	rowwise() %>%#
	mutate(#
		variable = replace(#
			variable,#
			which(variable %in% rvar),#
			paste(variable, "ratio", sep="_")#
			)#
	) %>%#
	ungroup() %>%#
	reshape2::dcast(., population ~ variable, value.var="Var")#
names(A)[2:10] <- paste(names(A)[2:10], "var", sep="_")#
# mean#
B <- patch_data_summary[[2]] %>%#
	dplyr::select(Mean, variable, population) %>%#
	rowwise() %>%#
	mutate(#
		variable = replace(#
			variable,#
			which(variable %in% rvar),#
			paste(variable, "ratio", sep="_")#
			)#
	) %>%#
	ungroup() %>%#
	reshape2::dcast(., population ~ variable, value.var="Mean")#
names(B)[2:10] <- paste(names(B)[2:10], "mean", sep="_")#
patch_data_summary_wide <- merge(A, B)#
#
# -----------------------------------------------------------------------------##
# Simulations testing biased-ness of insects variables NOT using ratio estimator#
# -----------------------------------------------------------------------------##
#
# simdatainsect_denom <- rbind.fill(#
# 	simulation_data_25Jan17_RACS, #
# 	simulation_data_30Jan17_ACS#
# )#
# simdata %<>% setnames("n.networks", "population")#
# simdata$population %<>% as.factor()#
# levels(simdata$population) <- 1:6#
# simulation_data_summary_table_original_insectdenom = calculateSamplingBias(#
# 	population_data_summary	= patch_data_summary_wide, #
# 	simulation_data		= simdata,#
# 	sampling.grouping.variables	= sampling.grouping.variables, #
# 	population.grouping.variables = "population",#
# 	variables			= c(ovar,rvar), #
# 	rvar				= rvar#
# )#
#
# simulation_data_summary_table_original_insectdenom %<>% filter(SamplingDesign=="RACS")#
#
# -----------------------------------------------------------------------------##
# Sampling Bias - original Y_HT formula#
# -----------------------------------------------------------------------------##
#
simdata_all <- rbind.fill(#
	simdata_restricted,#
	simdata#
)#
#
names(simdata_all)[#
	which(names(simdata_all) %in% c(#
		"CACA_on_Stricta_mean_observed",#
		"CACA_on_Stricta_var_observed",#
		"MEPR_on_Stricta_mean_observed",#
		"MEPR_on_Stricta_var_observed",#
		"Old_Moth_Evidence_Pusilla_mean_observed",#
		"Old_Moth_Evidence_Pusilla_var_observed",#
		"Old_Moth_Evidence_Stricta_mean_observed", 		"Old_Moth_Evidence_Stricta_var_observed",#
		"Percent_Cover_Stricta_mean_observed",    #
		"Percent_Cover_Stricta_var_observed",#
		"Height_Stricta_mean_observed",#
		"Height_Stricta_var_observed"#
	))#
] <- c(#
	"CACA_on_Stricta_ratio_mean_observed",#
	"CACA_on_Stricta_ratio_var_observed",#
	"MEPR_on_Stricta_ratio_mean_observed",#
	"MEPR_on_Stricta_ratio_var_observed",#
	"Old_Moth_Evidence_Pusilla_ratio_mean_observed",#
	"Old_Moth_Evidence_Pusilla_ratio_var_observed",#
	"Old_Moth_Evidence_Stricta_ratio_mean_observed", 	"Old_Moth_Evidence_Stricta_ratio_var_observed",#
	"Percent_Cover_Stricta_ratio_mean_observed",    #
	"Percent_Cover_Stricta_ratio_var_observed",#
	"Height_Stricta_ratio_mean_observed",#
	"Height_Stricta_ratio_var_observed"#
)#
#
simdata_all %<>% setnames("n.networks", "population")#
simdata_all$population %<>% as.factor()#
levels(simdata_all$population) <- 1:6#
simulation_data_summary_table_original_yHT = calculateSamplingBias(#
	population_data_summary	= patch_data_summary_wide, #
	simulation_data		= simdata_all, #
	sampling.grouping.variables	= sampling.grouping.variables, #
	population.grouping.variables = population.grouping.variables,#
	variables			= ovar, #
	rvar				= rvar#
)#
#
simulation_data_summary_table_ACS <- simulation_data_summary_table_original_yHT %>% filter(SamplingDesign=="ACS")#
#
simulation_data_summary_table_RACS <- simulation_data_summary_table_original_yHT %>% filter(SamplingDesign=="RACS")#
#
# -----------------------------------------------------------------------------##
# Sampling Bias - new Y_HT formula#
# -----------------------------------------------------------------------------##
#
# sim.12Dec16_RACS_6 %>% mutate(m_threshold = 5) %>% filter(n.networks==5) %>% dim#
sim.12Dec16_RACS_7 %<>% mutate(m_threshold = 8) %>% filter(n.networks==20)#
#
# new y_HT formula#
simdata_new_yHT <- rbind.fill(#
	sim.12Dec16_RACS_7, # only for m_threshold = 8, n.networks = 20 (pop 4), 2000 simulations#
	sim.17Dec16_RACS,  # only for m_threshold = 7, n.networks = 10, 15, 30 (pops 2, 3, 5), 2000 simulations#
	sim.17Dec16_RACS_2, # only for m_threshold = 5, n.networks = 5 (pop 1), 5000 simulations#
	sim.18Dec16_RACS, # only for m_threshold = 9, n.networks = 40 (pop 6),#
	sim_20Dec16_RACS, # only for m_threshold = 8, n.networks = 20 (pop 4), 3000 simulations#
	sim_20Dec16_RACS_2,#
	#sim_20Dec16_RACS_3,#
	sim_20Dec16_RACS_4#
)#
simdata_new_yHT %<>% setnames("n.networks", "population")#
simdata_new_yHT$population %<>% as.factor()#
levels(simdata_new_yHT$population) <- 1:6#
#
names(simdata_new_yHT)[#
	which(names(simdata_new_yHT) %in% c(#
		"CACA_on_Stricta_mean_observed",#
		"CACA_on_Stricta_var_observed",#
		"MEPR_on_Stricta_mean_observed",#
		"MEPR_on_Stricta_var_observed",#
		"Old_Moth_Evidence_Pusilla_mean_observed",#
		"Old_Moth_Evidence_Pusilla_var_observed",#
		"Old_Moth_Evidence_Stricta_mean_observed", 		"Old_Moth_Evidence_Stricta_var_observed",#
		"Percent_Cover_Stricta_mean_observed",    #
		"Percent_Cover_Stricta_var_observed",#
		"Height_Stricta_mean_observed",#
		"Height_Stricta_var_observed"#
	))#
] <- c(#
	"MEPR_on_Stricta_ratio_mean_observed",#
	"MEPR_on_Stricta_ratio_var_observed",#
	"CACA_on_Stricta_ratio_mean_observed",#
	"CACA_on_Stricta_ratio_var_observed",#
	"Percent_Cover_Stricta_ratio_mean_observed",    #
	"Percent_Cover_Stricta_ratio_var_observed",#
	"Height_Stricta_ratio_mean_observed",#
	"Height_Stricta_ratio_var_observed",#
	"Old_Moth_Evidence_Pusilla_ratio_mean_observed",#
	"Old_Moth_Evidence_Pusilla_ratio_var_observed",#
	"Old_Moth_Evidence_Stricta_ratio_mean_observed", 	"Old_Moth_Evidence_Stricta_ratio_var_observed"#
)#
simulation_data_summary_table_new_yHT = calculateSamplingBias(#
	population_data_summary	= patch_data_summary_wide, #
	simulation_data		= simdata_new_yHT,#
	sampling.grouping.variables	= c(sampling.grouping.variables, "m_threshold"), #
	population.grouping.variables = population.grouping.variables,#
	variables			= ovar, #
	rvar				= rvar#
) %>%#
mutate(f_max = 2)#
#
simulation_data_summary_table_new_yHT %>%#
group_by(population, m_threshold, N.SRSWOR.plots, Plots, f_max) %>%#
summarise(n())#
#
simdata_new_yHT %>%#
group_by(population, m_threshold, N.SRSWOR.plots, Plots) %>%#
summarise(n()) %>%#
filter(Plots=="Horvitz Thompson Mean (All Plots)")#
# #### CORRECTED VARIANCE#
#
# mar2417_RACS %<>%#
# setnames("realization_variable", "realization") %>%#
# setnames("patch_variable", "n.networks")	#
# mar2417_RACS %<>% setnames("n.networks", "population")#
# mar2417_RACS$population %<>% as.factor()#
# levels(mar2417_RACS$population) <- 1:6#
#
# simulation_data_summary_table_new_var_yHT = calculateSamplingBias(#
# 	population_data_summary	= patch_data_summary_wide, #
# 	simulation_data		= mar2417_RACS,#
# 	sampling.grouping.variables	= c(sampling.grouping.variables, # "m_threshold"), #
# 	population.grouping.variables = population.grouping.variables,#
# 	variables			= ovar, #
# 	rvar				= rvar#
# ) %>%#
# mutate(f_max = 2)#
# -----------------------------------------------------------------------------##
# Sampling Bias - new Y_HT formula, F_MAX = 1#
# -----------------------------------------------------------------------------##
#
names(sim_24Dec16_RACS_2)[#
	which(names(sim_24Dec16_RACS_2) %in% c(#
		"MEPR_on_Stricta_mean_observed",#
		"MEPR_on_Stricta_var_observed",#
		"CACA_on_Stricta_mean_observed",#
		"CACA_on_Stricta_var_observed",#
		"Percent_Cover_Stricta_mean_observed",    #
		"Percent_Cover_Stricta_var_observed",#
		"Height_Stricta_mean_observed",#
		"Height_Stricta_var_observed",#
		"Old_Moth_Evidence_Pusilla_mean_observed",#
		"Old_Moth_Evidence_Pusilla_var_observed",#
		"Old_Moth_Evidence_Stricta_mean_observed", 		"Old_Moth_Evidence_Stricta_var_observed"#
	))#
] <- c(#
	"MEPR_on_Stricta_ratio_mean_observed",#
	"MEPR_on_Stricta_ratio_var_observed",#
	"CACA_on_Stricta_ratio_mean_observed",#
	"CACA_on_Stricta_ratio_var_observed",#
	"Percent_Cover_Stricta_ratio_mean_observed",    #
	"Percent_Cover_Stricta_ratio_var_observed",#
	"Height_Stricta_ratio_mean_observed",#
	"Height_Stricta_ratio_var_observed",#
	"Old_Moth_Evidence_Pusilla_ratio_mean_observed",#
	"Old_Moth_Evidence_Pusilla_ratio_var_observed",#
	"Old_Moth_Evidence_Stricta_ratio_mean_observed", 	"Old_Moth_Evidence_Stricta_ratio_var_observed"#
)#
sim_24Dec16_RACS_2 %<>% setnames("n.networks", "population")#
sim_24Dec16_RACS_2$population %<>% as.factor()#
levels(sim_24Dec16_RACS_2$population) <- 1:6#
#
unique(sim_24Dec16_RACS_2$f_max)#
simulation_data_summary_table_new_yHT_fmax_1 = calculateSamplingBias(#
	population_data_summary	= patch_data_summary_wide, #
	simulation_data		= sim_24Dec16_RACS_2,#
	sampling.grouping.variables	= c(sampling.grouping.variables, "m_threshold"), #
	population.grouping.variables = population.grouping.variables,#
	variables			= ovar, #
	rvar				= rvar#
) %>%#
mutate(f_max = 1)#
#
#simulation_data_summary_table_new_yHT_fmax_1 %>%#
#	group_by(n.networks, m_threshold, N.SRSWOR.plots, Plots, f_max) %>%#
#	summarise(n())#
#
# -----------------------------------------------------------------------------##
# Sampling Bias - new Y_HT formula, F_MAX = 1, m_threshold = 4#
# -----------------------------------------------------------------------------##
#
names(sim_24Dec16_RACS_3)[#
	which(names(sim_24Dec16_RACS_3) %in% c(#
		"MEPR_on_Stricta_mean_observed",#
		"MEPR_on_Stricta_var_observed",#
		"CACA_on_Stricta_mean_observed",#
		"CACA_on_Stricta_var_observed",#
		"Percent_Cover_Stricta_mean_observed",    #
		"Percent_Cover_Stricta_var_observed",#
		"Height_Stricta_mean_observed",#
		"Height_Stricta_var_observed",#
		"Old_Moth_Evidence_Pusilla_mean_observed",#
		"Old_Moth_Evidence_Pusilla_var_observed",#
		"Old_Moth_Evidence_Stricta_mean_observed", 		"Old_Moth_Evidence_Stricta_var_observed"#
	))#
] <- c(#
	"MEPR_on_Stricta_ratio_mean_observed",#
	"MEPR_on_Stricta_ratio_var_observed",#
	"CACA_on_Stricta_ratio_mean_observed",#
	"CACA_on_Stricta_ratio_var_observed",#
	"Percent_Cover_Stricta_ratio_mean_observed",    #
	"Percent_Cover_Stricta_ratio_var_observed",#
	"Height_Stricta_ratio_mean_observed",#
	"Height_Stricta_ratio_var_observed",#
	"Old_Moth_Evidence_Pusilla_ratio_mean_observed",#
	"Old_Moth_Evidence_Pusilla_ratio_var_observed",#
	"Old_Moth_Evidence_Stricta_ratio_mean_observed", 	"Old_Moth_Evidence_Stricta_ratio_var_observed"#
)#
sim_24Dec16_RACS_3 %<>% setnames("n.networks", "population")#
sim_24Dec16_RACS_3$population %<>% as.factor()#
levels(sim_24Dec16_RACS_3$population) <- 1:6#
#
unique(sim_24Dec16_RACS_3$f_max)#
#
simulation_data_summary_table_new_yHT_fmax_1_4 = calculateSamplingBias(#
	population_data_summary	= patch_data_summary_wide, #
	simulation_data		= sim_24Dec16_RACS_3,#
	sampling.grouping.variables	= c(sampling.grouping.variables, "m_threshold"), #
	population.grouping.variables = population.grouping.variables,#
	variables			= ovar, #
	rvar				= rvar#
) %>%#
mutate(f_max = 1)#
#
simulation_data_summary_table_new_yHT_fmax_1_4 %>%#
group_by(population, m_threshold, N.SRSWOR.plots, Plots, f_max) %>%#
summarise(n())#
setwd("/Users/KSauby/Documents/Projects/ACSampling_project")#
	cache("simulation_data_summary_table_ACS")	#
	cache("simulation_data_summary_table_RACS")	#
	cache("simulation_data_summary_table_original_insectdenom")	#
	cache("simulation_data_summary_table_new_y_HT_re")	#
	cache("simulation_data_summary_table_new_yHT")#
	cache("simulation_data_summary_table_new_yHT_fmax_1_4")#
	cache("simulation_data_summary_table_new_yHT_fmax_1")#
	cache("simulation_data_summary_table_re")
setwd('/Users/KSauby/Documents/Projects/ACSampling_project/code/Manuscript/simulations')
# -----------------------------------------------------------------------------##
# RELATIVE EFFICIENCY#
# -----------------------------------------------------------------------------##
temp <- simdata_all %>%#
filter(Plots=="Horvitz Thompson Mean (All Plots)") %>%#
	group_by_(.dots = c(#
		population.grouping.variables, #
		sampling.grouping.variables#
	)) %>%#
	summarise(#
		N.Total.plots_mean = round(mean(N.Total.plots, na.rm=T),0)#
	)#
#
simdata_all_re <- simdata_all %>% #
filter(Plots=="Horvitz Thompson Mean (All Plots)") %>%#
merge(#
	temp, by=c(#
		population.grouping.variables, #
		sampling.grouping.variables#
	)#
)#
#
sampling.grouping.variables <- c("N.Total.plots_mean", "N.SRSWOR.plots", "SamplingDesign")#
#
# use ratio mean rather than regular mean#
simulation_data_summary_table_re = calculateSamplingBias(#
	population_data_summary	= patch_data_summary_wide, #
	simulation_data		= simdata_all_re, #
	sampling.grouping.variables	= sampling.grouping.variables, #
	population.grouping.variables = population.grouping.variables,#
	variables			= ovar, #
	rvar				= rvar#
)#
RE_values <- calculateRE(#
	population_data = patch_data,#
	MSE_ComparisonSamplingDesign = simulation_data_summary_table_re,#
	population.grouping.variables = "n.networks",#
	sample.size.variable = "N.Total.plots_mean",#
	ovar = ovar,#
	rvar = rvar#
)#
#
simulation_data_summary_table_re %<>%#
	setnames("sample.size.variable", "N.Total.plots_mean") %>%#
	merge(#
		RE_values, #
		by=c("n.networks","N.Total.plots_mean")#
	)#
# -----------------------------------------------------------------------------##
# RELATIVE EFFICIENCY - F_max = 2, new y_HT#
# -----------------------------------------------------------------------------##
sampling.grouping.variables <- c("N.SRSWOR.plots", "SamplingDesign", "Plots")#
#
temp <- simdata_new_yHT %>%#
filter(Plots=="Horvitz Thompson Mean (All Plots)") %>%#
	group_by_(.dots = c(#
		population.grouping.variables, #
		sampling.grouping.variables#
	)) %>%#
	summarise(#
		N.Total.plots_mean = round(mean(N.Total.plots, na.rm=T),0)#
	)#
#
simdata_new_yHT_re <- simdata_new_yHT %>% #
filter(Plots=="Horvitz Thompson Mean (All Plots)") %>%#
merge(#
	temp, by=c(#
		population.grouping.variables, #
		sampling.grouping.variables#
	)#
)#
#
sampling.grouping.variables <- c("N.Total.plots_mean", "N.SRSWOR.plots", "SamplingDesign")#
#
# use ratio mean rather than regular mean#
#
simulation_data_summary_table_new_y_HT_re = calculateSamplingBias(#
	population_data_summary	= patch_data_summary_wide, #
	simulation_data		= simdata_new_yHT_re, #
	sampling.grouping.variables	= sampling.grouping.variables, #
	population.grouping.variables = population.grouping.variables,#
	variables			= ovar, #
	rvar				= rvar#
)#
#
RE_values <- calculateRE(#
	population_data = patch_data,#
	MSE_ComparisonSamplingDesign = simulation_data_summary_table_new_y_HT_re,#
	population.grouping.variables = "n.networks",#
	sample.size.variable = "N.Total.plots_mean",#
	rvar = rvar,#
	ovar = ovar#
)#
#
simulation_data_summary_table_new_y_HT_re %<>%#
	setnames("sample.size.variable", "N.Total.plots_mean") %>%#
	merge(#
		RE_values, #
		by=c("n.networks","N.Total.plots_mean")#
	)
setwd('/Users/KSauby/Documents/Projects/ACS/R')
#' Calculate Relative Efficiency (RE)#
#' #
#' @param MSE_ComparisonSamplingDesign Sampling design for which relative efficiency (RE) should be calculated.#
#' @param MSE_BaselineSamplingDesign The sampling design to which the "comparison sampling design" is compared to and its efficiency, relative to this one, is calculated.#
#' @param grouping.variables Categorical variables identifying the patch realization from which the simulation data was generated (e.g., \code{n.networks} and \code{realization}).#
#' @return Dataframe including original data and RE estimates.#
#' @export#
#
calculateRE <- function(#
	MSE_ComparisonSamplingDesign,#
	population_data,#
	population.grouping.variables = population.grouping.variables,#
	sample.size.variable = sample.size.variable,#
	rvar = rvar,#
	ovar = ovar#
) {	#
	X <- NULL#
	X <- MSE_ComparisonSamplingDesign#
	if (sample.size.variable %in% names(X)) {#
		X %<>% setnames(sample.size.variable, "sample.size.variable")#
	}#
	# dimensions of populations#
	dimensions <- population_data %>% #
		group_by_(.dots=population.grouping.variables) %>%#
		summarise(N = n())#
	# variances of populations#
	if (!is.null(ovar)) {#
		variances <- population_data %>% #
			dplyr::select_(.dots=c(#
				population.grouping.variables,#
				ovar,#
				rvar#
			)) %>%#
			group_by_(.dots=population.grouping.variables) %>% #
			summarise_all(funs(var(., na.rm=T)))#
		setnames(#
			variances,#
			names(variances)[#
				(length(population.grouping.variables) + 1):#
				length(names(variances))#
			], #
			paste(names(variances)[#
					(length(population.grouping.variables) + 1):#
					length(names(variances))#
				],#
				"var",#
				sep="_"#
			)#
		)	#
	}#
	if (!is.null(rvar)) {#
		variances_ratio <- population_data %>% #
			dplyr::select_(.dots=c(#
				population.grouping.variables,#
				rvar#
			)) %>%#
			group_by_(.dots=population.grouping.variables) %>% #
			summarise_all(funs(var(., na.rm=T)))#
		setnames(#
			variances_ratio,#
			names(variances_ratio)[#
				(length(population.grouping.variables) + 1):#
				length(names(variances_ratio))#
			], #
			paste(names(variances_ratio)[#
					(length(population.grouping.variables) + 1):#
					length(names(variances_ratio))#
				],#
				"ratio_var",#
				sep="_"#
			)#
		)	#
	}#
	Y <- X %>% dplyr::select_(.dots=c(#
		population.grouping.variables,#
		"sample.size.variable",#
		paste(ovar, "_mean_MSE", sep=""),#
		paste(rvar, "_ratio_mean_MSE", sep="")		#
	))#
	# calculate var_y_bar#
	if (!is.null(rvar) & is.null(ovar)) {#
		Y %<>% #
			merge(dimensions, by=population.grouping.variables) %>%#
			merge(variances_ratio, by=population.grouping.variables)#
	}#
	if (is.null(rvar) & !is.null(ovar)) {#
		Y %<>% #
			merge(dimensions, by=population.grouping.variables) %>%#
			merge(variances, by=population.grouping.variables)#
	}#
	if (!is.null(rvar) & !is.null(ovar)) {#
		Y %<>% #
			merge(dimensions, by=population.grouping.variables) %>%#
			merge(variances, by=population.grouping.variables) %>%#
			merge(variances_ratio, by=population.grouping.variables)#
	}#
	A <- Y %>% #
		dplyr::select(-one_of(paste(variables, "_var", sep=""))) %>%#
		reshape2:::melt.data.frame(#
			data=.,#
			id.vars=c(#
				population.grouping.variables,#
				"N",#
				"sample.size.variable"#
			),#
			value.name="mean_MSE"#
		)#
	A$variable <- sub("*_mean_MSE", "", A$variable)#
	B <- Y %>% #
		dplyr::select(-one_of(#
			paste(ovar, "_mean_MSE", sep=""),#
			paste(rvar, "_ratio_mean_MSE", sep="")		#
		)) %>%#
		reshape2:::melt.data.frame(#
			data=.,#
			id.vars=c(#
				population.grouping.variables,#
				"N",#
				"sample.size.variable"#
			),#
			value.name="population_variance"#
		)	#
	B$variable <- sub("*_var", "", B$variable)#
	Z <- A %>%#
		merge(#
			B, #
			by=c(#
				population.grouping.variables, #
				"N", #
				"sample.size.variable", #
				"variable"#
			)#
		)#
	Z %<>% mutate(#
		RE = (#
			((N - sample.size.variable)*population_variance) /#
			(sample.size.variable*N)#
		)#
		/	mean_MSE#
	)#
	Z %<>%#
	dplyr::select_(.dots=c(#
		population.grouping.variables, #
		"N", #
		"sample.size.variable", #
		"variable",#
		"RE"#
	))#
	Z$variable <- paste(Z$variable, "_RE", sep="")#
	Z %<>%#
	reshape2::dcast(#
		list(#
			c(population.grouping.variables, "N", "sample.size.variable"),#
			c("variable")#
		),#
		value.var="RE"#
		)#
	Z %<>% setnames("sample.size.variable", sample.size.variable)#
	return(Z)#
}
setwd('/Users/KSauby/Documents/Projects/ACSampling_project/code/Manuscript/simulations')
# -----------------------------------------------------------------------------##
# RELATIVE EFFICIENCY#
# -----------------------------------------------------------------------------##
temp <- simdata_all %>%#
filter(Plots=="Horvitz Thompson Mean (All Plots)") %>%#
	group_by_(.dots = c(#
		population.grouping.variables, #
		sampling.grouping.variables#
	)) %>%#
	summarise(#
		N.Total.plots_mean = round(mean(N.Total.plots, na.rm=T),0)#
	)#
#
simdata_all_re <- simdata_all %>% #
filter(Plots=="Horvitz Thompson Mean (All Plots)") %>%#
merge(#
	temp, by=c(#
		population.grouping.variables, #
		sampling.grouping.variables#
	)#
)#
#
sampling.grouping.variables <- c("N.Total.plots_mean", "N.SRSWOR.plots", "SamplingDesign")#
#
# use ratio mean rather than regular mean#
simulation_data_summary_table_re = calculateSamplingBias(#
	population_data_summary	= patch_data_summary_wide, #
	simulation_data		= simdata_all_re, #
	sampling.grouping.variables	= sampling.grouping.variables, #
	population.grouping.variables = population.grouping.variables,#
	variables			= ovar, #
	rvar				= rvar#
)#
RE_values <- calculateRE(#
	population_data = patch_data,#
	MSE_ComparisonSamplingDesign = simulation_data_summary_table_re,#
	population.grouping.variables = "n.networks",#
	sample.size.variable = "N.Total.plots_mean",#
	ovar = ovar,#
	rvar = rvar#
)#
#
simulation_data_summary_table_re %<>%#
	setnames("sample.size.variable", "N.Total.plots_mean") %>%#
	merge(#
		RE_values, #
		by=c("n.networks","N.Total.plots_mean")#
	)#
# -----------------------------------------------------------------------------##
# RELATIVE EFFICIENCY - F_max = 2, new y_HT#
# -----------------------------------------------------------------------------##
sampling.grouping.variables <- c("N.SRSWOR.plots", "SamplingDesign", "Plots")#
#
temp <- simdata_new_yHT %>%#
filter(Plots=="Horvitz Thompson Mean (All Plots)") %>%#
	group_by_(.dots = c(#
		population.grouping.variables, #
		sampling.grouping.variables#
	)) %>%#
	summarise(#
		N.Total.plots_mean = round(mean(N.Total.plots, na.rm=T),0)#
	)#
#
simdata_new_yHT_re <- simdata_new_yHT %>% #
filter(Plots=="Horvitz Thompson Mean (All Plots)") %>%#
merge(#
	temp, by=c(#
		population.grouping.variables, #
		sampling.grouping.variables#
	)#
)#
#
sampling.grouping.variables <- c("N.Total.plots_mean", "N.SRSWOR.plots", "SamplingDesign")#
#
# use ratio mean rather than regular mean#
#
simulation_data_summary_table_new_y_HT_re = calculateSamplingBias(#
	population_data_summary	= patch_data_summary_wide, #
	simulation_data		= simdata_new_yHT_re, #
	sampling.grouping.variables	= sampling.grouping.variables, #
	population.grouping.variables = population.grouping.variables,#
	variables			= ovar, #
	rvar				= rvar#
)#
#
RE_values <- calculateRE(#
	population_data = patch_data,#
	MSE_ComparisonSamplingDesign = simulation_data_summary_table_new_y_HT_re,#
	population.grouping.variables = "n.networks",#
	sample.size.variable = "N.Total.plots_mean",#
	rvar = rvar,#
	ovar = ovar#
)#
#
simulation_data_summary_table_new_y_HT_re %<>%#
	setnames("sample.size.variable", "N.Total.plots_mean") %>%#
	merge(#
		RE_values, #
		by=c("n.networks","N.Total.plots_mean")#
	)
setwd('/Users/KSauby/Documents/Projects/ACSampling_project/code/Manuscript/simulations')
population_data = patch_data
setwd('/Users/KSauby/Documents/Projects/ACSampling_project/code/Manuscript/simulations')
MSE_ComparisonSamplingDesign = simulation_data_summary_table_re
setwd('/Users/KSauby/Documents/Projects/ACSampling_project/code/Manuscript/simulations')
population.grouping.variables = "n.networks"
setwd('/Users/KSauby/Documents/Projects/ACSampling_project/code/Manuscript/simulations')
sample.size.variable = "N.Total.plots_mean"
setwd('/Users/KSauby/Documents/Projects/ACS/R')
X <- NULL#
	X <- MSE_ComparisonSamplingDesign#
	if (sample.size.variable %in% names(X)) {#
		X %<>% setnames(sample.size.variable, "sample.size.variable")#
	}#
	# dimensions of populations#
	dimensions <- population_data %>% #
		group_by_(.dots=population.grouping.variables) %>%#
		summarise(N = n())
setwd('/Users/KSauby/Documents/Projects/ACS/R')
!is.null(ovar)
setwd('/Users/KSauby/Documents/Projects/ACS/R')
variances <- population_data %>% #
			dplyr::select_(.dots=c(#
				population.grouping.variables,#
				ovar,#
				rvar#
			)) %>%#
			group_by_(.dots=population.grouping.variables) %>% #
			summarise_all(funs(var(., na.rm=T)))
setwd('/Users/KSauby/Documents/Projects/ACS/R')
setnames(#
			variances,#
			names(variances)[#
				(length(population.grouping.variables) + 1):#
				length(names(variances))#
			], #
			paste(names(variances)[#
					(length(population.grouping.variables) + 1):#
					length(names(variances))#
				],#
				"var",#
				sep="_"#
			)#
		)
setwd('/Users/KSauby/Documents/Projects/ACS/R')
!is.null(rvar)
setwd('/Users/KSauby/Documents/Projects/ACS/R')
variances_ratio <- population_data %>% #
			dplyr::select_(.dots=c(#
				population.grouping.variables,#
				rvar#
			)) %>%#
			group_by_(.dots=population.grouping.variables) %>% #
			summarise_all(funs(var(., na.rm=T)))#
		setnames(#
			variances_ratio,#
			names(variances_ratio)[#
				(length(population.grouping.variables) + 1):#
				length(names(variances_ratio))#
			], #
			paste(names(variances_ratio)[#
					(length(population.grouping.variables) + 1):#
					length(names(variances_ratio))#
				],#
				"ratio_var",#
				sep="_"#
			)#
		)
setwd('/Users/KSauby/Documents/Projects/ACS/R')
Y <- X %>% dplyr::select_(.dots=c(#
		population.grouping.variables,#
		"sample.size.variable",#
		paste(ovar, "_mean_MSE", sep=""),#
		paste(rvar, "_ratio_mean_MSE", sep="")		#
	))
setwd('/Users/KSauby/Documents/Projects/ACS/R')
!is.null(rvar) & is.null(ovar)
setwd('/Users/KSauby/Documents/Projects/ACS/R')
is.null(rvar) & !is.null(ovar)
setwd('/Users/KSauby/Documents/Projects/ACS/R')
!is.null(rvar) & !is.null(ovar)
setwd('/Users/KSauby/Documents/Projects/ACS/R')
Y %<>% #
			merge(dimensions, by=population.grouping.variables) %>%#
			merge(variances, by=population.grouping.variables) %>%#
			merge(variances_ratio, by=population.grouping.variables)
setwd('/Users/KSauby/Documents/Projects/ACS/R')
Y %<>% #
			merge(dimensions, by=population.grouping.variables) %>%#
			merge(variances, by=population.grouping.variables)
setwd('/Users/KSauby/Documents/Projects/ACS/R')
Y %<>% #
			merge(dimensions, by=population.grouping.variables)
str(Y)
str(dimensions)
setwd('/Users/KSauby/Documents/Projects/ACS/R')
population.grouping.variables
setwd('/Users/KSauby/Documents/Projects/ACS/R')
population.grouping.variables
setwd('/Users/KSauby/Documents/Projects/ACS/R')
Y <- X %>% dplyr::select_(.dots=c(#
		population.grouping.variables,#
		"sample.size.variable",#
		paste(ovar, "_mean_MSE", sep=""),#
		paste(rvar, "_ratio_mean_MSE", sep="")		#
	))
str(dimensions)
str(Y)
str(X)
str(MSE_ComparisonSamplingDesign)
setwd('/Users/KSauby/Documents/Projects/ACSampling_project/code/Manuscript/simulations')
population_data = patch_data
setwd('/Users/KSauby/Documents/Projects/ACSampling_project/code/Manuscript/simulations')
MSE_ComparisonSamplingDesign = simulation_data_summary_table_re
setwd('/Users/KSauby/Documents/Projects/ACSampling_project/code/Manuscript/simulations')
population.grouping.variables = "n.networks"
setwd('/Users/KSauby/Documents/Projects/ACSampling_project/code/Manuscript/simulations')
sample.size.variable = "N.Total.plots_mean"
str(patch_data)
str(simulation_data_summary_table_re)
setwd('/Users/KSauby/Documents/Projects/ACSampling_project/code/Manuscript/simulations')
simulation_data_summary_table_re = calculateSamplingBias(#
	population_data_summary	= patch_data_summary_wide, #
	simulation_data		= simdata_all_re, #
	sampling.grouping.variables	= sampling.grouping.variables, #
	population.grouping.variables = population.grouping.variables,#
	variables			= ovar, #
	rvar				= rvar#
)
setwd('/Users/KSauby/Documents/Projects/ACSampling_project/code/Manuscript/simulations')
# -----------------------------------------------------------------------------##
# RELATIVE EFFICIENCY#
# -----------------------------------------------------------------------------##
temp <- simdata_all %>%#
filter(Plots=="Horvitz Thompson Mean (All Plots)") %>%#
	group_by_(.dots = c(#
		population.grouping.variables, #
		sampling.grouping.variables#
	)) %>%#
	summarise(#
		N.Total.plots_mean = round(mean(N.Total.plots, na.rm=T),0)#
	)#
#
simdata_all_re <- simdata_all %>% #
filter(Plots=="Horvitz Thompson Mean (All Plots)") %>%#
merge(#
	temp, by=c(#
		population.grouping.variables, #
		sampling.grouping.variables#
	)#
)#
#
sampling.grouping.variables <- c("N.Total.plots_mean", "N.SRSWOR.plots", "SamplingDesign")#
#
# use ratio mean rather than regular mean#
simulation_data_summary_table_re = calculateSamplingBias(#
	population_data_summary	= patch_data_summary_wide, #
	simulation_data		= simdata_all_re, #
	sampling.grouping.variables	= sampling.grouping.variables, #
	population.grouping.variables = population.grouping.variables,#
	variables			= ovar, #
	rvar				= rvar#
)
setwd('/Users/KSauby/Documents/Projects/ACSampling_project/code/Manuscript/simulations')
population.grouping.variables	<- c("population")#
sampling.grouping.variables <- c("N.SRSWOR.plots", "SamplingDesign", "Plots")#
statistics 			<- c("mean", "var")#
ratio.statistics	<- c("mean")#
#
# variance#
A <- patch_data_summary[[2]] %>%#
	dplyr::select(Var, variable, population) %>%#
	rowwise() %>%#
	mutate(#
		variable = replace(#
			variable,#
			which(variable %in% rvar),#
			paste(variable, "ratio", sep="_")#
			)#
	) %>%#
	ungroup() %>%#
	reshape2::dcast(., population ~ variable, value.var="Var")#
names(A)[2:10] <- paste(names(A)[2:10], "var", sep="_")#
# mean#
B <- patch_data_summary[[2]] %>%#
	dplyr::select(Mean, variable, population) %>%#
	rowwise() %>%#
	mutate(#
		variable = replace(#
			variable,#
			which(variable %in% rvar),#
			paste(variable, "ratio", sep="_")#
			)#
	) %>%#
	ungroup() %>%#
	reshape2::dcast(., population ~ variable, value.var="Mean")#
names(B)[2:10] <- paste(names(B)[2:10], "mean", sep="_")#
patch_data_summary_wide <- merge(A, B)#
#
# -----------------------------------------------------------------------------##
# Simulations testing biased-ness of insects variables NOT using ratio estimator#
# -----------------------------------------------------------------------------##
#
# simdatainsect_denom <- rbind.fill(#
# 	simulation_data_25Jan17_RACS, #
# 	simulation_data_30Jan17_ACS#
# )#
# simdata %<>% setnames("n.networks", "population")#
# simdata$population %<>% as.factor()#
# levels(simdata$population) <- 1:6#
# simulation_data_summary_table_original_insectdenom = calculateSamplingBias(#
# 	population_data_summary	= patch_data_summary_wide, #
# 	simulation_data		= simdata,#
# 	sampling.grouping.variables	= sampling.grouping.variables, #
# 	population.grouping.variables = "population",#
# 	variables			= c(ovar,rvar), #
# 	rvar				= rvar#
# )#
#
# simulation_data_summary_table_original_insectdenom %<>% filter(SamplingDesign=="RACS")#
#
# -----------------------------------------------------------------------------##
# Sampling Bias - original Y_HT formula#
# -----------------------------------------------------------------------------##
#
simdata_all <- rbind.fill(#
	simdata_restricted,#
	simdata#
)#
#
names(simdata_all)[#
	which(names(simdata_all) %in% c(#
		"CACA_on_Stricta_mean_observed",#
		"CACA_on_Stricta_var_observed",#
		"MEPR_on_Stricta_mean_observed",#
		"MEPR_on_Stricta_var_observed",#
		"Old_Moth_Evidence_Pusilla_mean_observed",#
		"Old_Moth_Evidence_Pusilla_var_observed",#
		"Old_Moth_Evidence_Stricta_mean_observed", 		"Old_Moth_Evidence_Stricta_var_observed",#
		"Percent_Cover_Stricta_mean_observed",    #
		"Percent_Cover_Stricta_var_observed",#
		"Height_Stricta_mean_observed",#
		"Height_Stricta_var_observed"#
	))#
] <- c(#
	"CACA_on_Stricta_ratio_mean_observed",#
	"CACA_on_Stricta_ratio_var_observed",#
	"MEPR_on_Stricta_ratio_mean_observed",#
	"MEPR_on_Stricta_ratio_var_observed",#
	"Old_Moth_Evidence_Pusilla_ratio_mean_observed",#
	"Old_Moth_Evidence_Pusilla_ratio_var_observed",#
	"Old_Moth_Evidence_Stricta_ratio_mean_observed", 	"Old_Moth_Evidence_Stricta_ratio_var_observed",#
	"Percent_Cover_Stricta_ratio_mean_observed",    #
	"Percent_Cover_Stricta_ratio_var_observed",#
	"Height_Stricta_ratio_mean_observed",#
	"Height_Stricta_ratio_var_observed"#
)#
#
simdata_all %<>% setnames("n.networks", "population")#
simdata_all$population %<>% as.factor()#
levels(simdata_all$population) <- 1:6#
simulation_data_summary_table_original_yHT = calculateSamplingBias(#
	population_data_summary	= patch_data_summary_wide, #
	simulation_data		= simdata_all, #
	sampling.grouping.variables	= sampling.grouping.variables, #
	population.grouping.variables = population.grouping.variables,#
	variables			= ovar, #
	rvar				= rvar#
)#
#
simulation_data_summary_table_ACS <- simulation_data_summary_table_original_yHT %>% filter(SamplingDesign=="ACS")#
#
simulation_data_summary_table_RACS <- simulation_data_summary_table_original_yHT %>% filter(SamplingDesign=="RACS")#
#
# -----------------------------------------------------------------------------##
# Sampling Bias - new Y_HT formula#
# -----------------------------------------------------------------------------##
#
# sim.12Dec16_RACS_6 %>% mutate(m_threshold = 5) %>% filter(n.networks==5) %>% dim#
sim.12Dec16_RACS_7 %<>% mutate(m_threshold = 8) %>% filter(n.networks==20)#
#
# new y_HT formula#
simdata_new_yHT <- rbind.fill(#
	sim.12Dec16_RACS_7, # only for m_threshold = 8, n.networks = 20 (pop 4), 2000 simulations#
	sim.17Dec16_RACS,  # only for m_threshold = 7, n.networks = 10, 15, 30 (pops 2, 3, 5), 2000 simulations#
	sim.17Dec16_RACS_2, # only for m_threshold = 5, n.networks = 5 (pop 1), 5000 simulations#
	sim.18Dec16_RACS, # only for m_threshold = 9, n.networks = 40 (pop 6),#
	sim_20Dec16_RACS, # only for m_threshold = 8, n.networks = 20 (pop 4), 3000 simulations#
	sim_20Dec16_RACS_2,#
	#sim_20Dec16_RACS_3,#
	sim_20Dec16_RACS_4#
)#
simdata_new_yHT %<>% setnames("n.networks", "population")#
simdata_new_yHT$population %<>% as.factor()#
levels(simdata_new_yHT$population) <- 1:6#
#
names(simdata_new_yHT)[#
	which(names(simdata_new_yHT) %in% c(#
		"CACA_on_Stricta_mean_observed",#
		"CACA_on_Stricta_var_observed",#
		"MEPR_on_Stricta_mean_observed",#
		"MEPR_on_Stricta_var_observed",#
		"Old_Moth_Evidence_Pusilla_mean_observed",#
		"Old_Moth_Evidence_Pusilla_var_observed",#
		"Old_Moth_Evidence_Stricta_mean_observed", 		"Old_Moth_Evidence_Stricta_var_observed",#
		"Percent_Cover_Stricta_mean_observed",    #
		"Percent_Cover_Stricta_var_observed",#
		"Height_Stricta_mean_observed",#
		"Height_Stricta_var_observed"#
	))#
] <- c(#
	"MEPR_on_Stricta_ratio_mean_observed",#
	"MEPR_on_Stricta_ratio_var_observed",#
	"CACA_on_Stricta_ratio_mean_observed",#
	"CACA_on_Stricta_ratio_var_observed",#
	"Percent_Cover_Stricta_ratio_mean_observed",    #
	"Percent_Cover_Stricta_ratio_var_observed",#
	"Height_Stricta_ratio_mean_observed",#
	"Height_Stricta_ratio_var_observed",#
	"Old_Moth_Evidence_Pusilla_ratio_mean_observed",#
	"Old_Moth_Evidence_Pusilla_ratio_var_observed",#
	"Old_Moth_Evidence_Stricta_ratio_mean_observed", 	"Old_Moth_Evidence_Stricta_ratio_var_observed"#
)#
simulation_data_summary_table_new_yHT = calculateSamplingBias(#
	population_data_summary	= patch_data_summary_wide, #
	simulation_data		= simdata_new_yHT,#
	sampling.grouping.variables	= c(sampling.grouping.variables, "m_threshold"), #
	population.grouping.variables = population.grouping.variables,#
	variables			= ovar, #
	rvar				= rvar#
) %>%#
mutate(f_max = 2)#
#
simulation_data_summary_table_new_yHT %>%#
group_by(population, m_threshold, N.SRSWOR.plots, Plots, f_max) %>%#
summarise(n())#
#
simdata_new_yHT %>%#
group_by(population, m_threshold, N.SRSWOR.plots, Plots) %>%#
summarise(n()) %>%#
filter(Plots=="Horvitz Thompson Mean (All Plots)")#
# #### CORRECTED VARIANCE#
#
# mar2417_RACS %<>%#
# setnames("realization_variable", "realization") %>%#
# setnames("patch_variable", "n.networks")	#
# mar2417_RACS %<>% setnames("n.networks", "population")#
# mar2417_RACS$population %<>% as.factor()#
# levels(mar2417_RACS$population) <- 1:6#
#
# simulation_data_summary_table_new_var_yHT = calculateSamplingBias(#
# 	population_data_summary	= patch_data_summary_wide, #
# 	simulation_data		= mar2417_RACS,#
# 	sampling.grouping.variables	= c(sampling.grouping.variables, # "m_threshold"), #
# 	population.grouping.variables = population.grouping.variables,#
# 	variables			= ovar, #
# 	rvar				= rvar#
# ) %>%#
# mutate(f_max = 2)#
# -----------------------------------------------------------------------------##
# Sampling Bias - new Y_HT formula, F_MAX = 1#
# -----------------------------------------------------------------------------##
#
names(sim_24Dec16_RACS_2)[#
	which(names(sim_24Dec16_RACS_2) %in% c(#
		"MEPR_on_Stricta_mean_observed",#
		"MEPR_on_Stricta_var_observed",#
		"CACA_on_Stricta_mean_observed",#
		"CACA_on_Stricta_var_observed",#
		"Percent_Cover_Stricta_mean_observed",    #
		"Percent_Cover_Stricta_var_observed",#
		"Height_Stricta_mean_observed",#
		"Height_Stricta_var_observed",#
		"Old_Moth_Evidence_Pusilla_mean_observed",#
		"Old_Moth_Evidence_Pusilla_var_observed",#
		"Old_Moth_Evidence_Stricta_mean_observed", 		"Old_Moth_Evidence_Stricta_var_observed"#
	))#
] <- c(#
	"MEPR_on_Stricta_ratio_mean_observed",#
	"MEPR_on_Stricta_ratio_var_observed",#
	"CACA_on_Stricta_ratio_mean_observed",#
	"CACA_on_Stricta_ratio_var_observed",#
	"Percent_Cover_Stricta_ratio_mean_observed",    #
	"Percent_Cover_Stricta_ratio_var_observed",#
	"Height_Stricta_ratio_mean_observed",#
	"Height_Stricta_ratio_var_observed",#
	"Old_Moth_Evidence_Pusilla_ratio_mean_observed",#
	"Old_Moth_Evidence_Pusilla_ratio_var_observed",#
	"Old_Moth_Evidence_Stricta_ratio_mean_observed", 	"Old_Moth_Evidence_Stricta_ratio_var_observed"#
)#
sim_24Dec16_RACS_2 %<>% setnames("n.networks", "population")#
sim_24Dec16_RACS_2$population %<>% as.factor()#
levels(sim_24Dec16_RACS_2$population) <- 1:6#
#
unique(sim_24Dec16_RACS_2$f_max)#
simulation_data_summary_table_new_yHT_fmax_1 = calculateSamplingBias(#
	population_data_summary	= patch_data_summary_wide, #
	simulation_data		= sim_24Dec16_RACS_2,#
	sampling.grouping.variables	= c(sampling.grouping.variables, "m_threshold"), #
	population.grouping.variables = population.grouping.variables,#
	variables			= ovar, #
	rvar				= rvar#
) %>%#
mutate(f_max = 1)#
#
#simulation_data_summary_table_new_yHT_fmax_1 %>%#
#	group_by(n.networks, m_threshold, N.SRSWOR.plots, Plots, f_max) %>%#
#	summarise(n())#
#
# -----------------------------------------------------------------------------##
# Sampling Bias - new Y_HT formula, F_MAX = 1, m_threshold = 4#
# -----------------------------------------------------------------------------##
#
names(sim_24Dec16_RACS_3)[#
	which(names(sim_24Dec16_RACS_3) %in% c(#
		"MEPR_on_Stricta_mean_observed",#
		"MEPR_on_Stricta_var_observed",#
		"CACA_on_Stricta_mean_observed",#
		"CACA_on_Stricta_var_observed",#
		"Percent_Cover_Stricta_mean_observed",    #
		"Percent_Cover_Stricta_var_observed",#
		"Height_Stricta_mean_observed",#
		"Height_Stricta_var_observed",#
		"Old_Moth_Evidence_Pusilla_mean_observed",#
		"Old_Moth_Evidence_Pusilla_var_observed",#
		"Old_Moth_Evidence_Stricta_mean_observed", 		"Old_Moth_Evidence_Stricta_var_observed"#
	))#
] <- c(#
	"MEPR_on_Stricta_ratio_mean_observed",#
	"MEPR_on_Stricta_ratio_var_observed",#
	"CACA_on_Stricta_ratio_mean_observed",#
	"CACA_on_Stricta_ratio_var_observed",#
	"Percent_Cover_Stricta_ratio_mean_observed",    #
	"Percent_Cover_Stricta_ratio_var_observed",#
	"Height_Stricta_ratio_mean_observed",#
	"Height_Stricta_ratio_var_observed",#
	"Old_Moth_Evidence_Pusilla_ratio_mean_observed",#
	"Old_Moth_Evidence_Pusilla_ratio_var_observed",#
	"Old_Moth_Evidence_Stricta_ratio_mean_observed", 	"Old_Moth_Evidence_Stricta_ratio_var_observed"#
)#
sim_24Dec16_RACS_3 %<>% setnames("n.networks", "population")#
sim_24Dec16_RACS_3$population %<>% as.factor()#
levels(sim_24Dec16_RACS_3$population) <- 1:6#
#
unique(sim_24Dec16_RACS_3$f_max)#
#
simulation_data_summary_table_new_yHT_fmax_1_4 = calculateSamplingBias(#
	population_data_summary	= patch_data_summary_wide, #
	simulation_data		= sim_24Dec16_RACS_3,#
	sampling.grouping.variables	= c(sampling.grouping.variables, "m_threshold"), #
	population.grouping.variables = population.grouping.variables,#
	variables			= ovar, #
	rvar				= rvar#
) %>%#
mutate(f_max = 1)#
#
simulation_data_summary_table_new_yHT_fmax_1_4 %>%#
group_by(population, m_threshold, N.SRSWOR.plots, Plots, f_max) %>%#
summarise(n())#
setwd("/Users/KSauby/Documents/Projects/ACSampling_project")#
	cache("simulation_data_summary_table_ACS")	#
	cache("simulation_data_summary_table_RACS")	#
	cache("simulation_data_summary_table_original_insectdenom")	#
	cache("simulation_data_summary_table_new_y_HT_re")	#
	cache("simulation_data_summary_table_new_yHT")#
	cache("simulation_data_summary_table_new_yHT_fmax_1_4")#
	cache("simulation_data_summary_table_new_yHT_fmax_1")#
	cache("simulation_data_summary_table_re")
setwd('/Users/KSauby/Documents/Projects/ACSampling_project/code/Manuscript/simulations')
# -----------------------------------------------------------------------------##
# RELATIVE EFFICIENCY#
# -----------------------------------------------------------------------------##
temp <- simdata_all %>%#
filter(Plots=="Horvitz Thompson Mean (All Plots)") %>%#
	group_by_(.dots = c(#
		population.grouping.variables, #
		sampling.grouping.variables#
	)) %>%#
	summarise(#
		N.Total.plots_mean = round(mean(N.Total.plots, na.rm=T),0)#
	)#
#
simdata_all_re <- simdata_all %>% #
filter(Plots=="Horvitz Thompson Mean (All Plots)") %>%#
merge(#
	temp, by=c(#
		population.grouping.variables, #
		sampling.grouping.variables#
	)#
)#
#
sampling.grouping.variables <- c("N.Total.plots_mean", "N.SRSWOR.plots", "SamplingDesign")#
#
# use ratio mean rather than regular mean#
simulation_data_summary_table_re = calculateSamplingBias(#
	population_data_summary	= patch_data_summary_wide, #
	simulation_data		= simdata_all_re, #
	sampling.grouping.variables	= sampling.grouping.variables, #
	population.grouping.variables = population.grouping.variables,#
	variables			= ovar, #
	rvar				= rvar#
)
str(simulation_data_summary_table_re)
setwd('/Users/KSauby/Documents/Projects/ACSampling_project/code/Manuscript/simulations')
sampling.grouping.variables
setwd('/Users/KSauby/Documents/Projects/ACSampling_project/code/Manuscript/simulations')
population.grouping.variables
str(patch_data_summary_wide)
str(patch_data)
str(simulation_data_summary_table_re)
setwd('/Users/KSauby/Documents/Projects/ACSampling_project/code/Manuscript/simulations')
patch_data[[1]] %<>% setnames("n.networks", "population")#
patch_data[[1]]$population %<>% as.factor()#
levels(patch_data[[1]]$population) <- 1:6
setwd('/Users/KSauby/Documents/Projects/ACSampling_project/code/Manuscript/simulations')
patch_data %<>% setnames("n.networks", "population")#
patch_data$population %<>% as.factor()#
levels(patch_data$population) <- 1:6
setwd('/Users/KSauby/Documents/Projects/ACSampling_project/code/Manuscript/simulations')
# -----------------------------------------------------------------------------##
# ABUNDANCE VARIABLES#
# -----------------------------------------------------------------------------##
# -----------------------------------------------------------------------------##
# OCCUPANCY VARIABLES#
# -----------------------------------------------------------------------------##
ovar <- c(#
	"Stricta",#
	"Pusilla",#
	"Cactus"#
)#
# -----------------------------------------------------------------------------##
# RATIO VARIABLES#
# -----------------------------------------------------------------------------##
rvar <- c(#
	"MEPR_on_Stricta",#
	"CACA_on_Stricta",#
	"Percent_Cover_Stricta",#
	"Height_Stricta",#
	"Old_Moth_Evidence_Pusilla",#
	"Old_Moth_Evidence_Stricta"#
)#
#
# "Percent_Cover_Pusilla",#
# "Height_Pusilla",#
# )
setwd('/Users/KSauby/Documents/Projects/ACSampling_project/code/Manuscript/simulations')
# REALIZATION DATA#
x_start 		<- 1#
x_end 			<- 30#
y_start 		<- 1#
y_end 			<- 30#
n.networks 		<- c(5, 15, 10, 20, 30, 40)#
n.realizations 	<- 1#
SpeciesInfo 	<- PlotSurveys_season1#
buffer			<- 5#
start.seed		<- 1#
variables		<- ovar#
# CREATE REALIZATIONS#
patch_data <- createSpeciesPatchRealizations(#
	x_start, #
	x_end,#
	y_start, #
	y_end, #
	buffer, #
	n.networks, #
	n.realizations, #
	SpeciesInfo, #
	start.seed,#
	variables#
)#
#
patch_data_for_tables <- patch_data#
#
# convert NAs to zeros#
 patch_data[,c(#
 	"CACA_on_Pusilla",#
 	"CACA_on_Stricta",#
 	"MEPR_on_Pusilla",#
 	"MEPR_on_Stricta",#
 	"Old_Moth_Evidence_Pusilla",#
 	"Old_Moth_Evidence_Stricta",#
 	"Percent_Cover_Pusilla",#
 	"Percent_Cover_Stricta",#
 	"Height_Pusilla",#
 	"Height_Stricta"#
 )] %<>% apply(., 2, NA_is_Zero_Function)
setwd('/Users/KSauby/Documents/Projects/ACSampling_project/code/Manuscript/simulations')
N 					<- patch_data$N[1]#
nsamples			<- c( 20, 30, 40, 75, 100) #, 150, 200)#
grouping.variables	<- c("n.networks", "realization")#
#
patch_data <- summarizeNetworkInformation(#
	population_data = patch_data, #
	variables = c(ovar, rvar), #
	grouping.variables = grouping.variables, #
	nsamples = nsamples, #
	m_var="Cactus"#
)
setwd('/Users/KSauby/Documents/Projects/ACSampling_project/code/Manuscript/simulations')
# calculate realization summary statistics#
#
patch_data_summary <- calculatePopulationSummaryStatistics(#
	population_data 				= patch_data, #
	summary.variables 				= c(ovar,rvar), #
	population.grouping.variable 	= "n.networks", #
	ratio.variables 				= rvar#
)#
#
# fix population name#
patch_data_summary[[2]]$population %<>% as.factor()#
levels(patch_data_summary[[2]]$population) <- 1:6#
#
patch_data_summary[[1]] %<>% setnames("n.networks", "population")#
patch_data_summary[[1]]$population %<>% as.factor()#
levels(patch_data_summary[[1]]$population) <- 1:6#
#
patch_data %<>% setnames("n.networks", "population")#
patch_data$population %<>% as.factor()#
levels(patch_data$population) <- 1:6
setwd('/Users/KSauby/Documents/Projects/ACSampling_project/code/Manuscript/simulations')
### ADD LEVELS TO PATCH_DATA BASED ON THIS SUMMARY#
#
# LEVELS OF CACTUS OCCUPANCY#
Cactus_mean <- patch_data_summary[[2]] %>% filter(variable=="Cactus") %$% Mean#
patch_data$n.networks %<>% as.factor()#
patch_data$n.networks.for.plotting <- patch_data$n.networks#
levels(patch_data$n.networks.for.plotting) <- c(#
	expression(atop(#
		'Population 1',#
		'Cactus Occupancy'~mu[C]~' = 0.032'#
	)), #
	expression(atop(#
		'Population 2',#
		mu[C]~' = 0.064'#
	)), #
	expression(atop(#
		'Population 3',#
		mu[C]~' = 0.098'#
	)), #
	expression(atop(#
		'Population 4',#
		mu[C]~' = 0.144'#
	)), #
	expression(atop(#
		'Population 5',#
		mu[C]~' = 0.157'#
	)), #
	expression(atop(#
		'Population 6',#
		mu[C]~' = 0.24'#
	))#
)#
#
# LEVELS OF STRICTA OCCUPANCY#
patch_data$n.networks.for.plotting -> patch_data$stricta_occ#
Stricta_mean <- patch_data_summary[[2]] %>% filter(variable=="Stricta") %$% Mean#
#
levels(patch_data$stricta_occ) <- c(#
	expression(atop(#
		'Population 1',#
		italic("O. stricta")*","~mu[s]~' = 0.019'#
	)), #
	expression(atop(#
		'Population 2',#
		mu[s]~' = 0.047'#
	)), #
	expression(atop(#
		'Population 3',#
		mu[s]~' = 0.063'#
	)), #
	expression(atop(#
		'Population 4',#
		mu[s]~' = 0.091'#
	)), #
	expression(atop(#
		'Population 5',#
		mu[s]~' = 0.111'#
	)), #
	expression(atop(#
		'Population 6',#
		mu[s]~' = 0.152'#
	))#
)#
#
# LEVELS OF PUSILLA OCCUPANCY#
patch_data$n.networks.for.plotting -> patch_data$pusilla_occ#
Pusilla_mean <- patch_data_summary[[2]] %>% filter(variable=="Pusilla") %$% Mean#
levels(patch_data$pusilla_occ) <- c(#
	expression(atop(#
		'Population 1',#
		italic("O. pusilla")*","~mu[p]~' = 0.014'#
	)), #
	expression(atop(#
		'Population 2',#
		mu[p]~' = 0.03'#
	)), #
	expression(atop(#
		'Population 3',#
		mu[p]~' = 0.042'#
	)), #
	expression(atop(#
		'Population 4',#
		mu[p]~' = 0.078'#
	)), #
	expression(atop(#
		'Population 5',#
		mu[p]~' = 0.053'#
	)), #
	expression(atop(#
		'Population 6',#
		mu[p]~' = 0.11'#
	))#
) #
patch_data %<>% mutate(#
	Stricta_vars = paste(Stricta, CACA_on_Stricta, MEPR_on_Stricta),#
	Pusilla_vars = paste(Pusilla, CACA_on_Pusilla, MEPR_on_Pusilla),#
	Cactus_vars = paste(Pusilla, Stricta),#
	Cactus_occ = Cactus,#
	Moth_damage_vars = paste(#
		Cactus,#
		Old_Moth_Evidence_Pusilla,#
		Old_Moth_Evidence_Stricta#
	)#
)#
patch_data$Cactus_occ %<>% as.factor#
levels(patch_data$Cactus_occ) <- c("Cacti Absent", "Cacti Present")#
#
patch = patch_data %>% filter(n.networks==unique(patch_data$n.networks)[3])#
#
patch_data_stricta <- patch_data %>% filter(Stricta_vars!="0 0 0")#
patch_data_stricta$Stricta_vars %<>% as.factor#
patch_data_pusilla <- patch_data %>% filter(Pusilla_vars!="0 0 0")#
patch_data_pusilla$Pusilla_vars %<>% as.factor#
patch_data_cactus <- patch_data %>% filter(Cactus_vars!="0 0")#
patch_data_cactus$Cactus_vars %<>% as.factor#
patch_data_moth_damage <- patch_data %>% filter(Moth_damage_vars!="0 0 0")#
patch_data_moth_damage$Moth_damage_vars %<>% as.factor#
# Optimal m_threshold#
#
expand.grid.df <- function(...) Reduce(function(...) merge(..., by=NULL), list(...))#
patch_data_summary_f_max <- expand.grid.df(patch_data_summary[[1]], f_max = 1:3) %>%#
setnames("y", "f_max")#
#
patch_data_summary_f_max$optimal_m_threshold <- c(#
	3,3,3,4,3,4,#
	5,7,7,8,7,9,#
	7,10,10,12,11,14#
)
setwd('/Users/KSauby/Documents/Projects/ACSampling_project/code/Manuscript/simulations')
# LEVELS OF CACTUS OCCUPANCY#
Cactus_mean <- patch_data_summary[[2]] %>% filter(variable=="Cactus") %$% Mean#
patch_data$n.networks.for.plotting <- patch_data$population#
levels(patch_data$n.networks.for.plotting) <- c(#
	expression(atop(#
		'Population 1',#
		'Cactus Occupancy'~mu[C]~' = 0.032'#
	)), #
	expression(atop(#
		'Population 2',#
		mu[C]~' = 0.064'#
	)), #
	expression(atop(#
		'Population 3',#
		mu[C]~' = 0.098'#
	)), #
	expression(atop(#
		'Population 4',#
		mu[C]~' = 0.144'#
	)), #
	expression(atop(#
		'Population 5',#
		mu[C]~' = 0.157'#
	)), #
	expression(atop(#
		'Population 6',#
		mu[C]~' = 0.24'#
	))#
)#
#
# LEVELS OF STRICTA OCCUPANCY
setwd('/Users/KSauby/Documents/Projects/ACSampling_project/code/Manuscript/simulations')
# calculate realization summary statistics#
#
patch_data_summary <- calculatePopulationSummaryStatistics(#
	population_data 				= patch_data, #
	summary.variables 				= c(ovar,rvar), #
	population.grouping.variable 	= "n.networks", #
	ratio.variables 				= rvar#
)#
#
# fix population name#
patch_data_summary[[2]]$population %<>% as.factor()#
levels(patch_data_summary[[2]]$population) <- 1:6#
#
patch_data_summary[[1]] %<>% setnames("n.networks", "population")#
patch_data_summary[[1]]$population %<>% as.factor()#
levels(patch_data_summary[[1]]$population) <- 1:6#
#
patch_data %<>% setnames("n.networks", "population")#
patch_data$population %<>% as.factor()#
levels(patch_data$population) <- 1:6#
### ADD LEVELS TO PATCH_DATA BASED ON THIS SUMMARY#
#
# LEVELS OF CACTUS OCCUPANCY#
Cactus_mean <- patch_data_summary[[2]] %>% filter(variable=="Cactus") %$% Mean#
patch_data$population.for.plotting <- patch_data$population#
levels(patch_data$population.for.plotting) <- c(#
	expression(atop(#
		'Population 1',#
		'Cactus Occupancy'~mu[C]~' = 0.032'#
	)), #
	expression(atop(#
		'Population 2',#
		mu[C]~' = 0.064'#
	)), #
	expression(atop(#
		'Population 3',#
		mu[C]~' = 0.098'#
	)), #
	expression(atop(#
		'Population 4',#
		mu[C]~' = 0.144'#
	)), #
	expression(atop(#
		'Population 5',#
		mu[C]~' = 0.157'#
	)), #
	expression(atop(#
		'Population 6',#
		mu[C]~' = 0.24'#
	))#
)#
#
# LEVELS OF STRICTA OCCUPANCY#
patch_data$population.for.plotting -> patch_data$stricta_occ#
Stricta_mean <- patch_data_summary[[2]] %>% filter(variable=="Stricta") %$% Mean#
#
levels(patch_data$stricta_occ) <- c(#
	expression(atop(#
		'Population 1',#
		italic("O. stricta")*","~mu[s]~' = 0.019'#
	)), #
	expression(atop(#
		'Population 2',#
		mu[s]~' = 0.047'#
	)), #
	expression(atop(#
		'Population 3',#
		mu[s]~' = 0.063'#
	)), #
	expression(atop(#
		'Population 4',#
		mu[s]~' = 0.091'#
	)), #
	expression(atop(#
		'Population 5',#
		mu[s]~' = 0.111'#
	)), #
	expression(atop(#
		'Population 6',#
		mu[s]~' = 0.152'#
	))#
)#
#
# LEVELS OF PUSILLA OCCUPANCY#
patch_data$population.for.plotting -> patch_data$pusilla_occ#
Pusilla_mean <- patch_data_summary[[2]] %>% filter(variable=="Pusilla") %$% Mean#
levels(patch_data$pusilla_occ) <- c(#
	expression(atop(#
		'Population 1',#
		italic("O. pusilla")*","~mu[p]~' = 0.014'#
	)), #
	expression(atop(#
		'Population 2',#
		mu[p]~' = 0.03'#
	)), #
	expression(atop(#
		'Population 3',#
		mu[p]~' = 0.042'#
	)), #
	expression(atop(#
		'Population 4',#
		mu[p]~' = 0.078'#
	)), #
	expression(atop(#
		'Population 5',#
		mu[p]~' = 0.053'#
	)), #
	expression(atop(#
		'Population 6',#
		mu[p]~' = 0.11'#
	))#
) #
patch_data %<>% mutate(#
	Stricta_vars = paste(Stricta, CACA_on_Stricta, MEPR_on_Stricta),#
	Pusilla_vars = paste(Pusilla, CACA_on_Pusilla, MEPR_on_Pusilla),#
	Cactus_vars = paste(Pusilla, Stricta),#
	Cactus_occ = Cactus,#
	Moth_damage_vars = paste(#
		Cactus,#
		Old_Moth_Evidence_Pusilla,#
		Old_Moth_Evidence_Stricta#
	)#
)#
patch_data$Cactus_occ %<>% as.factor#
levels(patch_data$Cactus_occ) <- c("Cacti Absent", "Cacti Present")#
#
patch = patch_data %>% filter(population==unique(patch_data$population)[3])#
#
patch_data_stricta <- patch_data %>% filter(Stricta_vars!="0 0 0")#
patch_data_stricta$Stricta_vars %<>% as.factor#
patch_data_pusilla <- patch_data %>% filter(Pusilla_vars!="0 0 0")#
patch_data_pusilla$Pusilla_vars %<>% as.factor#
patch_data_cactus <- patch_data %>% filter(Cactus_vars!="0 0")#
patch_data_cactus$Cactus_vars %<>% as.factor#
patch_data_moth_damage <- patch_data %>% filter(Moth_damage_vars!="0 0 0")#
patch_data_moth_damage$Moth_damage_vars %<>% as.factor#
# Optimal m_threshold#
#
expand.grid.df <- function(...) Reduce(function(...) merge(..., by=NULL), list(...))#
patch_data_summary_f_max <- expand.grid.df(patch_data_summary[[1]], f_max = 1:3) %>%#
setnames("y", "f_max")#
#
patch_data_summary_f_max$optimal_m_threshold <- c(#
	3,3,3,4,3,4,#
	5,7,7,8,7,9,#
	7,10,10,12,11,14#
)
setwd('/Users/KSauby/Documents/Projects/ACSampling_project/code/Manuscript/simulations')
simdata_SRSWOR_only <- rbind.fill(#
	sim.12Nov16, # sample sizes from RACS sampling#
	sim.12Nov16_ACS # sample sizes from ACS sampling, NOT included in RACS#
	)#
simdata_SRSWOR_only %$% unique(Plots)#
#simdata_SRSWOR_only %<>% dplyr::select(-Plots)#
levels(simdata_SRSWOR_only$n.networks) <- c("5","10","15","20","30","40")#
#-----------------------------------------------------------------------------##
simdata <- rbind.fill(#
	sim.6Apr16,#
	sim.6Apr16.2,#
	sim.6Apr16.3#
) %>%#
dplyr::select(-c(#
	Percent_Cover_Pusilla_mean_observed,#
	Percent_Cover_Stricta_mean_observed,#
	Height_Pusilla_mean_observed,#
	Height_Stricta_mean_observed,#
	Percent_Cover_Pusilla_var_observed,#
	Percent_Cover_Stricta_var_observed,#
	Height_Pusilla_var_observed,   #
	Height_Stricta_var_observed#
)) %>%#
rbind.fill(#
	sim.27June16,#
	sim.27June16_1,#
	sim.27June16_2#
) %>%#
setnames("Restricted", "SamplingDesign")#
unique(simdata$SamplingDesign)#
simdata %<>% mutate(SamplingDesign="ACS")#
#simdata %<>% filter(Plots == "Horvitz Thompson Mean (All Plots)") %>% dplyr::select(-Plots)#
simdata$n.networks %<>% as.factor#
#-----------------------------------------------------------------------------##
simdata_restricted <- rbind.fill(	#
	sim.5Apr16.RACS,#
	sim.5Apr16.RACS.2,#
	sim.5Apr16.RACS.3,#
	sim.5Apr16.RACS.4,#
	sim.5Apr16.RACS.5,#
	sim.5Apr16.RACS.6,#
	sim.5Apr16.RACS.7#
) %>%#
# I Removed these because I had calculated them incorrectly?#
# remove height and percent cover since I did not calculate those correctly#
dplyr::select(-c(#
	Percent_Cover_Pusilla_mean_observed,#
	Percent_Cover_Stricta_mean_observed,#
	Height_Pusilla_mean_observed,#
	Height_Stricta_mean_observed,#
	Percent_Cover_Pusilla_var_observed,#
	Percent_Cover_Stricta_var_observed,#
	Height_Pusilla_var_observed,   #
	Height_Stricta_var_observed#
)) %>%#
rbind.fill(#
	sim.16June16, #
	sim.16June16.2, #
	sim.16June16.3,#
	sim.16June16.4,#
	sim.16June16.5#
) %>%#
setnames("Restricted", "SamplingDesign")#
unique(simdata_restricted$SamplingDesign)#
simdata_restricted %<>% mutate(SamplingDesign="RACS")#
#simdata_restricted %<>% filter(Plots == "Horvitz Thompson Mean (All Plots)") %>% dplyr::select(-Plots)#
simdata_restricted$n.networks %<>% as.factor
setwd('/Users/KSauby/Documents/Projects/ACSampling_project/code/Manuscript/simulations')
n.networks
setwd('/Users/KSauby/Documents/Projects/ACSampling_project/code/Manuscript/simulations')
population.grouping.variables	<- c("population")#
sampling.grouping.variables <- c("N.SRSWOR.plots", "SamplingDesign", "Plots")#
statistics 			<- c("mean", "var")#
ratio.statistics	<- c("mean")#
#
# variance#
A <- patch_data_summary[[2]] %>%#
	dplyr::select(Var, variable, population) %>%#
	rowwise() %>%#
	mutate(#
		variable = replace(#
			variable,#
			which(variable %in% rvar),#
			paste(variable, "ratio", sep="_")#
			)#
	) %>%#
	ungroup() %>%#
	reshape2::dcast(., population ~ variable, value.var="Var")#
names(A)[2:10] <- paste(names(A)[2:10], "var", sep="_")#
# mean#
B <- patch_data_summary[[2]] %>%#
	dplyr::select(Mean, variable, population) %>%#
	rowwise() %>%#
	mutate(#
		variable = replace(#
			variable,#
			which(variable %in% rvar),#
			paste(variable, "ratio", sep="_")#
			)#
	) %>%#
	ungroup() %>%#
	reshape2::dcast(., population ~ variable, value.var="Mean")#
names(B)[2:10] <- paste(names(B)[2:10], "mean", sep="_")#
patch_data_summary_wide <- merge(A, B)#
#
# -----------------------------------------------------------------------------##
# Simulations testing biased-ness of insects variables NOT using ratio estimator#
# -----------------------------------------------------------------------------##
#
# simdatainsect_denom <- rbind.fill(#
# 	simulation_data_25Jan17_RACS, #
# 	simulation_data_30Jan17_ACS#
# )#
# simdata %<>% setnames("n.networks", "population")#
# simdata$population %<>% as.factor()#
# levels(simdata$population) <- 1:6#
# simulation_data_summary_table_original_insectdenom = calculateSamplingBias(#
# 	population_data_summary	= patch_data_summary_wide, #
# 	simulation_data		= simdata,#
# 	sampling.grouping.variables	= sampling.grouping.variables, #
# 	population.grouping.variables = "population",#
# 	variables			= c(ovar,rvar), #
# 	rvar				= rvar#
# )#
#
# simulation_data_summary_table_original_insectdenom %<>% filter(SamplingDesign=="RACS")#
#
# -----------------------------------------------------------------------------##
# Sampling Bias - original Y_HT formula#
# -----------------------------------------------------------------------------##
#
simdata_all <- rbind.fill(#
	simdata_restricted,#
	simdata#
)#
#
names(simdata_all)[#
	which(names(simdata_all) %in% c(#
		"CACA_on_Stricta_mean_observed",#
		"CACA_on_Stricta_var_observed",#
		"MEPR_on_Stricta_mean_observed",#
		"MEPR_on_Stricta_var_observed",#
		"Old_Moth_Evidence_Pusilla_mean_observed",#
		"Old_Moth_Evidence_Pusilla_var_observed",#
		"Old_Moth_Evidence_Stricta_mean_observed", 		"Old_Moth_Evidence_Stricta_var_observed",#
		"Percent_Cover_Stricta_mean_observed",    #
		"Percent_Cover_Stricta_var_observed",#
		"Height_Stricta_mean_observed",#
		"Height_Stricta_var_observed"#
	))#
] <- c(#
	"CACA_on_Stricta_ratio_mean_observed",#
	"CACA_on_Stricta_ratio_var_observed",#
	"MEPR_on_Stricta_ratio_mean_observed",#
	"MEPR_on_Stricta_ratio_var_observed",#
	"Old_Moth_Evidence_Pusilla_ratio_mean_observed",#
	"Old_Moth_Evidence_Pusilla_ratio_var_observed",#
	"Old_Moth_Evidence_Stricta_ratio_mean_observed", 	"Old_Moth_Evidence_Stricta_ratio_var_observed",#
	"Percent_Cover_Stricta_ratio_mean_observed",    #
	"Percent_Cover_Stricta_ratio_var_observed",#
	"Height_Stricta_ratio_mean_observed",#
	"Height_Stricta_ratio_var_observed"#
)#
#
simdata_all %<>% setnames("n.networks", "population")#
simdata_all$population %<>% as.factor()#
levels(simdata_all$population) <- 1:6#
simulation_data_summary_table_original_yHT = calculateSamplingBias(#
	population_data_summary	= patch_data_summary_wide, #
	simulation_data		= simdata_all, #
	sampling.grouping.variables	= sampling.grouping.variables, #
	population.grouping.variables = population.grouping.variables,#
	variables			= ovar, #
	rvar				= rvar#
)#
#
simulation_data_summary_table_ACS <- simulation_data_summary_table_original_yHT %>% filter(SamplingDesign=="ACS")#
#
simulation_data_summary_table_RACS <- simulation_data_summary_table_original_yHT %>% filter(SamplingDesign=="RACS")#
#
# -----------------------------------------------------------------------------##
# Sampling Bias - new Y_HT formula#
# -----------------------------------------------------------------------------##
#
# sim.12Dec16_RACS_6 %>% mutate(m_threshold = 5) %>% filter(n.networks==5) %>% dim#
sim.12Dec16_RACS_7 %<>% mutate(m_threshold = 8) %>% filter(n.networks==20)#
#
# new y_HT formula#
simdata_new_yHT <- rbind.fill(#
	sim.12Dec16_RACS_7, # only for m_threshold = 8, n.networks = 20 (pop 4), 2000 simulations#
	sim.17Dec16_RACS,  # only for m_threshold = 7, n.networks = 10, 15, 30 (pops 2, 3, 5), 2000 simulations#
	sim.17Dec16_RACS_2, # only for m_threshold = 5, n.networks = 5 (pop 1), 5000 simulations#
	sim.18Dec16_RACS, # only for m_threshold = 9, n.networks = 40 (pop 6),#
	sim_20Dec16_RACS, # only for m_threshold = 8, n.networks = 20 (pop 4), 3000 simulations#
	sim_20Dec16_RACS_2,#
	#sim_20Dec16_RACS_3,#
	sim_20Dec16_RACS_4#
)#
simdata_new_yHT %<>% setnames("n.networks", "population")#
simdata_new_yHT$population %<>% as.factor()#
levels(simdata_new_yHT$population) <- 1:6#
#
names(simdata_new_yHT)[#
	which(names(simdata_new_yHT) %in% c(#
		"CACA_on_Stricta_mean_observed",#
		"CACA_on_Stricta_var_observed",#
		"MEPR_on_Stricta_mean_observed",#
		"MEPR_on_Stricta_var_observed",#
		"Old_Moth_Evidence_Pusilla_mean_observed",#
		"Old_Moth_Evidence_Pusilla_var_observed",#
		"Old_Moth_Evidence_Stricta_mean_observed", 		"Old_Moth_Evidence_Stricta_var_observed",#
		"Percent_Cover_Stricta_mean_observed",    #
		"Percent_Cover_Stricta_var_observed",#
		"Height_Stricta_mean_observed",#
		"Height_Stricta_var_observed"#
	))#
] <- c(#
	"MEPR_on_Stricta_ratio_mean_observed",#
	"MEPR_on_Stricta_ratio_var_observed",#
	"CACA_on_Stricta_ratio_mean_observed",#
	"CACA_on_Stricta_ratio_var_observed",#
	"Percent_Cover_Stricta_ratio_mean_observed",    #
	"Percent_Cover_Stricta_ratio_var_observed",#
	"Height_Stricta_ratio_mean_observed",#
	"Height_Stricta_ratio_var_observed",#
	"Old_Moth_Evidence_Pusilla_ratio_mean_observed",#
	"Old_Moth_Evidence_Pusilla_ratio_var_observed",#
	"Old_Moth_Evidence_Stricta_ratio_mean_observed", 	"Old_Moth_Evidence_Stricta_ratio_var_observed"#
)#
simulation_data_summary_table_new_yHT = calculateSamplingBias(#
	population_data_summary	= patch_data_summary_wide, #
	simulation_data		= simdata_new_yHT,#
	sampling.grouping.variables	= c(sampling.grouping.variables, "m_threshold"), #
	population.grouping.variables = population.grouping.variables,#
	variables			= ovar, #
	rvar				= rvar#
) %>%#
mutate(f_max = 2)#
#
simulation_data_summary_table_new_yHT %>%#
group_by(population, m_threshold, N.SRSWOR.plots, Plots, f_max) %>%#
summarise(n())#
#
simdata_new_yHT %>%#
group_by(population, m_threshold, N.SRSWOR.plots, Plots) %>%#
summarise(n()) %>%#
filter(Plots=="Horvitz Thompson Mean (All Plots)")#
# #### CORRECTED VARIANCE#
#
# mar2417_RACS %<>%#
# setnames("realization_variable", "realization") %>%#
# setnames("patch_variable", "n.networks")	#
# mar2417_RACS %<>% setnames("n.networks", "population")#
# mar2417_RACS$population %<>% as.factor()#
# levels(mar2417_RACS$population) <- 1:6#
#
# simulation_data_summary_table_new_var_yHT = calculateSamplingBias(#
# 	population_data_summary	= patch_data_summary_wide, #
# 	simulation_data		= mar2417_RACS,#
# 	sampling.grouping.variables	= c(sampling.grouping.variables, # "m_threshold"), #
# 	population.grouping.variables = population.grouping.variables,#
# 	variables			= ovar, #
# 	rvar				= rvar#
# ) %>%#
# mutate(f_max = 2)#
# -----------------------------------------------------------------------------##
# Sampling Bias - new Y_HT formula, F_MAX = 1#
# -----------------------------------------------------------------------------##
#
names(sim_24Dec16_RACS_2)[#
	which(names(sim_24Dec16_RACS_2) %in% c(#
		"MEPR_on_Stricta_mean_observed",#
		"MEPR_on_Stricta_var_observed",#
		"CACA_on_Stricta_mean_observed",#
		"CACA_on_Stricta_var_observed",#
		"Percent_Cover_Stricta_mean_observed",    #
		"Percent_Cover_Stricta_var_observed",#
		"Height_Stricta_mean_observed",#
		"Height_Stricta_var_observed",#
		"Old_Moth_Evidence_Pusilla_mean_observed",#
		"Old_Moth_Evidence_Pusilla_var_observed",#
		"Old_Moth_Evidence_Stricta_mean_observed", 		"Old_Moth_Evidence_Stricta_var_observed"#
	))#
] <- c(#
	"MEPR_on_Stricta_ratio_mean_observed",#
	"MEPR_on_Stricta_ratio_var_observed",#
	"CACA_on_Stricta_ratio_mean_observed",#
	"CACA_on_Stricta_ratio_var_observed",#
	"Percent_Cover_Stricta_ratio_mean_observed",    #
	"Percent_Cover_Stricta_ratio_var_observed",#
	"Height_Stricta_ratio_mean_observed",#
	"Height_Stricta_ratio_var_observed",#
	"Old_Moth_Evidence_Pusilla_ratio_mean_observed",#
	"Old_Moth_Evidence_Pusilla_ratio_var_observed",#
	"Old_Moth_Evidence_Stricta_ratio_mean_observed", 	"Old_Moth_Evidence_Stricta_ratio_var_observed"#
)#
sim_24Dec16_RACS_2 %<>% setnames("n.networks", "population")#
sim_24Dec16_RACS_2$population %<>% as.factor()#
levels(sim_24Dec16_RACS_2$population) <- 1:6#
#
unique(sim_24Dec16_RACS_2$f_max)#
simulation_data_summary_table_new_yHT_fmax_1 = calculateSamplingBias(#
	population_data_summary	= patch_data_summary_wide, #
	simulation_data		= sim_24Dec16_RACS_2,#
	sampling.grouping.variables	= c(sampling.grouping.variables, "m_threshold"), #
	population.grouping.variables = population.grouping.variables,#
	variables			= ovar, #
	rvar				= rvar#
) %>%#
mutate(f_max = 1)#
#
#simulation_data_summary_table_new_yHT_fmax_1 %>%#
#	group_by(n.networks, m_threshold, N.SRSWOR.plots, Plots, f_max) %>%#
#	summarise(n())#
#
# -----------------------------------------------------------------------------##
# Sampling Bias - new Y_HT formula, F_MAX = 1, m_threshold = 4#
# -----------------------------------------------------------------------------##
#
names(sim_24Dec16_RACS_3)[#
	which(names(sim_24Dec16_RACS_3) %in% c(#
		"MEPR_on_Stricta_mean_observed",#
		"MEPR_on_Stricta_var_observed",#
		"CACA_on_Stricta_mean_observed",#
		"CACA_on_Stricta_var_observed",#
		"Percent_Cover_Stricta_mean_observed",    #
		"Percent_Cover_Stricta_var_observed",#
		"Height_Stricta_mean_observed",#
		"Height_Stricta_var_observed",#
		"Old_Moth_Evidence_Pusilla_mean_observed",#
		"Old_Moth_Evidence_Pusilla_var_observed",#
		"Old_Moth_Evidence_Stricta_mean_observed", 		"Old_Moth_Evidence_Stricta_var_observed"#
	))#
] <- c(#
	"MEPR_on_Stricta_ratio_mean_observed",#
	"MEPR_on_Stricta_ratio_var_observed",#
	"CACA_on_Stricta_ratio_mean_observed",#
	"CACA_on_Stricta_ratio_var_observed",#
	"Percent_Cover_Stricta_ratio_mean_observed",    #
	"Percent_Cover_Stricta_ratio_var_observed",#
	"Height_Stricta_ratio_mean_observed",#
	"Height_Stricta_ratio_var_observed",#
	"Old_Moth_Evidence_Pusilla_ratio_mean_observed",#
	"Old_Moth_Evidence_Pusilla_ratio_var_observed",#
	"Old_Moth_Evidence_Stricta_ratio_mean_observed", 	"Old_Moth_Evidence_Stricta_ratio_var_observed"#
)#
sim_24Dec16_RACS_3 %<>% setnames("n.networks", "population")#
sim_24Dec16_RACS_3$population %<>% as.factor()#
levels(sim_24Dec16_RACS_3$population) <- 1:6#
#
unique(sim_24Dec16_RACS_3$f_max)#
#
simulation_data_summary_table_new_yHT_fmax_1_4 = calculateSamplingBias(#
	population_data_summary	= patch_data_summary_wide, #
	simulation_data		= sim_24Dec16_RACS_3,#
	sampling.grouping.variables	= c(sampling.grouping.variables, "m_threshold"), #
	population.grouping.variables = population.grouping.variables,#
	variables			= ovar, #
	rvar				= rvar#
) %>%#
mutate(f_max = 1)#
#
simulation_data_summary_table_new_yHT_fmax_1_4 %>%#
group_by(population, m_threshold, N.SRSWOR.plots, Plots, f_max) %>%#
summarise(n())#
setwd("/Users/KSauby/Documents/Projects/ACSampling_project")#
	cache("simulation_data_summary_table_ACS")	#
	cache("simulation_data_summary_table_RACS")	#
	cache("simulation_data_summary_table_original_insectdenom")	#
	cache("simulation_data_summary_table_new_y_HT_re")	#
	cache("simulation_data_summary_table_new_yHT")#
	cache("simulation_data_summary_table_new_yHT_fmax_1_4")#
	cache("simulation_data_summary_table_new_yHT_fmax_1")#
	cache("simulation_data_summary_table_re")
setwd('/Users/KSauby/Documents/Projects/ACSampling_project/code/Manuscript/simulations')
# -----------------------------------------------------------------------------##
# RELATIVE EFFICIENCY#
# -----------------------------------------------------------------------------##
temp <- simdata_all %>%#
filter(Plots=="Horvitz Thompson Mean (All Plots)") %>%#
	group_by_(.dots = c(#
		population.grouping.variables, #
		sampling.grouping.variables#
	)) %>%#
	summarise(#
		N.Total.plots_mean = round(mean(N.Total.plots, na.rm=T),0)#
	)#
#
simdata_all_re <- simdata_all %>% #
filter(Plots=="Horvitz Thompson Mean (All Plots)") %>%#
merge(#
	temp, by=c(#
		population.grouping.variables, #
		sampling.grouping.variables#
	)#
)#
#
sampling.grouping.variables <- c("N.Total.plots_mean", "N.SRSWOR.plots", "SamplingDesign")#
#
# use ratio mean rather than regular mean#
simulation_data_summary_table_re = calculateSamplingBias(#
	population_data_summary	= patch_data_summary_wide, #
	simulation_data		= simdata_all_re, #
	sampling.grouping.variables	= sampling.grouping.variables, #
	population.grouping.variables = population.grouping.variables,#
	variables			= ovar, #
	rvar				= rvar#
)#
RE_values <- calculateRE(#
	population_data = patch_data,#
	MSE_ComparisonSamplingDesign = simulation_data_summary_table_re,#
	population.grouping.variables = "n.networks",#
	sample.size.variable = "N.Total.plots_mean",#
	ovar = ovar,#
	rvar = rvar#
)
setwd('/Users/KSauby/Documents/Projects/ACSampling_project/code/Manuscript/simulations')
RE_values <- calculateRE(#
	population_data = patch_data,#
	MSE_ComparisonSamplingDesign = simulation_data_summary_table_re,#
	population.grouping.variables = "population",#
	sample.size.variable = "N.Total.plots_mean",#
	ovar = ovar,#
	rvar = rvar#
)
setwd('/Users/KSauby/Documents/Projects/ACSampling_project/code/Manuscript/simulations')
simulation_data_summary_table_re %<>%#
	setnames("sample.size.variable", "N.Total.plots_mean") %>%#
	merge(#
		RE_values, #
		by=c("n.networks","N.Total.plots_mean")#
	)
setwd('/Users/KSauby/Documents/Projects/ACSampling_project/code/Manuscript/simulations')
simulation_data_summary_table_re %<>%#
	setnames("sample.size.variable", "N.Total.plots_mean") %>%#
	merge(#
		RE_values, #
		by=c("population","N.Total.plots_mean")#
	)
setwd('/Users/KSauby/Documents/Projects/ACSampling_project/code/Manuscript/simulations')
# -----------------------------------------------------------------------------##
# RELATIVE EFFICIENCY - F_max = 2, new y_HT#
# -----------------------------------------------------------------------------##
sampling.grouping.variables <- c("N.SRSWOR.plots", "SamplingDesign", "Plots")#
#
temp <- simdata_new_yHT %>%#
filter(Plots=="Horvitz Thompson Mean (All Plots)") %>%#
	group_by_(.dots = c(#
		population.grouping.variables, #
		sampling.grouping.variables#
	)) %>%#
	summarise(#
		N.Total.plots_mean = round(mean(N.Total.plots, na.rm=T),0)#
	)#
#
simdata_new_yHT_re <- simdata_new_yHT %>% #
filter(Plots=="Horvitz Thompson Mean (All Plots)") %>%#
merge(#
	temp, by=c(#
		population.grouping.variables, #
		sampling.grouping.variables#
	)#
)#
#
sampling.grouping.variables <- c("N.Total.plots_mean", "N.SRSWOR.plots", "SamplingDesign")#
#
# use ratio mean rather than regular mean#
#
simulation_data_summary_table_new_y_HT_re = calculateSamplingBias(#
	population_data_summary	= patch_data_summary_wide, #
	simulation_data		= simdata_new_yHT_re, #
	sampling.grouping.variables	= sampling.grouping.variables, #
	population.grouping.variables = population.grouping.variables,#
	variables			= ovar, #
	rvar				= rvar#
)#
#
RE_values <- calculateRE(#
	population_data = patch_data,#
	MSE_ComparisonSamplingDesign = simulation_data_summary_table_new_y_HT_re,#
	population.grouping.variables = "population",#
	sample.size.variable = "N.Total.plots_mean",#
	rvar = rvar,#
	ovar = ovar#
)#
#
simulation_data_summary_table_new_y_HT_re %<>%#
	setnames("sample.size.variable", "N.Total.plots_mean") %>%#
	merge(#
		RE_values, #
		by=c("n.networks","N.Total.plots_mean")#
	)
setwd('/Users/KSauby/Documents/Projects/ACSampling_project/code/Manuscript/simulations')
simulation_data_summary_table_re = calculateSamplingBias(#
	population_data_summary	= patch_data_summary_wide, #
	simulation_data		= simdata_all_re, #
	sampling.grouping.variables	= sampling.grouping.variables, #
	population.grouping.variables = population.grouping.variables,#
	variables			= ovar, #
	rvar				= rvar#
)
str(simulation_data_summary_table_re)
setwd('/Users/KSauby/Documents/Projects/ACSampling_project/code/Manuscript/simulations')
simulation_data_summary_table_re %<>%#
	merge(#
		RE_values, #
		by=c("population","N.Total.plots_mean")#
	)
setwd('/Users/KSauby/Documents/Projects/ACSampling_project/code/Manuscript/simulations')
simulation_data_summary_table_new_y_HT_re %<>%#
	setnames("sample.size.variable", "N.Total.plots_mean") %>%#
	merge(#
		RE_values, #
		by=c("n.networks","N.Total.plots_mean")#
	)
setwd('/Users/KSauby/Documents/Projects/ACSampling_project/code/Manuscript/simulations')
simulation_data_summary_table_new_y_HT_re %<>%#
	merge(#
		RE_values, #
		by=c("n.networks","N.Total.plots_mean")#
	)
setwd('/Users/KSauby/Documents/Projects/ACSampling_project/code/Manuscript/simulations')
simulation_data_summary_table_new_y_HT_re %<>%#
	merge(#
		RE_values, #
		by=c("population","N.Total.plots_mean")#
	)
setwd('/Users/KSauby/Documents/Projects')
setwd("./ACS")#
#setwd("./modresproc")#
#devtools::test()#
devtools::document()#
devtools::install()

22+60+78+80+88+98
22+38+18+2+8+10
239/785
(239+53)/785
.492+.139
.412+.166+.002
.412/.58
.166/.58
.412*.58
.71*.58
98-54
22+49+43+33+36+44
60-11
78-26
80-35
88-47
98-52
22+49+52+45+41+46
library(RMark)
?test_ddl
data(dipper)    dipper.processed=process.data(dipper,groups=("sex"))    release.gof(dipper.processed)
4+19+7+12
4+17.83+7+12
40.83/42
40.83/42*14
14
(11.25+5)/(25.5 + 10.25 - 14)
365*0.6666
365*0.6666 - 75.89
5/6 * 2
5/6 * 2 + 75.89
365*0.6666 -77.55667
365*0.6666 -77.55667 - 6 - 13 - 1
145.7523/2
setwd('/Users/KSauby/Documents/Projects/ACSampling_project/code/Manuscript/better_inclusion_probability')
RACS.newyHT.spatial.data %>%#
dplyr::select(#
	median_m,#
	max_m,#
	min_m,#
	mean_unique_m,#
	median_unique_m,#
	max_unique_m,#
	min_unique_m,#
	MoransI,#
	semivar_nugget,#
	partial_sill,#
	range#
) %>%#
corrgram(upper.panel=panel.cor)
setwd('/Users/KSauby/Documents/Projects/ACSampling_project')
library(ProjectTemplate)#
#
# when working on a Windows computer#
# setwd("C:/Users/KSauby/Dropbox/gradschool/Research/Projects/sampling")#
#
# load project#
load.project()
setwd('/Users/KSauby/Documents/Projects/ACSampling_project/code/Manuscript/better_inclusion_probability')
RACS.newyHT.spatial.data %>%#
dplyr::select(#
	median_m,#
	max_m,#
	min_m,#
	mean_unique_m,#
	median_unique_m,#
	max_unique_m,#
	min_unique_m,#
	MoransI,#
	semivar_nugget,#
	partial_sill,#
	range#
) %>%#
corrgram(upper.panel=panel.cor)
library(corrgram)
setwd('/Users/KSauby/Documents/Projects/ACSampling_project/code/Manuscript/better_inclusion_probability')
RACS.newyHT.spatial.data %>%#
dplyr::select(#
	median_m,#
	max_m,#
	min_m,#
	mean_unique_m,#
	median_unique_m,#
	max_unique_m,#
	min_unique_m,#
	MoransI,#
	semivar_nugget,#
	partial_sill,#
	range#
) %>%#
corrgram(upper.panel=panel.cor)
setwd('/Users/KSauby/Documents/Projects/ACSampling_project/code/Manuscript/better_inclusion_probability')
RACS.newyHT.spatial.data %>%#
dplyr::select(#
	mean_unique_m,#
	MoransI,#
	semivar_nugget,#
	partial_sill#
) %>%#
corrgram(upper.panel=panel.cor)
setwd('/Users/KSauby/Documents/Projects/ACSampling_project/code/Manuscript/simulations')
source("1_set_variables.R")#
source("2_create_realizations.R")#
source("3_summarise_network_information.R")#
source("4_calculate_realization_summary_statistics.R")
setwd('/Users/KSauby/Documents/Projects/ACSampling_project/code/Manuscript/simulations')
simulations <- 250 # 2.211062 minutes for unrestricted, 4.866115 minutes for restricted 8 dec 15#
y_variable <- "Cactus"#
#
nsamples			<- c(20, 30, 40, 75, 100) #, , 20, 30, 40 150, 200)
setwd('/Users/KSauby/Documents/Projects/ACSampling_project/code/Manuscript/simulations')
patchdat	= patch_data
setwd('/Users/KSauby/Documents/Projects/ACSampling_project/code/Manuscript/simulations')
avar		= NULL
setwd('/Users/KSauby/Documents/Projects/ACSampling_project/code/Manuscript/simulations')
SamplingDesign	= "RACS"
setwd('/Users/KSauby/Documents/Projects/ACSampling_project/code/Manuscript/simulations')
f_max = 3,
f_max = 3
setwd('/Users/KSauby/Documents/Projects/ACSampling_project/code/Manuscript/simulations')
SpatialStatistics = TRUE
setwd('/Users/KSauby/Documents/Projects/ACSampling_project/code/Manuscript/simulations')
patch_variable = "n.networks"
setwd('/Users/KSauby/Documents/Projects/ACSampling_project/code/Manuscript/simulations')
realization_variable = "realization"
setwd('/Users/KSauby/Documents/Projects/ACS/R')
n.networks <- realization <- i <- j <- Sampling <- . <- NetworkID <- NULL#
	TIME 					<- Sys.time()#
	patchdat 				%<>% arrange_(.dots=c(#
								patch_variable,#
								realization_variable#
							))#
	var 					<- c(ovar, avar, rvar)#
	n.patches 				<- length(unique(eval(parse(text=paste(#
								"patchdat$",#
								patch_variable,#
								sep=""#
							)))))#
	nsample.length 			<- length(nsamples)#
	A 						<- vector("list", n.patches)#
	# concatenate ovar and avar variables since the same code is used to calculate the Horvitz-Thompson estimators for occupancy and abundance#
	oavar 					<- c(ovar, avar)#
	# make empty data frames; these will be cbind'd together after Horvitz-Thompson estimators are calculated#
	occ_abund_var 			<- data.frame(row.names = 1:length(c(ovar, avar))) #
	occ_abund_mean 			<- data.frame(row.names = 1:length(c(ovar, avar)))#
	Ratio 					<- data.frame(row.names = 1:length(rvar)) #
	# the names to assign the estimates#
	occ_abund_mean_names 	<- paste(ovar, avar, "_mean_observed", sep="")#
	occ_abund_var_names 	<- paste(ovar, avar, "_var_observed", sep="")#
	ratio_mean_names 		<- paste(rvar, "_ratio_mean_observed", sep="")#
	ratio_var_names 		<- paste(rvar, "_ratio_var_observed", sep="")
i=1
j=1
k=1
l=1
setwd('/Users/KSauby/Documents/Projects/ACS/R')
P 			<- patchdat %>% #
							filter(n.networks==unique(#
								eval(parse(text=paste(#
									"patchdat$",#
									patch_variable,#
									sep=""#
								)))#
							)[i])#
			N 			<- dim(P)[1]#
			n1 			<- nsamples[j]#
			A[[i]][[j]] <- list()#
			r 			<- (i - 1) * j + j#
			seeds 		<- runif(simulations)
setwd('/Users/KSauby/Documents/Projects/ACS/R')
temp_seed <- seeds[k]*100000#
				if (SamplingDesign=="ACS")#
				{#
					alldata <- createACS(#
						population=P, #
						seed=temp_seed, #
						n1=n1, #
						y_variable=y_variable#
					) %>% #
						as.data.table#
				} else if (SamplingDesign=="RACS")#
				{#
					alldata <- createRACS_flex(#
						population=P, #
						seed=temp_seed, #
						n1=n1, #
						y_variable=y_variable,#
						f_max=f_max#
					) %>% #
						as.data.table#
				} else#
				{#
					alldata <- createSRS(#
						population=P, #
						seed=temp_seed, #
						n1=n1#
					) %>% #
						as.data.table#
				}
setwd('/Users/KSauby/Documents/Projects/ACS/R')
alldata_all <- alldata#
				if (SampleEstimators == TRUE) {#
					################ SRSWOR Sampling ######################
					if (SamplingDesign!="ACS" & SamplingDesign!="RACS") {#
						# datasets to apply simple mean/variance and simple ratio estimator#
						dats <- "alldata"#
					}#
					if (SamplingDesign=="ACS" | SamplingDesign=="RACS") {#
						################ SRSWOR Data, alldata #################
						SRSWOR_data <- alldata %>% #
							filter(Sampling=="SRSWOR") %>% #
							as.data.table#
						alldata %<>% filter(Sampling!="Edge") %>% #
							as.data.table#
						# datasets to apply simple mean/variance and simple ratio estimatr#
						dats <- c("SRSWOR_data", "alldata")#
					}#
					# datasets to apply simple mean/variance and simple ratio estimator#
					# sample mean and variance applied to alldata, SRSWOR_data#
					SampleMeanVar <- list()#
					for (n in 1:length(dats)) {#
						dat <- eval(parse(text=dats[[n]]))[, oavar, with=FALSE] %>% #
							summarise_each(funs(#
								mean(., na.rm=T), #
								var(., na.rm=T)#
							))#
						setnames(#
							dat,#
							names(dat), #
							paste(names(dat), "observed", sep="_")#
						)#
						dat$Plots <- dats[n]#
						SampleMeanVar[[n]] <- dat#
					}#
					SampleMeanVar %<>% rbind.fill#
					# simple ratio estimators applied to alldata, SRSWOR_data#
					if (!(is.null(rvar))) {#
						SampleRatio <- list()#
						for (n in 1:length(dats)) {#
							SampleRatio[[n]] <- data.frame(Var1 = NA)#
							for (l in 1:length(rvar)) {#
								y = eval(parse(#
										text=paste(#
											dats[n], #
											"$", #
											rvar[l], #
											sep=""#
										)#
								))#
								x = eval(parse(#
										text = paste(#
											dats[n], #
											"$",#
											str_sub(rvar[l],-7,-1), #
											sep=""#
										)#
								))#
								m = rep(1, length(y)) # equal P(inclusion) for all#
								SampleRatio[[n]]$Var1 <- R_hat(#
									y = y,#
									x = x,#
									N = N,#
									n1 = n1,#
									m = m#
								)#
							 	SampleRatio[[n]]$Var2 = var_R_hat(#
							 		y = y, #
							 		x = x,#
									N = N, #
							 		n1 = n1, #
							 		m = m#
							 	)#
								names(SampleRatio[[n]])[(dim(SampleRatio[[n]])[2] - 1) : #
									dim(SampleRatio[[n]])[2]] <- #
									c(#
										paste(#
											rvar[l], #
											"_ratio_mean_observed", #
											sep=""#
										),#
										paste(#
											rvar[l], #
											"_ratio_var_observed", #
											sep=""#
										)#
									)#
							}#
							SampleRatio[[n]] %<>% mutate(Plots = dats[n])#
						}#
						SampleRatio <- do.call(rbind.data.frame, Ratio)#
					}#
				    SampleMeanVar %<>% merge(SampleRatio)	#
				} else#
				{#
					alldata %<>% filter(Sampling!="Edge") %>% #
						as.data.table#
				}
setwd('/Users/KSauby/Documents/Projects/ACS/R')
HT_results <- list()#
					alldata %<>% setkey(NetworkID)#
					# OCCUPANCY AND ABUNDANCE#
					# summarise data for mean calculations#
					O <- alldata %>% #
						filter(Sampling!="Edge") %>%#
						select_(.dots=c(oavar,"NetworkID","m")) %>%#
						as.data.table#
					# calculate y_HT#
					m <- O$m#
					if (y_HT_formula == "new_y_HT")#
					{#
						HT_results[[1]] <- O %>%#
						.[, oavar, with=FALSE] %>% #
							.[, lapply(#
								.SD,#
								new_y_HT,#
								N	= N, #
								n1	= n1,#
								m	= m,#
								m_threshold = m_threshold#
							)]#
					} else if (y_HT_formula == "Thompson")#
					{#
						HT_results[[1]] <- O %>%#
							select_(.dots=oavar) %>%#
							.[, lapply(#
								.SD,#
								y_HT,#
								N	= N, #
								n1	= n1,#
								m	= m#
							)]#
					}#
					names(HT_results[[1]]) <- c(occ_abund_mean_names)#
					# summarise data for variance calculations#
					O_smd <- alldata %>% #
						.[, c(#
							paste(oavar, "_network_sum", sep=""), #
							"NetworkID", #
							"m"#
						), with=FALSE] %>% #
						filter(!(is.na(NetworkID))) %>%#
						as.data.table %>%#
						.[, lapply(.SD, function(x) {x[1]}), by=NetworkID]#
					m <- O_smd$m#
					# var_y_HT#
					HT_results[[2]] <- O_smd[, paste(#
						oavar, #
						"_network_sum", #
						sep=""#
					), with=FALSE] %>%#
						.[, lapply(#
							.SD, #
							var_y_HT, #
							N 	= N, #
							n1 	= n1, #
							m	= m#
						)] # this line is slow#
					names(HT_results[[2]]) <- c(occ_abund_var_names)	#
					# RATIO DATA#
					if (!(is.null(rvar))) {#
						# RATIO#
						# summarise data for variance calculations#
						# do I want to use summarised for everything??????????????#
						mvals <- alldata %>%#
							group_by(NetworkID) %>%#
							summarise(m = m[1])#
						R_smd <- alldata %>%#
							filter(Sampling!="Edge") %>%#
							as.data.table %>%#
							.[, c(rvar, ovar, "NetworkID"), with=FALSE] %>%#
							.[, lapply(.SD, sum, na.rm=T), by=NetworkID] %>%#
							merge(mvals, by="NetworkID")#
						# summarise data for mean calculations#
						# R <- alldata %>% #
						#	filter(Sampling!="Edge") %>%#
						#	.[, c(rvar, ovar, "m"), with=FALSE]#
						HT_results[[3]] <- data.frame(Var1 = NA)#
						for (l in 1:length(rvar)) {#
							y = eval(parse(text=paste("R_smd$", rvar[l], #
								sep="")))#
							x = eval(parse(text = paste("R_smd$", #
								str_sub(rvar[l],-7,-1), sep="")))#
							HT_results[[3]]$Var1 = R_hat(#
								y = y,#
								x = x,#
								N = N, #
								n1 = n1, #
								m = R_smd$m#
							)#
						 	HT_results[[3]]$Var2 = var_R_hat(#
						 		y = y, #
						 		x = x,#
								N = N, #
						 		n1 = n1, #
						 		m = R_smd$m#
						 	)#
							names(HT_results[[3]])[ #
								(dim(HT_results[[3]])[2] - 1) : #
								dim(HT_results[[3]])[2]#
							] <- c(#
									paste(#
										rvar[l], #
										"_ratio_mean_observed", #
										sep=""#
									),#
									paste(#
										rvar[l], #
										"_ratio_var_observed", #
										sep=""#
									)#
								)#
						}#
					}#
					# merge together			#
					All_HT <- HT_results %>% #
						as.data.frame %>%#
						mutate(Plots = "Horvitz Thompson Mean (All Plots)")#
					# merge estimates#
					if (SampleEstimators == TRUE) {#
						A[[i]][[j]][[k]] = rbind.fill(SampleMeanVar, All_HT)#
					} else#
					{#
						A[[i]][[j]][[k]] <- All_HT#
					}#
				}
setwd('/Users/KSauby/Documents/Projects/ACS/R')
y_HT_formula = "Thompson"
setwd('/Users/KSauby/Documents/Projects/ACS/R')
HT_results <- list()#
					alldata %<>% setkey(NetworkID)#
					# OCCUPANCY AND ABUNDANCE#
					# summarise data for mean calculations#
					O <- alldata %>% #
						filter(Sampling!="Edge") %>%#
						select_(.dots=c(oavar,"NetworkID","m")) %>%#
						as.data.table#
					# calculate y_HT#
					m <- O$m#
					if (y_HT_formula == "new_y_HT")
}
setwd('/Users/KSauby/Documents/Projects/ACS/R')
HT_results <- list()#
					alldata %<>% setkey(NetworkID)#
					# OCCUPANCY AND ABUNDANCE#
					# summarise data for mean calculations#
					O <- alldata %>% #
						filter(Sampling!="Edge") %>%#
						select_(.dots=c(oavar,"NetworkID","m")) %>%#
						as.data.table#
					# calculate y_HT#
					m <- O$m#
					if (y_HT_formula == "new_y_HT")
}
y_HT_formula = "Thompson"
setwd('/Users/KSauby/Documents/Projects/ACS/R')
HT_results <- list()#
					alldata %<>% setkey(NetworkID)#
					# OCCUPANCY AND ABUNDANCE#
					# summarise data for mean calculations#
					O <- alldata %>% #
						filter(Sampling!="Edge") %>%#
						select_(.dots=c(oavar,"NetworkID","m")) %>%#
						as.data.table
setwd('/Users/KSauby/Documents/Projects/ACS/R')
m <- O$m
setwd('/Users/KSauby/Documents/Projects/ACS/R')
if (y_HT_formula == "new_y_HT")#
					{#
						HT_results[[1]] <- O %>%#
						.[, oavar, with=FALSE] %>% #
							.[, lapply(#
								.SD,#
								new_y_HT,#
								N	= N, #
								n1	= n1,#
								m	= m,#
								m_threshold = m_threshold#
							)]#
					} else if (y_HT_formula == "Thompson")#
					{#
						HT_results[[1]] <- O %>%#
							select_(.dots=oavar) %>%#
							.[, lapply(#
								.SD,#
								y_HT,#
								N	= N, #
								n1	= n1,#
								m	= m#
							)]#
					}#
					names(HT_results[[1]]) <- c(occ_abund_mean_names)
setwd('/Users/KSauby/Documents/Projects/ACS/R')
O_smd <- alldata %>% #
						.[, c(#
							paste(oavar, "_network_sum", sep=""), #
							"NetworkID", #
							"m"#
						), with=FALSE] %>% #
						filter(!(is.na(NetworkID))) %>%#
						as.data.table %>%#
						.[, lapply(.SD, function(x) {x[1]}), by=NetworkID]#
					m <- O_smd$m#
					# var_y_HT#
					HT_results[[2]] <- O_smd[, paste(#
						oavar, #
						"_network_sum", #
						sep=""#
					), with=FALSE] %>%#
						.[, lapply(#
							.SD, #
							var_y_HT, #
							N 	= N, #
							n1 	= n1, #
							m	= m#
						)] # this line is slow#
					names(HT_results[[2]]) <- c(occ_abund_var_names)	#
					# RATIO DATA#
					if (!(is.null(rvar))) {#
						# RATIO#
						# summarise data for variance calculations#
						# do I want to use summarised for everything??????????????#
						mvals <- alldata %>%#
							group_by(NetworkID) %>%#
							summarise(m = m[1])#
						R_smd <- alldata %>%#
							filter(Sampling!="Edge") %>%#
							as.data.table %>%#
							.[, c(rvar, ovar, "NetworkID"), with=FALSE] %>%#
							.[, lapply(.SD, sum, na.rm=T), by=NetworkID] %>%#
							merge(mvals, by="NetworkID")#
						# summarise data for mean calculations#
						# R <- alldata %>% #
						#	filter(Sampling!="Edge") %>%#
						#	.[, c(rvar, ovar, "m"), with=FALSE]#
						HT_results[[3]] <- data.frame(Var1 = NA)#
						for (l in 1:length(rvar)) {#
							y = eval(parse(text=paste("R_smd$", rvar[l], #
								sep="")))#
							x = eval(parse(text = paste("R_smd$", #
								str_sub(rvar[l],-7,-1), sep="")))#
							HT_results[[3]]$Var1 = R_hat(#
								y = y,#
								x = x,#
								N = N, #
								n1 = n1, #
								m = R_smd$m#
							)#
						 	HT_results[[3]]$Var2 = var_R_hat(#
						 		y = y, #
						 		x = x,#
								N = N, #
						 		n1 = n1, #
						 		m = R_smd$m#
						 	)#
							names(HT_results[[3]])[ #
								(dim(HT_results[[3]])[2] - 1) : #
								dim(HT_results[[3]])[2]#
							] <- c(#
									paste(#
										rvar[l], #
										"_ratio_mean_observed", #
										sep=""#
									),#
									paste(#
										rvar[l], #
										"_ratio_var_observed", #
										sep=""#
									)#
								)#
						}#
					}#
					# merge together			#
					All_HT <- HT_results %>% #
						as.data.frame %>%#
						mutate(Plots = "Horvitz Thompson Mean (All Plots)")#
					# merge estimates#
					if (SampleEstimators == TRUE) {#
						A[[i]][[j]][[k]] = rbind.fill(SampleMeanVar, All_HT)#
					} else#
					{#
						A[[i]][[j]][[k]] <- All_HT#
					}#
				} else#
				{#
					A[[i]][[j]][[k]] <- SampleMeanVar#
				}
setwd('/Users/KSauby/Documents/Projects/ACS/R')
,#
	SampleEstimators = FALSE
setwd('/Users/KSauby/Documents/Projects/ACS/R')
# summarise data for variance calculations#
					O_smd <- alldata %>% #
						.[, c(#
							paste(oavar, "_network_sum", sep=""), #
							"NetworkID", #
							"m"#
						), with=FALSE] %>% #
						filter(!(is.na(NetworkID))) %>%#
						as.data.table %>%#
						.[, lapply(.SD, function(x) {x[1]}), by=NetworkID]#
					m <- O_smd$m#
					# var_y_HT#
					HT_results[[2]] <- O_smd[, paste(#
						oavar, #
						"_network_sum", #
						sep=""#
					), with=FALSE] %>%#
						.[, lapply(#
							.SD, #
							var_y_HT, #
							N 	= N, #
							n1 	= n1, #
							m	= m#
						)] # this line is slow#
					names(HT_results[[2]]) <- c(occ_abund_var_names)	#
					# RATIO DATA#
					if (!(is.null(rvar))) {#
						# RATIO#
						# summarise data for variance calculations#
						# do I want to use summarised for everything??????????????#
						mvals <- alldata %>%#
							group_by(NetworkID) %>%#
							summarise(m = m[1])#
						R_smd <- alldata %>%#
							filter(Sampling!="Edge") %>%#
							as.data.table %>%#
							.[, c(rvar, ovar, "NetworkID"), with=FALSE] %>%#
							.[, lapply(.SD, sum, na.rm=T), by=NetworkID] %>%#
							merge(mvals, by="NetworkID")#
						# summarise data for mean calculations#
						# R <- alldata %>% #
						#	filter(Sampling!="Edge") %>%#
						#	.[, c(rvar, ovar, "m"), with=FALSE]#
						HT_results[[3]] <- data.frame(Var1 = NA)#
						for (l in 1:length(rvar)) {#
							y = eval(parse(text=paste("R_smd$", rvar[l], #
								sep="")))#
							x = eval(parse(text = paste("R_smd$", #
								str_sub(rvar[l],-7,-1), sep="")))#
							HT_results[[3]]$Var1 = R_hat(#
								y = y,#
								x = x,#
								N = N, #
								n1 = n1, #
								m = R_smd$m#
							)#
						 	HT_results[[3]]$Var2 = var_R_hat(#
						 		y = y, #
						 		x = x,#
								N = N, #
						 		n1 = n1, #
						 		m = R_smd$m#
						 	)#
							names(HT_results[[3]])[ #
								(dim(HT_results[[3]])[2] - 1) : #
								dim(HT_results[[3]])[2]#
							] <- c(#
									paste(#
										rvar[l], #
										"_ratio_mean_observed", #
										sep=""#
									),#
									paste(#
										rvar[l], #
										"_ratio_var_observed", #
										sep=""#
									)#
								)#
						}#
					}#
					# merge together			#
					All_HT <- HT_results %>% #
						as.data.frame %>%#
						mutate(Plots = "Horvitz Thompson Mean (All Plots)")#
					# merge estimates#
					if (SampleEstimators == TRUE) {#
						A[[i]][[j]][[k]] = rbind.fill(SampleMeanVar, All_HT)#
					} else#
					{#
						A[[i]][[j]][[k]] <- All_HT#
					}#
				} else#
				{#
					A[[i]][[j]][[k]] <- SampleMeanVar#
				}
setwd('/Users/KSauby/Documents/Projects/ACS/R')
A[[i]][[j]][[k]]$simulation 		= k#
				A[[i]][[j]][[k]]$seed 				= temp_seed#
				A[[i]][[j]][[k]]$N.ACS.plots 		= dim(alldata_all)[1] - n1#
				A[[i]][[j]][[k]]$N.Total.plots 		= dim(alldata_all)[1]#
				A[[i]][[j]][[k]]$realization_variable = eval(parse(text=paste(#
														"P$",#
														realization_variable,#
														sep=""#
													)))[1]
setwd('/Users/KSauby/Documents/Projects/ACS/R')
A[[i]][[j]][[k]]$patch_variable		= eval(parse(text=paste(#
														"P$",#
														patch_variable,#
														sep=""#
													)))[1]#
				A[[i]][[j]][[k]]$N.SRSWOR.plots 	= n1
setwd('/Users/KSauby/Documents/Projects/ACS/R')
sum(alldata_all$Cactus) > 0
nsamples=100
setwd('/Users/KSauby/Documents/Projects/ACS/R')
n.networks <- realization <- i <- j <- Sampling <- . <- NetworkID <- NULL#
	TIME 					<- Sys.time()#
	patchdat 				%<>% arrange_(.dots=c(#
								patch_variable,#
								realization_variable#
							))#
	var 					<- c(ovar, avar, rvar)#
	n.patches 				<- length(unique(eval(parse(text=paste(#
								"patchdat$",#
								patch_variable,#
								sep=""#
							)))))#
	nsample.length 			<- length(nsamples)#
	A 						<- vector("list", n.patches)#
	# concatenate ovar and avar variables since the same code is used to calculate the Horvitz-Thompson estimators for occupancy and abundance#
	oavar 					<- c(ovar, avar)#
	# make empty data frames; these will be cbind'd together after Horvitz-Thompson estimators are calculated#
	occ_abund_var 			<- data.frame(row.names = 1:length(c(ovar, avar))) #
	occ_abund_mean 			<- data.frame(row.names = 1:length(c(ovar, avar)))#
	Ratio 					<- data.frame(row.names = 1:length(rvar)) #
	# the names to assign the estimates#
	occ_abund_mean_names 	<- paste(ovar, avar, "_mean_observed", sep="")#
	occ_abund_var_names 	<- paste(ovar, avar, "_var_observed", sep="")#
	ratio_mean_names 		<- paste(rvar, "_ratio_mean_observed", sep="")#
	ratio_var_names 		<- paste(rvar, "_ratio_var_observed", sep="")
i=1
j=1
k=1
setwd('/Users/KSauby/Documents/Projects/ACS/R')
P 			<- patchdat %>% #
							filter(n.networks==unique(#
								eval(parse(text=paste(#
									"patchdat$",#
									patch_variable,#
									sep=""#
								)))#
							)[i])#
			N 			<- dim(P)[1]#
			n1 			<- nsamples[j]#
			A[[i]][[j]] <- list()#
			r 			<- (i - 1) * j + j#
			seeds 		<- runif(simulations)
setwd('/Users/KSauby/Documents/Projects/ACS/R')
temp_seed <- seeds[k]*100000#
				if (SamplingDesign=="ACS")#
				{#
					alldata <- createACS(#
						population=P, #
						seed=temp_seed, #
						n1=n1, #
						y_variable=y_variable#
					) %>% #
						as.data.table#
				} else if (SamplingDesign=="RACS")#
				{#
					alldata <- createRACS_flex(#
						population=P, #
						seed=temp_seed, #
						n1=n1, #
						y_variable=y_variable,#
						f_max=f_max#
					) %>% #
						as.data.table#
				} else#
				{#
					alldata <- createSRS(#
						population=P, #
						seed=temp_seed, #
						n1=n1#
					) %>% #
						as.data.table#
				}#
				alldata_all <- alldata#
				if (SampleEstimators == TRUE) {#
					################ SRSWOR Sampling ######################
					if (SamplingDesign!="ACS" & SamplingDesign!="RACS") {#
						# datasets to apply simple mean/variance and simple ratio estimator#
						dats <- "alldata"#
					}#
					if (SamplingDesign=="ACS" | SamplingDesign=="RACS") {#
						################ SRSWOR Data, alldata #################
						SRSWOR_data <- alldata %>% #
							filter(Sampling=="SRSWOR") %>% #
							as.data.table#
						alldata %<>% filter(Sampling!="Edge") %>% #
							as.data.table#
						# datasets to apply simple mean/variance and simple ratio estimatr#
						dats <- c("SRSWOR_data", "alldata")#
					}#
					# datasets to apply simple mean/variance and simple ratio estimator#
					# sample mean and variance applied to alldata, SRSWOR_data#
					SampleMeanVar <- list()#
					for (n in 1:length(dats)) {#
						dat <- eval(parse(text=dats[[n]]))[, oavar, with=FALSE] %>% #
							summarise_each(funs(#
								mean(., na.rm=T), #
								var(., na.rm=T)#
							))#
						setnames(#
							dat,#
							names(dat), #
							paste(names(dat), "observed", sep="_")#
						)#
						dat$Plots <- dats[n]#
						SampleMeanVar[[n]] <- dat#
					}#
					SampleMeanVar %<>% rbind.fill#
					# simple ratio estimators applied to alldata, SRSWOR_data#
					if (!(is.null(rvar))) {#
						SampleRatio <- list()#
						for (n in 1:length(dats)) {#
							SampleRatio[[n]] <- data.frame(Var1 = NA)#
							for (l in 1:length(rvar)) {#
								y = eval(parse(#
										text=paste(#
											dats[n], #
											"$", #
											rvar[l], #
											sep=""#
										)#
								))#
								x = eval(parse(#
										text = paste(#
											dats[n], #
											"$",#
											str_sub(rvar[l],-7,-1), #
											sep=""#
										)#
								))#
								m = rep(1, length(y)) # equal P(inclusion) for all#
								SampleRatio[[n]]$Var1 <- R_hat(#
									y = y,#
									x = x,#
									N = N,#
									n1 = n1,#
									m = m#
								)#
							 	SampleRatio[[n]]$Var2 = var_R_hat(#
							 		y = y, #
							 		x = x,#
									N = N, #
							 		n1 = n1, #
							 		m = m#
							 	)#
								names(SampleRatio[[n]])[(dim(SampleRatio[[n]])[2] - 1) : #
									dim(SampleRatio[[n]])[2]] <- #
									c(#
										paste(#
											rvar[l], #
											"_ratio_mean_observed", #
											sep=""#
										),#
										paste(#
											rvar[l], #
											"_ratio_var_observed", #
											sep=""#
										)#
									)#
							}#
							SampleRatio[[n]] %<>% mutate(Plots = dats[n])#
						}#
						SampleRatio <- do.call(rbind.data.frame, Ratio)#
					}#
				    SampleMeanVar %<>% merge(SampleRatio)	#
				} else#
				{#
					alldata %<>% filter(Sampling!="Edge") %>% #
						as.data.table#
				}#
				if (SamplingDesign=="ACS" | SamplingDesign=="RACS") {#
					################ HORVITZ-THOMPSON ESTIMATORS ################
					HT_results <- list()#
					alldata %<>% setkey(NetworkID)#
					# OCCUPANCY AND ABUNDANCE#
					# summarise data for mean calculations#
					O <- alldata %>% #
						filter(Sampling!="Edge") %>%#
						select_(.dots=c(oavar,"NetworkID","m")) %>%#
						as.data.table#
					# calculate y_HT#
					m <- O$m#
					if (y_HT_formula == "new_y_HT")#
					{#
						HT_results[[1]] <- O %>%#
						.[, oavar, with=FALSE] %>% #
							.[, lapply(#
								.SD,#
								new_y_HT,#
								N	= N, #
								n1	= n1,#
								m	= m,#
								m_threshold = m_threshold#
							)]#
					} else if (y_HT_formula == "Thompson")#
					{#
						HT_results[[1]] <- O %>%#
							select_(.dots=oavar) %>%#
							.[, lapply(#
								.SD,#
								y_HT,#
								N	= N, #
								n1	= n1,#
								m	= m#
							)]#
					}#
					names(HT_results[[1]]) <- c(occ_abund_mean_names)#
					# summarise data for variance calculations#
					O_smd <- alldata %>% #
						.[, c(#
							paste(oavar, "_network_sum", sep=""), #
							"NetworkID", #
							"m"#
						), with=FALSE] %>% #
						filter(!(is.na(NetworkID))) %>%#
						as.data.table %>%#
						.[, lapply(.SD, function(x) {x[1]}), by=NetworkID]#
					m <- O_smd$m#
					# var_y_HT#
					HT_results[[2]] <- O_smd[, paste(#
						oavar, #
						"_network_sum", #
						sep=""#
					), with=FALSE] %>%#
						.[, lapply(#
							.SD, #
							var_y_HT, #
							N 	= N, #
							n1 	= n1, #
							m	= m#
						)] # this line is slow#
					names(HT_results[[2]]) <- c(occ_abund_var_names)	#
					# RATIO DATA#
					if (!(is.null(rvar))) {#
						# RATIO#
						# summarise data for variance calculations#
						# do I want to use summarised for everything??????????????#
						mvals <- alldata %>%#
							group_by(NetworkID) %>%#
							summarise(m = m[1])#
						R_smd <- alldata %>%#
							filter(Sampling!="Edge") %>%#
							as.data.table %>%#
							.[, c(rvar, ovar, "NetworkID"), with=FALSE] %>%#
							.[, lapply(.SD, sum, na.rm=T), by=NetworkID] %>%#
							merge(mvals, by="NetworkID")#
						# summarise data for mean calculations#
						# R <- alldata %>% #
						#	filter(Sampling!="Edge") %>%#
						#	.[, c(rvar, ovar, "m"), with=FALSE]#
						HT_results[[3]] <- data.frame(Var1 = NA)#
						for (l in 1:length(rvar)) {#
							y = eval(parse(text=paste("R_smd$", rvar[l], #
								sep="")))#
							x = eval(parse(text = paste("R_smd$", #
								str_sub(rvar[l],-7,-1), sep="")))#
							HT_results[[3]]$Var1 = R_hat(#
								y = y,#
								x = x,#
								N = N, #
								n1 = n1, #
								m = R_smd$m#
							)#
						 	HT_results[[3]]$Var2 = var_R_hat(#
						 		y = y, #
						 		x = x,#
								N = N, #
						 		n1 = n1, #
						 		m = R_smd$m#
						 	)#
							names(HT_results[[3]])[ #
								(dim(HT_results[[3]])[2] - 1) : #
								dim(HT_results[[3]])[2]#
							] <- c(#
									paste(#
										rvar[l], #
										"_ratio_mean_observed", #
										sep=""#
									),#
									paste(#
										rvar[l], #
										"_ratio_var_observed", #
										sep=""#
									)#
								)#
						}#
					}#
					# merge together			#
					All_HT <- HT_results %>% #
						as.data.frame %>%#
						mutate(Plots = "Horvitz Thompson Mean (All Plots)")#
					# merge estimates#
					if (SampleEstimators == TRUE) {#
						A[[i]][[j]][[k]] = rbind.fill(SampleMeanVar, All_HT)#
					} else#
					{#
						A[[i]][[j]][[k]] <- All_HT#
					}#
				} else#
				{#
					A[[i]][[j]][[k]] <- SampleMeanVar#
				}
setwd('/Users/KSauby/Documents/Projects/ACS/R')
# add other information#
				A[[i]][[j]][[k]]$simulation 		= k#
				A[[i]][[j]][[k]]$seed 				= temp_seed#
				A[[i]][[j]][[k]]$N.ACS.plots 		= dim(alldata_all)[1] - n1#
				A[[i]][[j]][[k]]$N.Total.plots 		= dim(alldata_all)[1]#
				A[[i]][[j]][[k]]$realization_variable = eval(parse(text=paste(#
														"P$",#
														realization_variable,#
														sep=""#
													)))[1]#
				A[[i]][[j]][[k]]$patch_variable		= eval(parse(text=paste(#
														"P$",#
														patch_variable,#
														sep=""#
													)))[1]#
				A[[i]][[j]][[k]]$N.SRSWOR.plots 	= n1
setwd('/Users/KSauby/Documents/Projects/ACS/R')
sum(alldata_all$Cactus) > 0
cntr <- c('A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J')#
UNO <- c(0, 1, 1, 1, 1, 1, 1, 1, 1, 1)#
APEC <- c(0, 0, 0, 0, 1, 1, 1, 0, 0, 0)#
ASEAN <- c(0, 0, 0, 0, 1, 1, 0, 0, 0, 0)#
data <- data.frame(cntr, UNO, APEC, ASEAN)
d <- structure(list(cntr = structure(1:10, .Label = c("A", "B", "C", #
"D", "E", "F", "G", "H", "I", "J"), class = "factor"), UNO = c(0L, #
1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L), APEC = c(0L, 0L, 0L, 0L, #
1L, 1L, 1L, 0L, 0L, 0L), ASEAN = c(0L, 0L, 0L, 0L, 1L, 1L, 0L, #
0L, 0L, 0L)), .Names = c("cntr", "UNO", "APEC", "ASEAN"), class = "data.frame", row.names = c(NA, #
-10L))
d
str(d)
m <- as.matrix(d[,-1])#
  m2 <- m %*% t(m)
m
m3
m2
head(alldata_all)
setwd('/Users/KSauby/Documents/Projects/ACS/R')
alldata_all %>% dcast(x ~ NetworkID)
setwd('/Users/KSauby/Documents/Projects/ACS/R')
alldata_all %>% dcast(NetworkID~x)
setwd('/Users/KSauby/Documents/Projects/ACS/R')
alldata_all$ID <- seq(1,length(alldata_all))
setwd('/Users/KSauby/Documents/Projects/ACS/R')
alldata_all$ID <- seq(1,dim(alldata_all)[1,])
setwd('/Users/KSauby/Documents/Projects/ACS/R')
alldata_all$ID <- seq(1,dim(alldata_all)[1])
alldata_all$ID
setwd('/Users/KSauby/Documents/Projects/ACS/R')
alldata_all %>% dcast(NetworkID~ID)
setwd('/Users/KSauby/Documents/Projects/ACS/R')
alldata_all %>% dcast(NetworkID~1)
setwd('/Users/KSauby/Documents/Projects/ACS/R')
temp[is.na(temp), ]
setwd('/Users/KSauby/Documents/Projects/ACS/R')
temp <- alldata_all %>% dcast(NetworkID~ID)#
							temp[is.na(temp), ]
setwd('/Users/KSauby/Documents/Projects/ACS/R')
temp <- alldata_all %>% dcast(NetworkID~ID)#
							temp[is.na(temp), ] <- 0
setwd('/Users/KSauby/Documents/Projects/ACS/R')
temp[is.na(temp)] <- 0
temp
setwd('/Users/KSauby/Documents/Projects/ACS/R')
m2 <- temp %*% t(temp)
setwd('/Users/KSauby/Documents/Projects/ACS/R')
temp[is.na(temp)] <- 0#
							 m2 <- temp %*% t(temp)
setwd('/Users/KSauby/Documents/Projects/ACS/R')
temp <- alldata_all %>% dcast(NetworkID~ID)#
							temp[is.na(temp)] <- 0#
							temp[temp > 0] <- 1#
							 m2 <- temp %*% t(temp)
dim(temp)
?tcrossprod
setwd('/Users/KSauby/Documents/Projects/ACS/R')
m2 <- tcrossprod(temp)
temp
setwd('/Users/KSauby/Documents/Projects/ACS/R')
temp <- alldata_all %>% dcast(ID~NetworkID)#
							temp[is.na(temp)] <- 0#
							temp[temp > 0] <- 1#
							 m2 <- tcrossprod(temp)
temp
str(temp)
setwd('/Users/KSauby/Documents/Projects/ACS/R')
temp <- alldata_all %>% dcast(ID~NetworkID) %>% dplyr::select(-c(ID, NA))#
							temp[is.na(temp)] <- 0#
							temp[temp > 0] <- 1#
							 m2 <- tcrossprod(temp)
temp
d
m
setwd('/Users/KSauby/Documents/Projects/ACS/R')
as.matrix(temp)
setwd('/Users/KSauby/Documents/Projects/ACS/R')
m2 <- tcrossprod(as.matrix(temp))
m2
setwd('/Users/KSauby/Documents/Projects/ACS/R')
diag(m2) <- 0
setwd('/Users/KSauby/Documents/Projects/ACS/R')
write.csv(m2, "temp.csv")
alldata_all %>% dplyr::select(NetworkID)
alldata_all %>% dplyr::select(NetworkID) %$% unique(NetworkID)
alldata_all %>% dplyr::select(NetworkID) arrange(NetworkID) %$% unique(NetworkID)
alldata_all %>% dplyr::select(NetworkID) %>% arrange(NetworkID) %$% unique(NetworkID)
table(alldata_all$NetworkID)
dim(alldata_all)
setwd('/Users/KSauby/Documents/Projects/ACS/R')
alldata_all$ID <- seq(1,dim(alldata_all)[1])
alldata_all$ID
setwd('/Users/KSauby/Documents/Projects/ACS/R')
alldata_all %>% dcast(ID~NetworkID) %>% dplyr::select(-c(ID, NA))
head(alldata_all)
alldata_all %>% filter(is.na(NetworkID))
setwd('/Users/KSauby/Documents/Projects/ACS/R')
temp <- alldata_all %>% dcast(ID~NetworkID) %>% dplyr::select(-c(ID, NA)) %>% filter(!(is.na(NetworkID)))
setwd('/Users/KSauby/Documents/Projects/ACS/R')
temp <- alldata_all %>%  %>% filter(!(is.na(NetworkID))) %>%  dcast(ID~NetworkID) %>% dplyr::select(-c(ID, NA))
setwd('/Users/KSauby/Documents/Projects/ACS/R')
temp <- alldata_all  %>% filter(!(is.na(NetworkID))) %>%  dcast(ID~NetworkID) %>% dplyr::select(-c(ID, NA))
temp
setwd('/Users/KSauby/Documents/Projects/ACS/R')
temp[is.na(temp)] <- 0#
							temp[temp > 0] <- 1#
							 m2 <- tcrossprod(as.matrix(temp))#
						     diag(m2) <- 0
temp
setwd('/Users/KSauby/Documents/Projects/ACS/R')
write.csv(m2, "temp.csv")
getwd()
table(alldata_all$NetworkID)
setwd('/Users/KSauby/Documents/Projects/ACS/R')
coordinates(alldata_all) = ~ x+y
setwd('/Users/KSauby/Documents/Projects/ACS/R')
data_dist <- as.matrix(#
								dist(cbind(alldata_all$x, alldata_all$y)))#
							data_dist <- 1/data_dist#
							diag(data_dist) <- 0
setwd('/Users/KSauby/Documents/Projects/ACS/R')
data_dist
setwd('/Users/KSauby/Documents/Projects/ACS/R')
temp <- alldata_all %>% filter(!(is.na(NetworkID)))#
							data_dist <- as.matrix(#
								dist(cbind(temp$x, temp$y)))#
							data_dist <- 1/data_dist#
							diag(data_dist) <- 0#
							A[[i]][[j]][[k]]$MoransI <- Moran.I(#
								temp$Cactus, data_dist#
							)$observed
head(alldata_all)
alldata_all %<>% as.data.frame
head(alldata_all)
str(alldata_all)
setwd('/Users/KSauby/Documents/Projects/ACS/R')
temp <- alldata_all %>% filter(!(is.na(NetworkID)))
setwd('/Users/KSauby/Documents/Projects/ACS/R')
coordinates(alldata_all) = ~ x+y#
							data_dist <- as.matrix(#
								dist(cbind(temp$x, temp$y)))#
							data_dist <- 1/data_dist#
							diag(data_dist) <- 0#
							A[[i]][[j]][[k]]$MoransI <- Moran.I(#
								temp$Cactus, data_dist#
							)$observed
A[[i]][[j]][[k]]$MoransI
setwd('/Users/KSauby/Documents/Projects/ACS/R')
temp <- alldata_all  %>% #
							filter(!(is.na(NetworkID))) %>%  #
							dcast(ID~NetworkID) %>% #
							dplyr::select(-c(ID, NA))#
							temp[is.na(temp)] <- 0#
							temp[temp > 0] <- 1#
							 m2 <- tcrossprod(as.matrix(temp))#
						     diag(m2) <- 0
setwd('/Users/KSauby/Documents/Projects/ACS/R')
temp <- alldata_all %>%#
							as.data.frame %>% #
							filter(!(is.na(NetworkID))) %>%  #
							dcast(ID~NetworkID) %>% #
							dplyr::select(-c(ID, NA))#
							temp[is.na(temp)] <- 0#
							temp[temp > 0] <- 1#
							 m2 <- tcrossprod(as.matrix(temp))#
						     diag(m2) <- 0
setwd('/Users/KSauby/Documents/Projects/ACS/R')
alldata_all %>%#
							as.data.frame %>%
str
setwd('/Users/KSauby/Documents/Projects/ACS/R')
alldata_all %>%#
							as.data.frame %>% #
							filter(!(is.na(NetworkID))) %>%
str
setwd('/Users/KSauby/Documents/Projects/ACS/R')
temp <- alldata_all %>%#
							as.data.frame %>% #
							filter(!(is.na(NetworkID)))#
							temp$ID <- seq(1,dim(temp)[1])#
							temp %<>%#
							dcast(ID~NetworkID) %>% #
							dplyr::select(-c(ID, NA))#
							temp[is.na(temp)] <- 0#
							temp[temp > 0] <- 1#
							 m2 <- tcrossprod(as.matrix(temp))#
						     diag(m2) <- 0
m2
setwd('/Users/KSauby/Documents/Projects/ACS/R')
A[[i]][[j]][[k]]$MoransI <- Moran.I(#
 								temp$Cactus, m2#
 							)$observed
setwd('/Users/KSauby/Documents/Projects/ACS/R')
temp$Cactus
setwd('/Users/KSauby/Documents/Projects/ACS/R')
temp <- alldata_all %>%#
							as.data.frame %>% #
							filter(!(is.na(NetworkID)))#
							temp$ID <- seq(1,dim(temp)[1])#
							temp2 <- temp %>%#
							dcast(ID~NetworkID) %>% #
							dplyr::select(-c(ID, NA))#
							temp[is.na(temp)] <- 0#
							temp[temp > 0] <- 1#
							 m2 <- tcrossprod(as.matrix(temp))#
						     diag(m2) <- 0#
 							A[[i]][[j]][[k]]$MoransI <- Moran.I(#
 								temp$Cactus, m2#
 							)$observed
setwd('/Users/KSauby/Documents/Projects/ACS/R')
temp <- alldata_all %>%#
							as.data.frame %>% #
							filter(!(is.na(NetworkID)))#
							temp$ID <- seq(1,dim(temp)[1])
setwd('/Users/KSauby/Documents/Projects/ACS/R')
temp <- alldata_all %>%#
							as.data.frame %>% #
							filter(!(is.na(NetworkID)))#
							temp$ID <- seq(1,dim(temp)[1])#
							temp2 <- temp %>%#
							dcast(ID~NetworkID) %>% #
							dplyr::select(-c(ID, NA))#
							temp2[is.na(temp2)] <- 0#
							temp2[temp2 > 0] <- 1#
							 m2 <- tcrossprod(as.matrix(temp2))#
						     diag(m2) <- 0
setwd('/Users/KSauby/Documents/Projects/ACS/R')
Moran.I(#
 								temp$Cactus, m2#
 							)$observed

setwd('/Users/KSauby/Documents')
(85.5 - mean(Exam2$Exam.2..3398477.))/sd(Exam2$Exam.2..3398477.)*10 + 83
(69.5 - mean(Exam2$Exam.2..3398477.))/sd(Exam2$Exam.2..3398477.)
(69.5 - mean(Exam2$Exam.2..3398477.))/sd(Exam2$Exam.2..3398477.)*10 + 83
setwd('/Users/KSauby/Documents')
library(magrittr)#
library(dplyr)#
library(ggplot2)#
#
Exam2 <- read.csv(file = "2018-05-07T0855_Grades-PCB3601C.csv", header = TRUE, stringsAsFactors = FALSE)
head(Exam2)
setwd('/Users/KSauby/Documents')
library(magrittr)#
library(dplyr)#
library(ggplot2)#
#
Exam2 <- read.csv(file = "2018-05-07T0855_Grades-PCB3601C.csv", header = TRUE, stringsAsFactors = FALSE)
head(Exam2)
setwd('/Users/KSauby/Documents')
Exam2 %<>% #
	filter(Final.Exam..3510129.>0) %>%#
	mutate(#
		mean_Exam1 = mean(Final.Exam..3510129.),#
		sd_Exam1 = sd(Final.Exam..3510129.),#
		zvar = #
			(Exam.2..3398477. - mean(Final.Exam..3510129.)) / sd(Final.Exam..3510129.),#
		zvar_back = zvar*sd(Final.Exam..3510129.) + mean(Final.Exam..3510129.),#
		curved_Exam1 = zvar*10 + 83#
	) %>%#
	group_by(Student) %>%#
	mutate(`Final Exam (3510129)` = max(Final.Exam..3510129., curved_Exam1))
head(Exam2)
setwd('/Users/KSauby/Documents')
Exam2 %<>% #
	filter(Final.Exam..3510129.>0) %>%#
	mutate(#
		mean_Exam1 = mean(Final.Exam..3510129.),#
		sd_Exam1 = sd(Final.Exam..3510129.),#
		zvar = #
			(Exam.2..3398477. - mean(Final.Exam..3510129.)) / sd(Final.Exam..3510129.),#
		zvar_back = zvar*sd(Final.Exam..3510129.) + mean(Final.Exam..3510129.),#
		curved_Exam1 = zvar*10 + 83#
	) %>%#
	group_by(Student) %>%#
	mutate(`Final Exam (3510129)` = max(Final.Exam..3510129., curved_Exam1)) %>%#
	dplyr::select(Student, ID, SIS.User.ID, SIS.Login.ID, Section, mean_Exam1, sd_Exam1, zvar, zvar_back, curved_Exam1, `Final Exam (3510129)`)
Exam2
Exam2 %>% as.data.frame
setwd('/Users/KSauby/Documents')
Exam2 %<>% #
	filter(Final.Exam..3510129.>0) %>%#
	mutate(#
		mean_Exam1 = mean(Final.Exam..3510129.),#
		sd_Exam1 = sd(Final.Exam..3510129.),#
		zvar = #
			(Final.Exam..3510129. - mean(Final.Exam..3510129.)) / sd(Final.Exam..3510129.),#
		zvar_back = zvar*sd(Final.Exam..3510129.) + mean(Final.Exam..3510129.),#
		curved_Exam1 = zvar*10 + 83#
	) %>%#
	group_by(Student) %>%#
	mutate(`Final Exam (3510129)` = max(Final.Exam..3510129., curved_Exam1)) %>%#
	dplyr::select(Student, ID, SIS.User.ID, SIS.Login.ID, Section, mean_Exam1, sd_Exam1, zvar, zvar_back, curved_Exam1, `Final Exam (3510129)`)
setwd('/Users/KSauby/Documents')
Exam2 <- read.csv(file = "2018-05-07T0855_Grades-PCB3601C.csv", header = TRUE, stringsAsFactors = FALSE)#
#
Exam2 %<>% #
	filter(Final.Exam..3510129.>0) %>%#
	mutate(#
		mean_Exam1 = mean(Final.Exam..3510129.),#
		sd_Exam1 = sd(Final.Exam..3510129.),#
		zvar = #
			(Final.Exam..3510129. - mean(Final.Exam..3510129.)) / sd(Final.Exam..3510129.),#
		zvar_back = zvar*sd(Final.Exam..3510129.) + mean(Final.Exam..3510129.),#
		curved_Exam1 = zvar*10 + 83#
	) %>%#
	group_by(Student) %>%#
	mutate(`Final Exam (3510129)` = max(Final.Exam..3510129., curved_Exam1)) %>%#
	dplyr::select(Student, ID, SIS.User.ID, SIS.Login.ID, Section, mean_Exam1, sd_Exam1, zvar, zvar_back, curved_Exam1, `Final Exam (3510129)`)
Exam2 %>% as.data.frame
setwd('/Users/KSauby/Documents')
Exam2 %<>% #
	filter(Final.Exam..3510129.>0) %>%#
	mutate(#
		mean_Exam1 = mean(Final.Exam..3510129.),#
		sd_Exam1 = sd(Final.Exam..3510129.),#
		zvar = #
			(Final.Exam..3510129. - mean(Final.Exam..3510129.)) / sd(Final.Exam..3510129.),#
		zvar_back = zvar*sd(Final.Exam..3510129.) + mean(Final.Exam..3510129.),#
		curved_Exam1 = zvar*10 + 83#
	) %>%#
	group_by(Student) %>%#
	mutate(`Final Exam (3510129)` = max(Final.Exam..3510129., curved_Exam1)) %>%#
	dplyr::select(Student, ID, SIS.User.ID, SIS.Login.ID, Section, mean_Exam1, sd_Exam1, zvar, zvar_back, Final.Exam..3510129., curved_Exam1, `Final Exam (3510129)`)
setwd('/Users/KSauby/Documents')
Exam2 <- read.csv(file = "2018-05-07T0855_Grades-PCB3601C.csv", header = TRUE, stringsAsFactors = FALSE)#
#
Exam2 %<>% #
	filter(Final.Exam..3510129.>0) %>%#
	mutate(#
		mean_Exam1 = mean(Final.Exam..3510129.),#
		sd_Exam1 = sd(Final.Exam..3510129.),#
		zvar = #
			(Final.Exam..3510129. - mean(Final.Exam..3510129.)) / sd(Final.Exam..3510129.),#
		zvar_back = zvar*sd(Final.Exam..3510129.) + mean(Final.Exam..3510129.),#
		curved_Exam1 = zvar*10 + 83#
	) %>%#
	group_by(Student) %>%#
	mutate(`Final Exam (3510129)` = max(Final.Exam..3510129., curved_Exam1)) %>%#
	dplyr::select(Student, ID, SIS.User.ID, SIS.Login.ID, Section, mean_Exam1, sd_Exam1, zvar, zvar_back, Final.Exam..3510129., curved_Exam1, `Final Exam (3510129)`)
Exam2 %>% as.data.frame
1849/8
1997/8
1294/89
1294/8
2172/3
2172/8
1920=3
1920/3
1920 + 32*3
2025+97*3
1809+86(3)
1809+86*3
835+350
2445/3
44.95/15
69/20
185000*.05
93 887,907.69
887,907.69
887907.69 + 39734.68
887907.69 + 39734.68 + 185073.33
887907.69 + 39734.68 + 185073.33+150000
887907.69 + 39734.68 + 185073.33+150000+50000
1000/40
89.95/3120
89.95/310
89.95/310*43
13.3/11.35
410.26/348.6
37.66/32
50/7
1000/78
78/1000
80*110
8*.33
68/1000
20000/17.2
33.95*1000
94161.58-33950
13711.35+288.66+110.04
1000/35.15
1000/15.79
5566.46/35.15
6000.00/15.79
10000/17.92
16+12+4210
16+12+42+10
93/33203.91
33203.91/93
2364.0000-1162.7910
21054.65/1207.262
26x3
26*3
78+1+0.4
55*75
+8800
55*75 + 8800
42/12
94.93*.1170+90.24*5+(92.13+6+87.2)/3*.833
94.93*.1170+90.24*.05+(92.13+6+87.2)/3*.833
94.93*.1170+90.24*.05+(92.13+6+87.2+79.5)/3*.833
.117*94.93+.05*90.24+.833*(92.13+87.2+6)/3
.117*94.93+.05*90.24+.833*(92.13+87.2+6+79.4)/3
.117+.05+.833
20000/11.26
60000/11.26
.58+4.66+11.64
.29*3
88-4-3-1-16
2.03*.8
*.84.07
4.07*.8
4.95*.8
4.95*.9
42+1+5+6
5.82+2.32
8.14*4
24.44/250
68/500
install.packages("blogdown")
blogdown::install_hugo()
library(blogdown)
blogdown::install_hugo()
library(blogdown)
blogdown::install_hugo()
blogdown::new_site()
library(dplyr)
.libPaths()
library(dplyr)
library(plotly)
library(magrittr)
.libPaths()
41180-35583
41200-35583
6+3.17+5
11.64*.7
.75*4
.85*4
.85*5
.9*5
.9*4
1+2+5+17+12+19
.29*4
.41*6
.41*10
2.89/6
2.89/6*10
.29*4
.58*4
.58*10
.43*4
.43*10
.48*10
.48*4
.39*4
.39*8
.39*10
4*.22
8*.22
4*.29
8*.29
4*.35
8*.35
1.74*5
1.74*5*.9
.58*20
5.99*.95
5.99*.95 - .2
286*.13
6*8*.13
15*.32
33+29
33+29+25
33+29+25+13
1.15-.87
1.15-.62
50+.29+.33
1.15 - .50-.29-.33
8.27+.69
7.76+.69
19+13+7
233.27*11
19+13+7
3081.26-926.29
70.50-52.75
70.50-52.75-.99
70.50-52.75
6.7+3.75
10.79-10.45
39.99*.6
80/3
263.50/541.71
485.04/541.71
263.50/541.71
397.07/541.71
3/75
25.5/75
2.5/75
32/500
5.82/4*10
5.82/4*10*.7
5.82/4*10*.6
5.82/4*10*.65
5.82/4*6*.65
5.82/4*4*.65
5.82/4*4*.6
5.82/4*6*.6
4.94*.8
4.66*.8
4.66*.7
4.66*.75
3.48/4
3.48/4*12
3.48/4*12*.9
3.48/4*12*.8
.29+.32+.05+.05
2.91/2
3.49/2
6.97/2
(3.49+5.82)/2
3.49/2
4.94/2
2.32+14.83
17.15/2
7.57/2
6.99/2
9.31/2
11.64/2
4.66/2
11.64/2
7.57/2
4.66/2
(1.74+2.61+12.21)/2
.04*4+.2*4+.32+.37+.1
.04*4+.2*4+.32+.37+.1+.8+.25+.25+.48+.45+.6+.17+.22+.08
.04*4+.2*4+.32+.37+.1+.8+.25+.25+.48+.45+.6+.17+.22+.08+.13*8
.04*4+.2*4+.32+.37+.1+.8+.25+.25+.48+.45+.6+.17+.22+.08+.13*8+.32+.32+.29+.33+.32
.04*4+.2*4+.32+.37+.1+.8+.25+.25+.48+.45+.6+.17+.22+.08+.13*8+.32+.32+.29+.33+.32+1+.5+.45+.03+.11+.02
12.9-9.78
.22+.08+.25+.17+.6+.25+.32+.33+.29+.32+.32+1+.5+2+1+.04*4+.2*4+.1+.45+.37+.32+.8+.48+.13*8+.12+.03+.11+.02+.45
candidates <- c( Sys.getenv("R_PROFILE"),#
                 file.path(Sys.getenv("R_HOME"), "etc", "Rprofile.site"),#
                 Sys.getenv("R_PROFILE_USER"),#
                 file.path(getwd(), ".Rprofile") )#
#
Filter(file.exists, candidates)
file.path(Sys.getenv("HOME"), ".Rprofile")
.libPaths()[2]
.libPaths()
.libPaths()[2]
.libPaths(.libPaths())
.libPaths()
1.99*6
8.7*.8
8.7*.7
8.7*.75
1+.29+.2+.19+.15
2.13-1.83
1+.2+.19+.15+.6
1+.2+.15+.6
2.13-1.95
1+.2+.6+.15+.18
.4+.13+.18
.29+.29+.04+.04
setwd('/Users/KSauby/Documents/Projects/ACS/R')
var_y_HT(#
	N = dim(Thompson1990Figure1Population)[1], #
	n1 = dim(Thompson1990Figure1Sample)[1], #
	m = Z_summary$m, #
	y = Z_summary$y_total#
)
setwd('/Users/KSauby/Documents/Projects/ACS/R')
#' Calculate the variance of the Horvitz-Thompson estimator of the mean#
#' @param pi_i_values vector of inclusion probabilities, if not calculated using this function. Default is \code{NULL}.#
#' @param N Population size#
#' @param n1 Initial sample size#
#' @param m Vector of $m$, each corresponding to a unique network.#
#' @param y Vector of $y$ total, each corresponding to a unique network.#
#' @references Sauby, K.E and Christman, M.C. \emph{In preparation.} Restricted adaptive cluster sampling.#
#'#
#' Thompson, S. (1990). Adaptive Cluster Sampling. \emph{Journal of the American Statistical Association}, 85(412): 1050--1059.#
#' @examples #
#' library(ggplot2)#
#' library(magrittr)#
#' library(dplyr)#
#' # Sampling of population from Figure 1, Thompson (1990)#
#'#
#' data(Thompson1990Figure1Population)#
#' data(Thompson1990Figure1Sample)#
#' #
#' # plot sample overlaid onto population#
#' ggplot() +#
#' 	geom_point(data=Thompson1990Figure1Population, aes(x,y, #
#' 	size=factor(y_value),#
#' 		shape=factor(y_value))) +#
#' 	scale_shape_manual(values=c(1, rep(16, length(2:13)))) +#
#' 	geom_point(data=Thompson1990Figure1Sample, aes(x,y), shape=0, size=7)#
#' #
#' # INITIATE ACS#
#' Z = createACS(population_data=Thompson1990Figure1Population, #
#' 	n1=dim(Thompson1990Figure1Sample)[1], #
#' 	initial_sample=Thompson1990Figure1Sample, y_variable="y_value")#
#' #
#' # CALCULATE var(y_HT)#
#' # create dataframe of network info#
#' Z_summary <- Z %>% group_by(NetworkID) %>%#
#' 	summarise(#
#' 		m = m[1],#
#' 		y_total = sum(y_value, rm.na=TRUE)#
#' 		) %>%#
#' 		filter(NetworkID > 0)#
#' #
#' var_y_HT(#
#' 	N = dim(Thompson1990Figure1Population)[1], #
#' 	n1 = dim(Thompson1990Figure1Sample)[1], #
#' 	m = Z_summary$m, #
#' 	y = Z_summary$y_total#
#' )#
#' @useDynLib ACSampling#
#' @importFrom Rcpp sourceCpp#
#' @export#
#
var_y_HT <- function(N, n1, m, y, pi_i_values=NULL) {#
	if (is.null(pi_i_values)) {#
		pi_i_values 	<- pi_i(N, n1, m)#
	}#
	pi_ij_values 		<- pi_ij(N, n1, m) %>% as.matrix#
	# replace diagonal (where h = j)#
	diag(pi_ij_values) 	<- pi_i_values	#
	# dataframe to store sum(k=1 to kappa) sum(m=1 to kappa)#
	V = as.data.frame(matrix(nrow=length(m), ncol=length(m), NA))#
	# calculate for all pairs#
	V <- var_y_HT_cpp(m, pi_i_values, pi_ij_values, y)#
	sum(V, na.rm=T)/(N^2)#
}#
#' Calculate the variance of the Horvitz-Thompson estimator of the mean using the RACS correction#
#' @param pi_i_values vector of inclusion probabilities, if not calculated using this function. Default is \code{NULL}.#
#' @param N Population size#
#' @param n1 Initial sample size#
#' @param m Vector of $m$, each corresponding to a unique network.#
#' @param y Vector of $y$ total, each corresponding to a unique network.#
#' @param m_threshold threshold value above which to calculate pi_i and pi_j differently.#
#' @references Sauby, K.E and Christman, M.C. \emph{In preparation.} Restricted adaptive cluster sampling.#
#' @useDynLib ACSampling#
#' @importFrom Rcpp sourceCpp#
#' @export#
#' @examples#
#' patch = patch_data %>% filter(n.networks==unique(patch_data$n.networks)[3])#
#
#' S <- createSRS(population_data=patch, seed=26, n1=10)#
#' initial_sample <- S[, c("x", "y")]#
#' RACS = createRACS(#
#' 	population_data=patch, #
#' 	seed=26, #
#' 	n1=10, #
#' 	y_variable="Cactus", #
#' 	initial_sample=initial_sample#
#' ) %>% mutate(Design="(b) RACS, n = 45")#
#
#' var_y_HT_RACS(N=dim(patch)[1], n1=10, m=RACS$m, y=RACS$Cactus, m_threshold=7)#
#
var_y_HT_RACS <- function(N, n1, m, y, m_threshold, pi_i_values=NULL) {#
	Z = data.frame(y=y, m=m) %>% arrange(m)#
	A <- Z %>% filter(m <= m_threshold)#
	B <- Z %>% filter(m > m_threshold)#
	if (dim(A)[1] > 0) {#
		A$pi_i_values = pi_i(N, n1, A$m)	#
	}#
	if (dim(B)[1] > 0) {	#
		B$pi_i_values = pi_i(N, n1, m_threshold)#
	}#
	Z <- rbind.fill(A, B) %>% as.data.frame#
	pi_i_values 		<- Z$pi_i_values#
	pi_ij_values 		<- pi_ij_RACS(N, n1, m, m_threshold) %>% as.matrix#
	# replace diagonal (where h = j)#
	diag(pi_ij_values) 	<- Z$pi_i_values	#
	# dataframe to store sum(k=1 to kappa) sum(m=1 to kappa)#
	V = as.data.frame(matrix(nrow=length(m), ncol=length(m), NA))#
	# calculate for all pairs#
	V <- var_y_HT_cpp(m, pi_i_values, pi_ij_values, y)#
	sum(V, na.rm=T)/(N^2)#
}

variables <- c(variables, rvar)#
	. <- NULL#
	X <- merge(population_data_summary, simulation_data, by=population.grouping.variables)#
	# number of simulations#
	n_sims <- X %>% #
		group_by_(.dots = c(#
			population.grouping.variables, #
			sampling.grouping.variables#
		)) %>%#
		summarise(n_sims = dim(.)[1])#
	X <- merge(#
		X, #
		n_sims, #
		by = c(#
			population.grouping.variables, #
			sampling.grouping.variables#
		)#
	)#
	# mean of observed means	#
	temp <- X %>% group_by_(.dots = c(#
		population.grouping.variables, #
		sampling.grouping.variables, #
		"n_sims"#
	))#
	A <- vector("list", length(variables))
i
i=1
setwd('/Users/KSauby/Documents/Projects/ACS/R')
A[[i]] <- list()#
		# observed mean#
		A[[i]] <- temp %>%#
			summarise_(#
				var_mean_of_observed_means = interp(#
					~mean(var, na.rm = TRUE), #
					var = #
					as.name(#
						paste(#
							variables[i],#
							"_mean_observed",#
							sep=""#
						)#
					)#
				),#
				var_n = interp(#
					~length(var[which(!is.na(var))]), #
					var = #
					as.name(#
						paste(#
							variables[i],#
							"_mean_observed",#
							sep=""#
						)#
					)#
				)#
			) %>%#
			setnames(#
		      	.,#
		      	"var_mean_of_observed_means",#
		      	paste(#
		      		variables[i],#
		      		"_mean_of_observed_means",#
		      		sep=""#
				)#
			) %>%#
			setnames(#
		      	.,#
		      	"var_n",#
		      	paste(#
		      		variables[i],#
		      		"_mean_of_observed_means_n",#
		      		sep=""#
				)#
			)#
	}
setwd('/Users/KSauby/Documents/Projects/ACS/R')
Y <- Reduce(#
		function(x, y) merge(#
			x, y,#
			by=c(#
				population.grouping.variables, #
				sampling.grouping.variables, #
				"n_sims"#
			)#
		),#
		A#
	)#
	X <- merge(#
		X, #
		Y, #
		by=c(#
			population.grouping.variables, #
			sampling.grouping.variables,#
			"n_sims"#
		)#
	)
setwd('/Users/KSauby/Documents/Projects/ACS/R')
X %<>%#
			mutate(#
				var_observed_minus_true = #
						# (observed -#
						(eval(#
							parse(#
								text=paste(#
									"X$", #
									variables[i], #
									"_mean_observed", #
									sep=""#
								)#
							)#
						) - #
						# true)#
						eval(#
							parse(#
								text=paste(#
									"X$", #
									variables[i], #
									"_mean", #
									sep=""#
								)#
							)#
						)#
				)^2#
			) %>%#
			setnames(#
				., #
				"var_observed_minus_true", #
				paste(#
					variables[i], #
					"_mean_observed_minus_true", #
					sep=""#
				)#
			)
head(X)
head(data_summary)
setwd('/Users/KSauby/Documents/Projects/ACS/R')
X %<>%#
			mutate(#
				var_observed_minus_mean_of_observed_means = #
						# (observed -#
						eval(#
							parse(#
								text = paste(#
									"X$", #
									variables[i], #
									"_mean_observed", #
									sep=""#
								)#
							)#
						) - #
						# true)#
						eval(#
							parse(#
								text = paste(#
									"X$", #
									variables[i], #
									"_mean_of_observed_means", #
									sep=""#
								)#
							)#
						)#
			) %>%#
			setnames(#
				., #
				"var_observed_minus_mean_of_observed_means", #
				paste(#
					variables[i], #
					"_observed_minus_mean_of_observed_means", #
					sep=""#
				)#
			)
setwd('/Users/KSauby/Documents/Projects/ACS/R')
A <- vector("list", length(variables))#
	X.grp <- X %>% group_by_(.dots=c(#
		population.grouping.variables, #
		sampling.grouping.variables, #
		"n_sims"#
	))
str(X.grp)
c(#
 		population.grouping.variables, #
 		sampling.grouping.variables, #
 		"n_sims"
)
setwd('/Users/KSauby/Documents/Projects/ACS/R')
A[[i]] <- list()#
		A[[i]] <- X.grp %>%#
			summarise_(#
				# save true mean#
				var_true_mean = interp(#
					~var[1], #
					var = #
					as.name(#
						paste(#
							variables[i],#
							"_mean", #
							sep=""#
						)#
					)#
				),#
				# calculate mean of observed means#
				var_mean_of_observed_means = interp(#
					~mean(var, na.rm = TRUE), #
					var = #
					as.name(#
						paste(#
							variables[i],#
							"_mean_observed",#
							sep=""#
						)#
					)#
				),#
				var_RB_n = interp(#
					~length(var[which(!is.na(var))]), #
					var = #
					as.name(#
						paste(#
							variables[i],#
							"_mean_observed",#
							sep=""#
						)#
					)#
				),#
				# calculate sum of MSEs#
				var_sum_of_observed_minus_true_sqrd = interp(#
					~sum(var, na.rm = TRUE), #
					var = #
					as.name(#
						paste(#
							variables[i],#
							"_mean_observed_minus_true",#
							sep=""#
						)#
					)#
				),#
				var_MSE_n = interp(#
					~length(var[which(!is.na(var))]), #
					var = #
					as.name(#
						paste(#
							variables[i],#
							"_mean_observed_minus_true",#
							sep=""#
						)#
					)#
				),#
				# calculate mean of simulated HT variance estimates#
				var_mean_of_var_estimates = interp(#
					~mean(var, na.rm = TRUE), #
					var = #
					as.name(#
						paste(#
							variables[i],#
							"_var_observed",#
							sep=""#
						)#
					)#
				),#
				var_mean_of_var_estimates_n = interp(#
					~length(var[which(!is.na(var))]), #
					var = #
					as.name(#
						paste(#
							variables[i],#
							"_var_observed",#
							sep=""#
						)#
					)#
				),#
				# calculate variance of simulated HT mean estimates#
				var_var_of_mean_estimates = interp(#
					~var(variable, na.rm = TRUE), #
					variable = #
					as.name(#
						paste(#
							variables[i],#
							"_observed_minus_mean_of_observed_means",#
							sep=""#
						)#
					)#
				),#
				var_var_of_mean_estimates_n = interp(#
					~length(var[which(!is.na(var))]), #
					var = #
					as.name(#
						paste(#
							variables[i],#
							"_observed_minus_mean_of_observed_means",#
							sep=""#
						)#
					)#
				)#
			) %>%#
				as.data.frame
setwd('/Users/KSauby/Documents/Projects/ACS/R')
A[[i]] %<>% #
				mutate(#
					# var_mean = Mean()#
					var_RB = 100 * #
						(var_mean_of_observed_means - var_true_mean) / #
						var_true_mean,#
					var_MSE = var_sum_of_observed_minus_true_sqrd/n_sims,#
					var_var_RB = 100 * (var_mean_of_var_estimates - #
						var_var_of_mean_estimates) / #
						var_var_of_mean_estimates,#
					var_var_RB_n = min(#
						var_mean_of_var_estimates_n, #
						var_var_of_mean_estimates_n#
					)#
				)
head(A[[i]])
head(X)
X %>% group_by(N.SRSWOR.plots) %>% summarise(sum(y_value_mean_observed_minus_true)/length(y_value_mean_observed_minus_true))
X %>% group_by(N.SRSWOR.plots,n_sims) %>% summarise(sum(y_value_mean_observed_minus_true)/length(y_value_mean_observed_minus_true))
setwd('/Users/KSauby/Documents/Projects/ACS/R')
A[[i]] <- X.grp %>%#
			summarise_(#
				# save true mean#
				var_true_mean = interp(#
					~var[1], #
					var = #
					as.name(#
						paste(#
							variables[i],#
							"_mean", #
							sep=""#
						)#
					)#
				),#
				# calculate mean of observed means#
				var_mean_of_observed_means = interp(#
					~mean(var, na.rm = TRUE), #
					var = #
					as.name(#
						paste(#
							variables[i],#
							"_mean_observed",#
							sep=""#
						)#
					)#
				),#
				var_RB_n = interp(#
					~length(var[which(!is.na(var))]), #
					var = #
					as.name(#
						paste(#
							variables[i],#
							"_mean_observed",#
							sep=""#
						)#
					)#
				),#
				# calculate sum of MSEs#
				var_sum_of_observed_minus_true_sqrd = interp(#
					~sum(var, na.rm = TRUE), #
					var = #
					as.name(#
						paste(#
							variables[i],#
							"_mean_observed_minus_true",#
							sep=""#
						)#
					)#
				),#
				var_MSE_n = interp(#
					~length(var[which(!is.na(var))]), #
					var = #
					as.name(#
						paste(#
							variables[i],#
							"_mean_observed_minus_true",#
							sep=""#
						)#
					)#
				),#
				# calculate mean of simulated HT variance estimates#
				var_mean_of_var_estimates = interp(#
					~mean(var, na.rm = TRUE), #
					var = #
					as.name(#
						paste(#
							variables[i],#
							"_var_observed",#
							sep=""#
						)#
					)#
				),#
				var_mean_of_var_estimates_n = interp(#
					~length(var[which(!is.na(var))]), #
					var = #
					as.name(#
						paste(#
							variables[i],#
							"_var_observed",#
							sep=""#
						)#
					)#
				),#
				# calculate variance of simulated HT mean estimates#
				var_var_of_mean_estimates = interp(#
					~var(variable, na.rm = TRUE), #
					variable = #
					as.name(#
						paste(#
							variables[i],#
							"_observed_minus_mean_of_observed_means",#
							sep=""#
						)#
					)#
				),#
				var_var_of_mean_estimates_n = interp(#
					~length(var[which(!is.na(var))]), #
					var = #
					as.name(#
						paste(#
							variables[i],#
							"_observed_minus_mean_of_observed_means",#
							sep=""#
						)#
					)#
				)#
			) %>%#
				as.data.frame
A[[i]]
1.4893824/150
setwd('/Users/KSauby/Documents/Projects/ACS/R')
c(#
		population.grouping.variables, #
		sampling.grouping.variables, #
		"n_sims"
)
dim()
dim(X)
1.4893824/25
setwd('/Users/KSauby/Documents/Projects/ACS/R')
#' Calculate Simulation Data Sampling Bias#
#' #
#' @param population_data_summary Summary statistics on the species patch realizations of patches (created by \code{calculateRealizationSummaryStatistics} function).#
#' @param simulation_data Simulation data on sampling of the multiple patch realizations.#
#' @param population.grouping.variables Categorical variables with which to group the population data (e.g., artificial population number if there are more than 1)#
#' @param sampling.grouping.variables Categorical variables with which to group the simulation data (e.g., sampling design used, number of primary samples).#
#' @param variables Vector of variables for which sampling bias should be estimated.#
#' @param rvar Variables for which to use ratio estimators#
#' @return Dataframe including simulation data summary statistics, including relative bias and mean squared error (MSE) of the mean and variance.#
#' @examples#
#' # Create realizations#
#' x_start = 1#
#' x_end = 30#
#' y_start = 1#
#' y_end = 30#
#' n.networks = c(5, 15, 10, 20, 30, 40)#
#' n.realizations = 1#
#' SpeciesInfo = PlotSurveys_season1#
#' Species.Fields = c("Stricta", "Pusilla", "Cactus")#
#' cactus.realizations = createSpeciesPatchRealizations(x_start, x_end,#
#' 	y_start, y_end, buffer=5, n.networks, n.realizations, SpeciesInfo, #
#' 	start.seed=1, Species.Fields)#
#' #
#' # Sample from the realizations#
#' simulations=1#
#' nsamples=c(5,10,20,40)#
#' population <- createPopulation(x_start = 1, x_end = 30, y_start = 1, #
#' 	y_end = 30)#
#' abundance.variables = NULL#
#' occupancy.variables = c(#
#' 	"Stricta",#
#' 	"Pusilla",#
#' 	"Cactus",#
#' 	"CACA_on_Pusilla",#
#' 	"CACA_on_Stricta",#
#' 	"MEPR_on_Pusilla",#
#' 	"MEPR_on_Stricta",#
#' 	"Old_Moth_Evidence_Pusilla",#
#' 	"Old_Moth_Evidence_Stricta"#
#' 	# "Percent_Cover_Pusilla", # how do I do these? they are occupancy nor abundance#
#' 	# "Percent_Cover_Stricta",#
#' 	# "Height_Pusilla",#
#' 	# "Height_Stricta",#
#' )		#
#' patch_data = cactus.realizations#
#' # simulation_data <- sampleSpeciesPatchRealizations(patch_data, simulations, #
#' #	nsamples, population, abundance.variables, occupancy.variables)#
#' #
#' # summary.variables = occupancy.variables#
#' # grouping.variables = c("n.networks", "realization")#
#' # dataset = cactus.realizations#
#' # patch_data_summary <- calculateRealizationSummaryStatistics(dataset, #
#' # 	summary.variables, grouping.variables)#
#' # avar = NULL#
#' @export#
#
calculateSamplingBias <- function(#
	population_data_summary, #
	simulation_data, #
	population.grouping.variables, #
	sampling.grouping.variables,#
	variables, #
	rvar#
) #
{#
	variables <- c(variables, rvar)#
	. <- NULL#
	X <- merge(population_data_summary, simulation_data, by=population.grouping.variables)#
	# number of simulations#
	n_sims <- X %>% #
		group_by_(.dots = c(#
			population.grouping.variables, #
			sampling.grouping.variables#
		)) %>%#
		summarise(n_sims = dim(.)[1])#
	X <- merge(#
		X, #
		n_sims, #
		by = c(#
			population.grouping.variables, #
			sampling.grouping.variables#
		)#
	)#
	# mean of observed means	#
	temp <- X %>% group_by_(.dots = c(#
		population.grouping.variables, #
		sampling.grouping.variables, #
		"n_sims"#
	))#
	A <- vector("list", length(variables))#
	for (i in 1:length(variables)) {#
		A[[i]] <- list()#
		# observed mean#
		A[[i]] <- temp %>%#
			summarise_(#
				var_mean_of_observed_means = interp(#
					~mean(var, na.rm = TRUE), #
					var = #
					as.name(#
						paste(#
							variables[i],#
							"_mean_observed",#
							sep=""#
						)#
					)#
				),#
				var_n = interp(#
					~length(var[which(!is.na(var))]), #
					var = #
					as.name(#
						paste(#
							variables[i],#
							"_mean_observed",#
							sep=""#
						)#
					)#
				)#
			) %>%#
			setnames(#
		      	.,#
		      	"var_mean_of_observed_means",#
		      	paste(#
		      		variables[i],#
		      		"_mean_of_observed_means",#
		      		sep=""#
				)#
			) %>%#
			setnames(#
		      	.,#
		      	"var_n",#
		      	paste(#
		      		variables[i],#
		      		"_mean_of_observed_means_n",#
		      		sep=""#
				)#
			)#
	}#
	Y <- Reduce(#
		function(x, y) merge(#
			x, y,#
			by=c(#
				population.grouping.variables, #
				sampling.grouping.variables, #
				"n_sims"#
			)#
		),#
		A#
	)#
	X <- merge(#
		X, #
		Y, #
		by=c(#
			population.grouping.variables, #
			sampling.grouping.variables,#
			"n_sims"#
		)#
	)#
	# calculate squared differences for each simulation and variable#
	for (i in 1:length(variables)) {#
		X %<>%#
			mutate(#
				var_observed_minus_true = #
						# (observed -#
						(eval(#
							parse(#
								text=paste(#
									"X$", #
									variables[i], #
									"_mean_observed", #
									sep=""#
								)#
							)#
						) - #
						# true)#
						eval(#
							parse(#
								text=paste(#
									"X$", #
									variables[i], #
									"_mean", #
									sep=""#
								)#
							)#
						)#
				)^2#
			) %>%#
			setnames(#
				., #
				"var_observed_minus_true", #
				paste(#
					variables[i], #
					"_mean_observed_minus_true", #
					sep=""#
				)#
			)#
	}#
	# calculate squared differences (observed - mean of observed) for each variable#
	for (i in 1:length(variables)) {#
		X %<>%#
			mutate(#
				var_observed_minus_mean_of_observed_means = #
						# (observed -#
						eval(#
							parse(#
								text = paste(#
									"X$", #
									variables[i], #
									"_mean_observed", #
									sep=""#
								)#
							)#
						) - #
						# true)#
						eval(#
							parse(#
								text = paste(#
									"X$", #
									variables[i], #
									"_mean_of_observed_means", #
									sep=""#
								)#
							)#
						)#
			) %>%#
			setnames(#
				., #
				"var_observed_minus_mean_of_observed_means", #
				paste(#
					variables[i], #
					"_observed_minus_mean_of_observed_means", #
					sep=""#
				)#
			)#
	}#
	# calculate bias and MSE#
	A <- vector("list", length(variables))#
	X.grp <- X %>% group_by_(.dots=c(#
		population.grouping.variables, #
		sampling.grouping.variables, #
		"n_sims"#
	))#
	for (i in 1:length(variables)) {#
		A[[i]] <- list()#
		A[[i]] <- X.grp %>%#
			summarise_(#
				# save true mean#
				var_true_mean = interp(#
					~var[1], #
					var = #
					as.name(#
						paste(#
							variables[i],#
							"_mean", #
							sep=""#
						)#
					)#
				),#
				# calculate mean of observed means#
				var_mean_of_observed_means = interp(#
					~mean(var, na.rm = TRUE), #
					var = #
					as.name(#
						paste(#
							variables[i],#
							"_mean_observed",#
							sep=""#
						)#
					)#
				),#
				var_RB_n = interp(#
					~length(var[which(!is.na(var))]), #
					var = #
					as.name(#
						paste(#
							variables[i],#
							"_mean_observed",#
							sep=""#
						)#
					)#
				),#
				# calculate sum of MSEs#
				var_sum_of_observed_minus_true_sqrd = interp(#
					~sum(var, na.rm = TRUE), #
					var = #
					as.name(#
						paste(#
							variables[i],#
							"_mean_observed_minus_true",#
							sep=""#
						)#
					)#
				),#
				var_MSE_n = interp(#
					~length(var[which(!is.na(var))]), #
					var = #
					as.name(#
						paste(#
							variables[i],#
							"_mean_observed_minus_true",#
							sep=""#
						)#
					)#
				),#
				# calculate mean of simulated HT variance estimates#
				var_mean_of_var_estimates = interp(#
					~mean(var, na.rm = TRUE), #
					var = #
					as.name(#
						paste(#
							variables[i],#
							"_var_observed",#
							sep=""#
						)#
					)#
				),#
				var_mean_of_var_estimates_n = interp(#
					~length(var[which(!is.na(var))]), #
					var = #
					as.name(#
						paste(#
							variables[i],#
							"_var_observed",#
							sep=""#
						)#
					)#
				),#
				# calculate variance of simulated HT mean estimates#
				var_var_of_mean_estimates = interp(#
					~var(variable, na.rm = TRUE), #
					variable = #
					as.name(#
						paste(#
							variables[i],#
							"_observed_minus_mean_of_observed_means",#
							sep=""#
						)#
					)#
				),#
				var_var_of_mean_estimates_n = interp(#
					~length(var[which(!is.na(var))]), #
					var = #
					as.name(#
						paste(#
							variables[i],#
							"_observed_minus_mean_of_observed_means",#
							sep=""#
						)#
					)#
				)#
			) %>%#
				as.data.frame#
			A[[i]] %<>% #
				mutate(#
					# var_mean = Mean()#
					var_RB = 100 * #
						(var_mean_of_observed_means - var_true_mean) / #
						var_true_mean,#
					var_MSE = var_sum_of_observed_minus_true_sqrd/length(var_sum_of_observed_minus_true_sqrd),#
					var_var_RB = 100 * (var_mean_of_var_estimates - #
						var_var_of_mean_estimates) / #
						var_var_of_mean_estimates,#
					var_var_RB_n = min(#
						var_mean_of_var_estimates_n, #
						var_var_of_mean_estimates_n#
					)#
				) %>%#
				setnames(#
		      		.,#
		      		"var_true_mean",#
		      		paste(#
		      			variables[i],#
		      			"_true_mean",#
		      			sep=""#
					)#
				) %>%#
				setnames(#
		      		.,#
		      		"var_RB",#
		      		paste(#
		      			variables[i],#
		      			"_mean_RB",#
		      			sep=""#
					)#
				) %>%#
				setnames(#
		      		.,#
		      		"var_MSE",#
		      		paste(#
		      			variables[i],#
		      			"_mean_MSE",#
		      			sep=""#
					)#
				) %>%#
				setnames(#
		      		.,#
		      		"var_var_RB",#
		      		paste(#
		      			variables[i],#
		      			"_var_RB",#
		      			sep=""#
					)#
				) %>%#
				# rename sample size variables#
				setnames(#
		      		.,#
		      		"var_RB_n",#
		      		paste(#
		      			variables[i],#
		      			"_mean_RB_n",#
		      			sep=""#
					)#
				) %>%#
				setnames(#
		      		.,#
		      		"var_MSE_n",#
		      		paste(#
		      			variables[i],#
		      			"_mean_MSE_n",#
		      			sep=""#
					)#
				) %>%#
				setnames(#
		      		.,#
		      		"var_var_RB_n",#
		      		paste(#
		      			variables[i],#
		      			"_var_RB_n",#
		      			sep=""#
					)#
				) %>%#
				dplyr::select(-c(#
					var_mean_of_observed_means,#
					var_sum_of_observed_minus_true_sqrd,#
					var_mean_of_var_estimates,#
					var_mean_of_var_estimates_n,#
					var_var_of_mean_estimates,#
					var_var_of_mean_estimates_n#
				))#
	}#
	Y <- Reduce(#
		function(x, y) merge(#
			x, y,#
			by=c(#
				population.grouping.variables, #
				sampling.grouping.variables, #
				"n_sims"#
			)#
		),#
		A#
	)#
#	X$Prop.Area.Surveyed = with(X, N.Total.plots/N)		#
	return(Y)#
}
setwd('/Users/KSauby/Documents/Projects/ACS/tests/testthat')
test_that("calculateSamplingBias, bias calculation of mean and variances", {#
	# PREP DATA#
	data(Thompson1990Figure1Population)#
	# calculate y_value estimates#
	samplesizes <- data.frame(#
		seed = 1:150,#
		N.SRSWOR.plots = rep(seq(from=130, to=280, by=30), each=25)#
	)#
	y_value_mean_observed <- vector()#
	y_value_var_observed <- vector()#
		for (i in 1:dim(samplesizes)[1]) {#
			temp <- createSRS(#
				population=Thompson1990Figure1Population, #
				seed=samplesizes$seed[i], #
				n1=samplesizes$N.SRSWOR.plots[i]#
			)#
			y_value_mean_observed[i] <- mean(temp$y_value)#
			y_value_var_observed[i] <- var(temp$y_value)#
		}#
	data <- cbind(samplesizes, y_value_mean_observed, y_value_var_observed)#
	# summarise population data#
	Thompson1990Figure1Population_summary <- #
		calculatePopulationSummaryStatistics(#
			population_data		= Thompson1990Figure1Population, #
			summary.variables 	= "y_value", #
			grouping.variables 	= NULL, #
			ratio.variables 	= NULL#
		)#
	# sampling bias#
	data_summary <- data %>%#
		mutate(#
			observed_minus_true_sqd = (#
				y_value_mean_observed - #
				Thompson1990Figure1Population_summary$y_value_mean#
		)^2) %>%#
		group_by(N.SRSWOR.plots) %>%#
		summarise(#
			y_value_mean_RB = (#
				# mean of HT estimates#
				mean(y_value_mean_observed) - #
				# mu, population mean#
				Thompson1990Figure1Population_summary$y_value_mean#
			) / Thompson1990Figure1Population_summary$y_value_mean * 100,#
			y_value_var_RB = (#
				mean(y_value_var_observed) - var(y_value_mean_observed)#
			) / var(y_value_mean_observed) * 100,#
			y_value_mean_MSE = sum(observed_minus_true_sqd) / #
				length(y_value_mean_observed)#
		) %>%#
		as.data.frame#
	temp <- data_summary %>% dplyr::select(y_value_mean_RB, y_value_var_RB)#
#
	temp$y_value_mean_RB %<>% round(3)#
	temp$y_value_var_RB %<>% round(3)#
#
	data_summary_stats <- calculateSamplingBias(#
		population_data_summary	= Thompson1990Figure1Population_summary, #
		simulation_data		= data, #
		population.grouping.variables = NULL, #
		sampling.grouping.variables	= "N.SRSWOR.plots", #
		variables			= "y_value", #
		rvar				= NULL #
	) %>%#
	as.data.frame#
#
	expect_that(#
		data_summary_stats %>%#
		dplyr::select(#
			y_value_mean_RB,#
			y_value_var_RB#
		) %>%#
		round(3),#
		equals(temp)#
	)#
})
setwd('/Users/KSauby/Documents/Projects/ACS/tests/testthat')
test_that("calculateSamplingBias, MSE function", {#
	temp <- data_summary %>% dplyr::select(y_value_mean_MSE)#
	temp$y_value_mean_MSE %<>% round(3)#
	expect_that(#
		data_summary_stats %>%#
		dplyr::select(#
			y_value_mean_MSE#
		) %>%#
		round(3),#
		equals(temp)#
	)#
})
setwd('/Users/KSauby/Documents/Projects/ACS/tests/testthat')
# PREP DATA#
	data(Thompson1990Figure1Population)#
	# calculate y_value estimates#
	samplesizes <- data.frame(#
		seed = 1:150,#
		N.SRSWOR.plots = rep(seq(from=130, to=280, by=30), each=25)#
	)#
	y_value_mean_observed <- vector()#
	y_value_var_observed <- vector()#
		for (i in 1:dim(samplesizes)[1]) {#
			temp <- createSRS(#
				population=Thompson1990Figure1Population, #
				seed=samplesizes$seed[i], #
				n1=samplesizes$N.SRSWOR.plots[i]#
			)#
			y_value_mean_observed[i] <- mean(temp$y_value)#
			y_value_var_observed[i] <- var(temp$y_value)#
		}#
	data <- cbind(samplesizes, y_value_mean_observed, y_value_var_observed)#
	# summarise population data#
	Thompson1990Figure1Population_summary <- #
		calculatePopulationSummaryStatistics(#
			population_data		= Thompson1990Figure1Population, #
			summary.variables 	= "y_value", #
			grouping.variables 	= NULL, #
			ratio.variables 	= NULL#
		)#
	# sampling bias#
	data_summary <- data %>%#
		mutate(#
			observed_minus_true_sqd = (#
				y_value_mean_observed - #
				Thompson1990Figure1Population_summary$y_value_mean#
		)^2) %>%#
		group_by(N.SRSWOR.plots) %>%#
		summarise(#
			y_value_mean_RB = (#
				# mean of HT estimates#
				mean(y_value_mean_observed) - #
				# mu, population mean#
				Thompson1990Figure1Population_summary$y_value_mean#
			) / Thompson1990Figure1Population_summary$y_value_mean * 100,#
			y_value_var_RB = (#
				mean(y_value_var_observed) - var(y_value_mean_observed)#
			) / var(y_value_mean_observed) * 100,#
			y_value_mean_MSE = sum(observed_minus_true_sqd) / #
				length(y_value_mean_observed)#
		) %>%#
		as.data.frame#
	temp <- data_summary %>% dplyr::select(y_value_mean_RB, y_value_var_RB)#
#
	temp$y_value_mean_RB %<>% round(3)#
	temp$y_value_var_RB %<>% round(3)#
#
	data_summary_stats <- calculateSamplingBias(#
		population_data_summary	= Thompson1990Figure1Population_summary, #
		simulation_data		= data, #
		population.grouping.variables = NULL, #
		sampling.grouping.variables	= "N.SRSWOR.plots", #
		variables			= "y_value", #
		rvar				= NULL #
	) %>%#
	as.data.frame#
#
	expect_that(#
		data_summary_stats %>%#
		dplyr::select(#
			y_value_mean_RB,#
			y_value_var_RB#
		) %>%#
		round(3),#
		equals(temp)#
	)
setwd('/Users/KSauby/Documents/Projects/ACS/tests/testthat')
temp <- data_summary %>% dplyr::select(y_value_mean_MSE)#
	temp$y_value_mean_MSE %<>% round(3)#
	expect_that(#
		data_summary_stats %>%#
		dplyr::select(#
			y_value_mean_MSE#
		) %>%#
		round(3),#
		equals(temp)#
	)
setwd('/Users/KSauby/Documents/Projects/ACS/tests/testthat')
data_summary_stats
setwd('/Users/KSauby/Documents/Projects/ACS/tests/testthat')
population_data_summary	= Thompson1990Figure1Population_summary
setwd('/Users/KSauby/Documents/Projects/ACS/tests/testthat')
simulation_data		= data
setwd('/Users/KSauby/Documents/Projects/ACS/tests/testthat')
population.grouping.variables = NULL
setwd('/Users/KSauby/Documents/Projects/ACS/tests/testthat')
sampling.grouping.variables	= "N.SRSWOR.plots"
setwd('/Users/KSauby/Documents/Projects/ACS/tests/testthat')
variables			= "y_value"
setwd('/Users/KSauby/Documents/Projects/ACS/tests/testthat')
rvar				= NULL
setwd('/Users/KSauby/Documents/Projects/ACS/R')
variables <- c(variables, rvar)#
	. <- NULL#
	X <- merge(population_data_summary, simulation_data, by=population.grouping.variables)#
	# number of simulations
head(X)
dim(X)
setwd('/Users/KSauby/Documents/Projects/ACS/R')
n_sims <- X %>% #
		group_by_(.dots = c(#
			population.grouping.variables, #
			sampling.grouping.variables#
		)) %>%#
		summarise(n_sims = dim(.)[1])
n_sims
setwd('/Users/KSauby/Documents/Projects/ACS/R')
n_sims <- X %>% #
		group_by_(.dots = c(#
			population.grouping.variables, #
			sampling.grouping.variables#
		)) %>%#
		summarise(n_sims = length(#
			c(#
				population.grouping.variables, #
				sampling.grouping.variables#
			)[1]#
		)
)
n_sims
setwd('/Users/KSauby/Documents/Projects/ACS/R')
n_sims <- X %>% #
		group_by_(.dots = c(#
			population.grouping.variables, #
			sampling.grouping.variables#
		)) %>%#
		summarise(n_sims = length(#
			length(c(#
				population.grouping.variables, #
				sampling.grouping.variables#
			)[1])#
		)
)
n_sims
setwd('/Users/KSauby/Documents/Projects/ACS/R')
c(#
				population.grouping.variables, #
				sampling.grouping.variables#
			)[1]
setwd('/Users/KSauby/Documents/Projects/ACS/R')
n_sims <- X %>% #
		group_by_(.dots = c(#
			population.grouping.variables, #
			sampling.grouping.variables#
		)) %>%#
		summarise(n_sims = length(#
			length(eval(parse(text=c(#
				population.grouping.variables, #
				sampling.grouping.variables#
			)[1])))#
		)
)
setwd('/Users/KSauby/Documents/Projects/ACS/R')
paste("X$", c(#
				population.grouping.variables, #
				sampling.grouping.variables#
			)[1], sep="")
setwd('/Users/KSauby/Documents/Projects/ACS/R')
n_sims <- X %>% #
		group_by_(.dots = c(#
			population.grouping.variables, #
			sampling.grouping.variables#
		)) %>%#
		summarise(n_sims = length(#
			length(eval(parse(text=paste("X$", c(#
				population.grouping.variables, #
				sampling.grouping.variables#
			)[1], sep="")))#
		)
)
)
n_sims
setwd('/Users/KSauby/Documents/Projects/ACS/R')
n_sims <- X %>% #
		group_by_(.dots = c(#
			population.grouping.variables, #
			sampling.grouping.variables#
		)) %>%#
		summarise(n_sims = length(#
			eval(parse(text=paste("X$", c(#
				population.grouping.variables, #
				sampling.grouping.variables#
			)[1], sep=""))))#
		)
n_sims
setwd('/Users/KSauby/Documents/Projects/ACS/R')
X %>% #
		group_by_(.dots = c(#
			population.grouping.variables, #
			sampling.grouping.variables#
		)) %>%#
		summarise_(n(.))#
		)
setwd('/Users/KSauby/Documents/Projects/ACS/R')
X %>% #
		group_by_(.dots = c(#
			population.grouping.variables, #
			sampling.grouping.variables#
		)) %>%#
		summarise_(n_sims = n(#
			eval(parse(text=paste("X$", c(#
				population.grouping.variables, #
				sampling.grouping.variables#
			)[1], sep=""))))#
		)
setwd('/Users/KSauby/Documents/Projects/ACS/R')
paste("X$", c(#
				population.grouping.variables, #
				sampling.grouping.variables#
			)[1], sep="")
setwd('/Users/KSauby/Documents/Projects/ACS/R')
eval(parse(text=paste("X$", c(#
				population.grouping.variables, #
				sampling.grouping.variables#
			)[1], sep="")))
setwd('/Users/KSauby/Documents/Projects/ACS/R')
X %>% #
		group_by_(.dots = c(#
			population.grouping.variables, #
			sampling.grouping.variables#
		)) %>%#
		summarise_(n_sims = n(#
			eval(parse(text=paste("X$", c(#
				population.grouping.variables, #
				sampling.grouping.variables#
			)[1], sep=""))))#
		)
head(X)
?n
setwd('/Users/KSauby/Documents/Projects/ACS/R')
X %>% #
		group_by_(.dots = c(#
			population.grouping.variables, #
			sampling.grouping.variables#
		)) %>%#
		summarise_(n_sims = n()#
		)
setwd('/Users/KSauby/Documents/Projects/ACS/R')
X %>% #
		group_by_(.dots = c(#
			population.grouping.variables, #
			sampling.grouping.variables#
		)) %>%#
		summarise(n_sims = n()#
		)
setwd('/Users/KSauby/Documents/Projects/ACS/R')
#' Calculate Simulation Data Sampling Bias#
#' #
#' @param population_data_summary Summary statistics on the species patch realizations of patches (created by \code{calculateRealizationSummaryStatistics} function).#
#' @param simulation_data Simulation data on sampling of the multiple patch realizations.#
#' @param population.grouping.variables Categorical variables with which to group the population data (e.g., artificial population number if there are more than 1)#
#' @param sampling.grouping.variables Categorical variables with which to group the simulation data (e.g., sampling design used, number of primary samples).#
#' @param variables Vector of variables for which sampling bias should be estimated.#
#' @param rvar Variables for which to use ratio estimators#
#' @return Dataframe including simulation data summary statistics, including relative bias and mean squared error (MSE) of the mean and variance.#
#' @examples#
#' # Create realizations#
#' x_start = 1#
#' x_end = 30#
#' y_start = 1#
#' y_end = 30#
#' n.networks = c(5, 15, 10, 20, 30, 40)#
#' n.realizations = 1#
#' SpeciesInfo = PlotSurveys_season1#
#' Species.Fields = c("Stricta", "Pusilla", "Cactus")#
#' cactus.realizations = createSpeciesPatchRealizations(x_start, x_end,#
#' 	y_start, y_end, buffer=5, n.networks, n.realizations, SpeciesInfo, #
#' 	start.seed=1, Species.Fields)#
#' #
#' # Sample from the realizations#
#' simulations=1#
#' nsamples=c(5,10,20,40)#
#' population <- createPopulation(x_start = 1, x_end = 30, y_start = 1, #
#' 	y_end = 30)#
#' abundance.variables = NULL#
#' occupancy.variables = c(#
#' 	"Stricta",#
#' 	"Pusilla",#
#' 	"Cactus",#
#' 	"CACA_on_Pusilla",#
#' 	"CACA_on_Stricta",#
#' 	"MEPR_on_Pusilla",#
#' 	"MEPR_on_Stricta",#
#' 	"Old_Moth_Evidence_Pusilla",#
#' 	"Old_Moth_Evidence_Stricta"#
#' 	# "Percent_Cover_Pusilla", # how do I do these? they are occupancy nor abundance#
#' 	# "Percent_Cover_Stricta",#
#' 	# "Height_Pusilla",#
#' 	# "Height_Stricta",#
#' )		#
#' patch_data = cactus.realizations#
#' # simulation_data <- sampleSpeciesPatchRealizations(patch_data, simulations, #
#' #	nsamples, population, abundance.variables, occupancy.variables)#
#' #
#' # summary.variables = occupancy.variables#
#' # grouping.variables = c("n.networks", "realization")#
#' # dataset = cactus.realizations#
#' # patch_data_summary <- calculateRealizationSummaryStatistics(dataset, #
#' # 	summary.variables, grouping.variables)#
#' # avar = NULL#
#' @export#
#
calculateSamplingBias <- function(#
	population_data_summary, #
	simulation_data, #
	population.grouping.variables, #
	sampling.grouping.variables,#
	variables, #
	rvar#
) #
{#
	variables <- c(variables, rvar)#
	. <- NULL#
	X <- merge(population_data_summary, simulation_data, by=population.grouping.variables)#
	# number of simulations#
	n_sims <- X %>% #
		group_by_(.dots = c(#
			population.grouping.variables, #
			sampling.grouping.variables#
		)) %>%#
		summarise(n_sims = n()#
		)#
	X <- merge(#
		X, #
		n_sims, #
		by = c(#
			population.grouping.variables, #
			sampling.grouping.variables#
		)#
	)#
	# mean of observed means	#
	temp <- X %>% group_by_(.dots = c(#
		population.grouping.variables, #
		sampling.grouping.variables, #
		"n_sims"#
	))#
	A <- vector("list", length(variables))#
	for (i in 1:length(variables)) {#
		A[[i]] <- list()#
		# observed mean#
		A[[i]] <- temp %>%#
			summarise_(#
				var_mean_of_observed_means = interp(#
					~mean(var, na.rm = TRUE), #
					var = #
					as.name(#
						paste(#
							variables[i],#
							"_mean_observed",#
							sep=""#
						)#
					)#
				),#
				var_n = interp(#
					~length(var[which(!is.na(var))]), #
					var = #
					as.name(#
						paste(#
							variables[i],#
							"_mean_observed",#
							sep=""#
						)#
					)#
				)#
			) %>%#
			setnames(#
		      	.,#
		      	"var_mean_of_observed_means",#
		      	paste(#
		      		variables[i],#
		      		"_mean_of_observed_means",#
		      		sep=""#
				)#
			) %>%#
			setnames(#
		      	.,#
		      	"var_n",#
		      	paste(#
		      		variables[i],#
		      		"_mean_of_observed_means_n",#
		      		sep=""#
				)#
			)#
	}#
	Y <- Reduce(#
		function(x, y) merge(#
			x, y,#
			by=c(#
				population.grouping.variables, #
				sampling.grouping.variables, #
				"n_sims"#
			)#
		),#
		A#
	)#
	X <- merge(#
		X, #
		Y, #
		by=c(#
			population.grouping.variables, #
			sampling.grouping.variables,#
			"n_sims"#
		)#
	)#
	# calculate squared differences for each simulation and variable#
	for (i in 1:length(variables)) {#
		X %<>%#
			mutate(#
				var_observed_minus_true = #
						# (observed -#
						(eval(#
							parse(#
								text=paste(#
									"X$", #
									variables[i], #
									"_mean_observed", #
									sep=""#
								)#
							)#
						) - #
						# true)#
						eval(#
							parse(#
								text=paste(#
									"X$", #
									variables[i], #
									"_mean", #
									sep=""#
								)#
							)#
						)#
				)^2#
			) %>%#
			setnames(#
				., #
				"var_observed_minus_true", #
				paste(#
					variables[i], #
					"_mean_observed_minus_true", #
					sep=""#
				)#
			)#
	}#
	# calculate squared differences (observed - mean of observed) for each variable#
	for (i in 1:length(variables)) {#
		X %<>%#
			mutate(#
				var_observed_minus_mean_of_observed_means = #
						# (observed -#
						eval(#
							parse(#
								text = paste(#
									"X$", #
									variables[i], #
									"_mean_observed", #
									sep=""#
								)#
							)#
						) - #
						# true)#
						eval(#
							parse(#
								text = paste(#
									"X$", #
									variables[i], #
									"_mean_of_observed_means", #
									sep=""#
								)#
							)#
						)#
			) %>%#
			setnames(#
				., #
				"var_observed_minus_mean_of_observed_means", #
				paste(#
					variables[i], #
					"_observed_minus_mean_of_observed_means", #
					sep=""#
				)#
			)#
	}#
	# calculate bias and MSE#
	A <- vector("list", length(variables))#
	X.grp <- X %>% group_by_(.dots=c(#
		population.grouping.variables, #
		sampling.grouping.variables, #
		"n_sims"#
	))#
	for (i in 1:length(variables)) {#
		A[[i]] <- list()#
		A[[i]] <- X.grp %>%#
			summarise_(#
				# save true mean#
				var_true_mean = interp(#
					~var[1], #
					var = #
					as.name(#
						paste(#
							variables[i],#
							"_mean", #
							sep=""#
						)#
					)#
				),#
				# calculate mean of observed means#
				var_mean_of_observed_means = interp(#
					~mean(var, na.rm = TRUE), #
					var = #
					as.name(#
						paste(#
							variables[i],#
							"_mean_observed",#
							sep=""#
						)#
					)#
				),#
				var_RB_n = interp(#
					~length(var[which(!is.na(var))]), #
					var = #
					as.name(#
						paste(#
							variables[i],#
							"_mean_observed",#
							sep=""#
						)#
					)#
				),#
				# calculate sum of MSEs#
				var_sum_of_observed_minus_true_sqrd = interp(#
					~sum(var, na.rm = TRUE), #
					var = #
					as.name(#
						paste(#
							variables[i],#
							"_mean_observed_minus_true",#
							sep=""#
						)#
					)#
				),#
				var_MSE_n = interp(#
					~length(var[which(!is.na(var))]), #
					var = #
					as.name(#
						paste(#
							variables[i],#
							"_mean_observed_minus_true",#
							sep=""#
						)#
					)#
				),#
				# calculate mean of simulated HT variance estimates#
				var_mean_of_var_estimates = interp(#
					~mean(var, na.rm = TRUE), #
					var = #
					as.name(#
						paste(#
							variables[i],#
							"_var_observed",#
							sep=""#
						)#
					)#
				),#
				var_mean_of_var_estimates_n = interp(#
					~length(var[which(!is.na(var))]), #
					var = #
					as.name(#
						paste(#
							variables[i],#
							"_var_observed",#
							sep=""#
						)#
					)#
				),#
				# calculate variance of simulated HT mean estimates#
				var_var_of_mean_estimates = interp(#
					~var(variable, na.rm = TRUE), #
					variable = #
					as.name(#
						paste(#
							variables[i],#
							"_observed_minus_mean_of_observed_means",#
							sep=""#
						)#
					)#
				),#
				var_var_of_mean_estimates_n = interp(#
					~length(var[which(!is.na(var))]), #
					var = #
					as.name(#
						paste(#
							variables[i],#
							"_observed_minus_mean_of_observed_means",#
							sep=""#
						)#
					)#
				)#
			) %>%#
				as.data.frame#
			A[[i]] %<>% #
				mutate(#
					# var_mean = Mean()#
					var_RB = 100 * #
						(var_mean_of_observed_means - var_true_mean) / #
						var_true_mean,#
					var_MSE = var_sum_of_observed_minus_true_sqrd/length(var_sum_of_observed_minus_true_sqrd),#
					var_var_RB = 100 * (var_mean_of_var_estimates - #
						var_var_of_mean_estimates) / #
						var_var_of_mean_estimates,#
					var_var_RB_n = min(#
						var_mean_of_var_estimates_n, #
						var_var_of_mean_estimates_n#
					)#
				) %>%#
				setnames(#
		      		.,#
		      		"var_true_mean",#
		      		paste(#
		      			variables[i],#
		      			"_true_mean",#
		      			sep=""#
					)#
				) %>%#
				setnames(#
		      		.,#
		      		"var_RB",#
		      		paste(#
		      			variables[i],#
		      			"_mean_RB",#
		      			sep=""#
					)#
				) %>%#
				setnames(#
		      		.,#
		      		"var_MSE",#
		      		paste(#
		      			variables[i],#
		      			"_mean_MSE",#
		      			sep=""#
					)#
				) %>%#
				setnames(#
		      		.,#
		      		"var_var_RB",#
		      		paste(#
		      			variables[i],#
		      			"_var_RB",#
		      			sep=""#
					)#
				) %>%#
				# rename sample size variables#
				setnames(#
		      		.,#
		      		"var_RB_n",#
		      		paste(#
		      			variables[i],#
		      			"_mean_RB_n",#
		      			sep=""#
					)#
				) %>%#
				setnames(#
		      		.,#
		      		"var_MSE_n",#
		      		paste(#
		      			variables[i],#
		      			"_mean_MSE_n",#
		      			sep=""#
					)#
				) %>%#
				setnames(#
		      		.,#
		      		"var_var_RB_n",#
		      		paste(#
		      			variables[i],#
		      			"_var_RB_n",#
		      			sep=""#
					)#
				) %>%#
				dplyr::select(-c(#
					var_mean_of_observed_means,#
					var_sum_of_observed_minus_true_sqrd,#
					var_mean_of_var_estimates,#
					var_mean_of_var_estimates_n,#
					var_var_of_mean_estimates,#
					var_var_of_mean_estimates_n#
				))#
	}#
	Y <- Reduce(#
		function(x, y) merge(#
			x, y,#
			by=c(#
				population.grouping.variables, #
				sampling.grouping.variables, #
				"n_sims"#
			)#
		),#
		A#
	)#
#	X$Prop.Area.Surveyed = with(X, N.Total.plots/N)		#
	return(Y)#
}
setwd('/Users/KSauby/Documents/Projects/ACS/tests/testthat')
test_that("calculateSamplingBias, bias calculation of mean and variances", {#
	# PREP DATA#
	data(Thompson1990Figure1Population)#
	# calculate y_value estimates#
	samplesizes <- data.frame(#
		seed = 1:150,#
		N.SRSWOR.plots = rep(seq(from=130, to=280, by=30), each=25)#
	)#
	y_value_mean_observed <- vector()#
	y_value_var_observed <- vector()#
		for (i in 1:dim(samplesizes)[1]) {#
			temp <- createSRS(#
				population=Thompson1990Figure1Population, #
				seed=samplesizes$seed[i], #
				n1=samplesizes$N.SRSWOR.plots[i]#
			)#
			y_value_mean_observed[i] <- mean(temp$y_value)#
			y_value_var_observed[i] <- var(temp$y_value)#
		}#
	data <- cbind(samplesizes, y_value_mean_observed, y_value_var_observed)#
	# summarise population data#
	Thompson1990Figure1Population_summary <- #
		calculatePopulationSummaryStatistics(#
			population_data		= Thompson1990Figure1Population, #
			summary.variables 	= "y_value", #
			grouping.variables 	= NULL, #
			ratio.variables 	= NULL#
		)#
	# sampling bias#
	data_summary <- data %>%#
		mutate(#
			observed_minus_true_sqd = (#
				y_value_mean_observed - #
				Thompson1990Figure1Population_summary$y_value_mean#
		)^2) %>%#
		group_by(N.SRSWOR.plots) %>%#
		summarise(#
			y_value_mean_RB = (#
				# mean of HT estimates#
				mean(y_value_mean_observed) - #
				# mu, population mean#
				Thompson1990Figure1Population_summary$y_value_mean#
			) / Thompson1990Figure1Population_summary$y_value_mean * 100,#
			y_value_var_RB = (#
				mean(y_value_var_observed) - var(y_value_mean_observed)#
			) / var(y_value_mean_observed) * 100,#
			y_value_mean_MSE = sum(observed_minus_true_sqd) / #
				length(y_value_mean_observed)#
		) %>%#
		as.data.frame#
	temp <- data_summary %>% dplyr::select(y_value_mean_RB, y_value_var_RB)#
#
	temp$y_value_mean_RB %<>% round(3)#
	temp$y_value_var_RB %<>% round(3)#
#
	data_summary_stats <- calculateSamplingBias(#
		population_data_summary	= Thompson1990Figure1Population_summary, #
		simulation_data		= data, #
		population.grouping.variables = NULL, #
		sampling.grouping.variables	= "N.SRSWOR.plots", #
		variables			= "y_value", #
		rvar				= NULL #
	) %>%#
	as.data.frame#
#
	expect_that(#
		data_summary_stats %>%#
		dplyr::select(#
			y_value_mean_RB,#
			y_value_var_RB#
		) %>%#
		round(3),#
		equals(temp)#
	)#
})#
test_that("calculateSamplingBias, MSE function", {#
	temp <- data_summary %>% dplyr::select(y_value_mean_MSE)#
	temp$y_value_mean_MSE %<>% round(3)#
	expect_that(#
		data_summary_stats %>%#
		dplyr::select(#
			y_value_mean_MSE#
		) %>%#
		round(3),#
		equals(temp)#
	)#
})
setwd('/Users/KSauby/Documents/Projects/ACS/tests/testthat')
data(Thompson1990Figure1Population)#
	# calculate y_value estimates#
	samplesizes <- data.frame(#
		seed = 1:150,#
		N.SRSWOR.plots = rep(seq(from=130, to=280, by=30), each=25)#
	)#
	y_value_mean_observed <- vector()#
	y_value_var_observed <- vector()#
		for (i in 1:dim(samplesizes)[1]) {#
			temp <- createSRS(#
				population=Thompson1990Figure1Population, #
				seed=samplesizes$seed[i], #
				n1=samplesizes$N.SRSWOR.plots[i]#
			)#
			y_value_mean_observed[i] <- mean(temp$y_value)#
			y_value_var_observed[i] <- var(temp$y_value)#
		}#
	data <- cbind(samplesizes, y_value_mean_observed, y_value_var_observed)#
	# summarise population data#
	Thompson1990Figure1Population_summary <- #
		calculatePopulationSummaryStatistics(#
			population_data		= Thompson1990Figure1Population, #
			summary.variables 	= "y_value", #
			grouping.variables 	= NULL, #
			ratio.variables 	= NULL#
		)#
	# sampling bias#
	data_summary <- data %>%#
		mutate(#
			observed_minus_true_sqd = (#
				y_value_mean_observed - #
				Thompson1990Figure1Population_summary$y_value_mean#
		)^2) %>%#
		group_by(N.SRSWOR.plots) %>%#
		summarise(#
			y_value_mean_RB = (#
				# mean of HT estimates#
				mean(y_value_mean_observed) - #
				# mu, population mean#
				Thompson1990Figure1Population_summary$y_value_mean#
			) / Thompson1990Figure1Population_summary$y_value_mean * 100,#
			y_value_var_RB = (#
				mean(y_value_var_observed) - var(y_value_mean_observed)#
			) / var(y_value_mean_observed) * 100,#
			y_value_mean_MSE = sum(observed_minus_true_sqd) / #
				length(y_value_mean_observed)#
		) %>%#
		as.data.frame#
	temp <- data_summary %>% dplyr::select(y_value_mean_RB, y_value_var_RB)#
#
	temp$y_value_mean_RB %<>% round(3)#
	temp$y_value_var_RB %<>% round(3)#
#
	data_summary_stats <- calculateSamplingBias(#
		population_data_summary	= Thompson1990Figure1Population_summary, #
		simulation_data		= data, #
		population.grouping.variables = NULL, #
		sampling.grouping.variables	= "N.SRSWOR.plots", #
		variables			= "y_value", #
		rvar				= NULL #
	) %>%#
	as.data.frame#
#
	expect_that(#
		data_summary_stats %>%#
		dplyr::select(#
			y_value_mean_RB,#
			y_value_var_RB#
		) %>%#
		round(3),#
		equals(temp)#
	)
setwd('/Users/KSauby/Documents/Projects/ACS/tests/testthat')
temp <- data_summary %>% dplyr::select(y_value_mean_MSE)#
	temp$y_value_mean_MSE %<>% round(3)#
	expect_that(#
		data_summary_stats %>%#
		dplyr::select(#
			y_value_mean_MSE#
		) %>%#
		round(3),#
		equals(temp)#
	)
setwd('/Users/KSauby/Documents/Projects/ACS/tests/testthat')
data_summary_stats
setwd('/Users/KSauby/Documents/Projects/ACS/R')
#' Calculate Simulation Data Sampling Bias#
#' #
#' @param population_data_summary Summary statistics on the species patch realizations of patches (created by \code{calculateRealizationSummaryStatistics} function).#
#' @param simulation_data Simulation data on sampling of the multiple patch realizations.#
#' @param population.grouping.variables Categorical variables with which to group the population data (e.g., artificial population number if there are more than 1)#
#' @param sampling.grouping.variables Categorical variables with which to group the simulation data (e.g., sampling design used, number of primary samples).#
#' @param variables Vector of variables for which sampling bias should be estimated.#
#' @param rvar Variables for which to use ratio estimators#
#' @return Dataframe including simulation data summary statistics, including relative bias and mean squared error (MSE) of the mean and variance.#
#' @examples#
#' # Create realizations#
#' x_start = 1#
#' x_end = 30#
#' y_start = 1#
#' y_end = 30#
#' n.networks = c(5, 15, 10, 20, 30, 40)#
#' n.realizations = 1#
#' SpeciesInfo = PlotSurveys_season1#
#' Species.Fields = c("Stricta", "Pusilla", "Cactus")#
#' cactus.realizations = createSpeciesPatchRealizations(x_start, x_end,#
#' 	y_start, y_end, buffer=5, n.networks, n.realizations, SpeciesInfo, #
#' 	start.seed=1, Species.Fields)#
#' #
#' # Sample from the realizations#
#' simulations=1#
#' nsamples=c(5,10,20,40)#
#' population <- createPopulation(x_start = 1, x_end = 30, y_start = 1, #
#' 	y_end = 30)#
#' abundance.variables = NULL#
#' occupancy.variables = c(#
#' 	"Stricta",#
#' 	"Pusilla",#
#' 	"Cactus",#
#' 	"CACA_on_Pusilla",#
#' 	"CACA_on_Stricta",#
#' 	"MEPR_on_Pusilla",#
#' 	"MEPR_on_Stricta",#
#' 	"Old_Moth_Evidence_Pusilla",#
#' 	"Old_Moth_Evidence_Stricta"#
#' 	# "Percent_Cover_Pusilla", # how do I do these? they are occupancy nor abundance#
#' 	# "Percent_Cover_Stricta",#
#' 	# "Height_Pusilla",#
#' 	# "Height_Stricta",#
#' )		#
#' patch_data = cactus.realizations#
#' # simulation_data <- sampleSpeciesPatchRealizations(patch_data, simulations, #
#' #	nsamples, population, abundance.variables, occupancy.variables)#
#' #
#' # summary.variables = occupancy.variables#
#' # grouping.variables = c("n.networks", "realization")#
#' # dataset = cactus.realizations#
#' # patch_data_summary <- calculateRealizationSummaryStatistics(dataset, #
#' # 	summary.variables, grouping.variables)#
#' # avar = NULL#
#' @export#
#
calculateSamplingBias <- function(#
	population_data_summary, #
	simulation_data, #
	population.grouping.variables, #
	sampling.grouping.variables,#
	variables, #
	rvar#
) #
{#
	variables <- c(variables, rvar)#
	. <- NULL#
	X <- merge(population_data_summary, simulation_data, by=population.grouping.variables)#
	# number of simulations#
	n_sims <- X %>% #
		group_by_(.dots = c(#
			population.grouping.variables, #
			sampling.grouping.variables#
		)) %>%#
		summarise(n_sims = n()#
		)#
	X <- merge(#
		X, #
		n_sims, #
		by = c(#
			population.grouping.variables, #
			sampling.grouping.variables#
		)#
	)#
	# mean of observed means	#
	temp <- X %>% group_by_(.dots = c(#
		population.grouping.variables, #
		sampling.grouping.variables, #
		"n_sims"#
	))#
	A <- vector("list", length(variables))#
	for (i in 1:length(variables)) {#
		A[[i]] <- list()#
		# observed mean#
		A[[i]] <- temp %>%#
			summarise_(#
				var_mean_of_observed_means = interp(#
					~mean(var, na.rm = TRUE), #
					var = #
					as.name(#
						paste(#
							variables[i],#
							"_mean_observed",#
							sep=""#
						)#
					)#
				),#
				var_n = interp(#
					~length(var[which(!is.na(var))]), #
					var = #
					as.name(#
						paste(#
							variables[i],#
							"_mean_observed",#
							sep=""#
						)#
					)#
				)#
			) %>%#
			setnames(#
		      	.,#
		      	"var_mean_of_observed_means",#
		      	paste(#
		      		variables[i],#
		      		"_mean_of_observed_means",#
		      		sep=""#
				)#
			) %>%#
			setnames(#
		      	.,#
		      	"var_n",#
		      	paste(#
		      		variables[i],#
		      		"_mean_of_observed_means_n",#
		      		sep=""#
				)#
			)#
	}#
	Y <- Reduce(#
		function(x, y) merge(#
			x, y,#
			by=c(#
				population.grouping.variables, #
				sampling.grouping.variables, #
				"n_sims"#
			)#
		),#
		A#
	)#
	X <- merge(#
		X, #
		Y, #
		by=c(#
			population.grouping.variables, #
			sampling.grouping.variables,#
			"n_sims"#
		)#
	)#
	# calculate squared differences for each simulation and variable#
	for (i in 1:length(variables)) {#
		X %<>%#
			mutate(#
				var_observed_minus_true = #
						# (observed -#
						(eval(#
							parse(#
								text=paste(#
									"X$", #
									variables[i], #
									"_mean_observed", #
									sep=""#
								)#
							)#
						) - #
						# true)#
						eval(#
							parse(#
								text=paste(#
									"X$", #
									variables[i], #
									"_mean", #
									sep=""#
								)#
							)#
						)#
				)^2#
			) %>%#
			setnames(#
				., #
				"var_observed_minus_true", #
				paste(#
					variables[i], #
					"_mean_observed_minus_true", #
					sep=""#
				)#
			)#
	}#
	# calculate squared differences (observed - mean of observed) for each variable#
	for (i in 1:length(variables)) {#
		X %<>%#
			mutate(#
				var_observed_minus_mean_of_observed_means = #
						# (observed -#
						eval(#
							parse(#
								text = paste(#
									"X$", #
									variables[i], #
									"_mean_observed", #
									sep=""#
								)#
							)#
						) - #
						# true)#
						eval(#
							parse(#
								text = paste(#
									"X$", #
									variables[i], #
									"_mean_of_observed_means", #
									sep=""#
								)#
							)#
						)#
			) %>%#
			setnames(#
				., #
				"var_observed_minus_mean_of_observed_means", #
				paste(#
					variables[i], #
					"_observed_minus_mean_of_observed_means", #
					sep=""#
				)#
			)#
	}#
	# calculate bias and MSE#
	A <- vector("list", length(variables))#
	X.grp <- X %>% group_by_(.dots=c(#
		population.grouping.variables, #
		sampling.grouping.variables, #
		"n_sims"#
	))#
	for (i in 1:length(variables)) {#
		A[[i]] <- list()#
		A[[i]] <- X.grp %>%#
			summarise_(#
				# save true mean#
				var_true_mean = interp(#
					~var[1], #
					var = #
					as.name(#
						paste(#
							variables[i],#
							"_mean", #
							sep=""#
						)#
					)#
				),#
				# calculate mean of observed means#
				var_mean_of_observed_means = interp(#
					~mean(var, na.rm = TRUE), #
					var = #
					as.name(#
						paste(#
							variables[i],#
							"_mean_observed",#
							sep=""#
						)#
					)#
				),#
				var_RB_n = interp(#
					~length(var[which(!is.na(var))]), #
					var = #
					as.name(#
						paste(#
							variables[i],#
							"_mean_observed",#
							sep=""#
						)#
					)#
				),#
				# calculate sum of MSEs#
				var_sum_of_observed_minus_true_sqrd = interp(#
					~sum(var, na.rm = TRUE), #
					var = #
					as.name(#
						paste(#
							variables[i],#
							"_mean_observed_minus_true",#
							sep=""#
						)#
					)#
				),#
				var_MSE_n = interp(#
					~length(var[which(!is.na(var))]), #
					var = #
					as.name(#
						paste(#
							variables[i],#
							"_mean_observed_minus_true",#
							sep=""#
						)#
					)#
				),#
				# calculate mean of simulated HT variance estimates#
				var_mean_of_var_estimates = interp(#
					~mean(var, na.rm = TRUE), #
					var = #
					as.name(#
						paste(#
							variables[i],#
							"_var_observed",#
							sep=""#
						)#
					)#
				),#
				var_mean_of_var_estimates_n = interp(#
					~length(var[which(!is.na(var))]), #
					var = #
					as.name(#
						paste(#
							variables[i],#
							"_var_observed",#
							sep=""#
						)#
					)#
				),#
				# calculate variance of simulated HT mean estimates#
				var_var_of_mean_estimates = interp(#
					~var(variable, na.rm = TRUE), #
					variable = #
					as.name(#
						paste(#
							variables[i],#
							"_observed_minus_mean_of_observed_means",#
							sep=""#
						)#
					)#
				),#
				var_var_of_mean_estimates_n = interp(#
					~length(var[which(!is.na(var))]), #
					var = #
					as.name(#
						paste(#
							variables[i],#
							"_observed_minus_mean_of_observed_means",#
							sep=""#
						)#
					)#
				)#
			) %>%#
				as.data.frame#
			A[[i]] %<>% #
				mutate(#
					# var_mean = Mean()#
					var_RB = 100 * #
						(var_mean_of_observed_means - var_true_mean) / #
						var_true_mean,#
					var_MSE = var_sum_of_observed_minus_true_sqrd/n_sims,#
					var_var_RB = 100 * (var_mean_of_var_estimates - #
						var_var_of_mean_estimates) / #
						var_var_of_mean_estimates,#
					var_var_RB_n = min(#
						var_mean_of_var_estimates_n, #
						var_var_of_mean_estimates_n#
					)#
				) %>%#
				setnames(#
		      		.,#
		      		"var_true_mean",#
		      		paste(#
		      			variables[i],#
		      			"_true_mean",#
		      			sep=""#
					)#
				) %>%#
				setnames(#
		      		.,#
		      		"var_RB",#
		      		paste(#
		      			variables[i],#
		      			"_mean_RB",#
		      			sep=""#
					)#
				) %>%#
				setnames(#
		      		.,#
		      		"var_MSE",#
		      		paste(#
		      			variables[i],#
		      			"_mean_MSE",#
		      			sep=""#
					)#
				) %>%#
				setnames(#
		      		.,#
		      		"var_var_RB",#
		      		paste(#
		      			variables[i],#
		      			"_var_RB",#
		      			sep=""#
					)#
				) %>%#
				# rename sample size variables#
				setnames(#
		      		.,#
		      		"var_RB_n",#
		      		paste(#
		      			variables[i],#
		      			"_mean_RB_n",#
		      			sep=""#
					)#
				) %>%#
				setnames(#
		      		.,#
		      		"var_MSE_n",#
		      		paste(#
		      			variables[i],#
		      			"_mean_MSE_n",#
		      			sep=""#
					)#
				) %>%#
				setnames(#
		      		.,#
		      		"var_var_RB_n",#
		      		paste(#
		      			variables[i],#
		      			"_var_RB_n",#
		      			sep=""#
					)#
				) %>%#
				dplyr::select(-c(#
					var_mean_of_observed_means,#
					var_sum_of_observed_minus_true_sqrd,#
					var_mean_of_var_estimates,#
					var_mean_of_var_estimates_n,#
					var_var_of_mean_estimates,#
					var_var_of_mean_estimates_n#
				))#
	}#
	Y <- Reduce(#
		function(x, y) merge(#
			x, y,#
			by=c(#
				population.grouping.variables, #
				sampling.grouping.variables, #
				"n_sims"#
			)#
		),#
		A#
	)#
#	X$Prop.Area.Surveyed = with(X, N.Total.plots/N)		#
	return(Y)#
}
setwd('/Users/KSauby/Documents/Projects/ACS/tests/testthat')
test_that("calculateSamplingBias, bias calculation of mean and variances", {#
	# PREP DATA#
	data(Thompson1990Figure1Population)#
	# calculate y_value estimates#
	samplesizes <- data.frame(#
		seed = 1:150,#
		N.SRSWOR.plots = rep(seq(from=130, to=280, by=30), each=25)#
	)#
	y_value_mean_observed <- vector()#
	y_value_var_observed <- vector()#
		for (i in 1:dim(samplesizes)[1]) {#
			temp <- createSRS(#
				population=Thompson1990Figure1Population, #
				seed=samplesizes$seed[i], #
				n1=samplesizes$N.SRSWOR.plots[i]#
			)#
			y_value_mean_observed[i] <- mean(temp$y_value)#
			y_value_var_observed[i] <- var(temp$y_value)#
		}#
	data <- cbind(samplesizes, y_value_mean_observed, y_value_var_observed)#
	# summarise population data#
	Thompson1990Figure1Population_summary <- #
		calculatePopulationSummaryStatistics(#
			population_data		= Thompson1990Figure1Population, #
			summary.variables 	= "y_value", #
			grouping.variables 	= NULL, #
			ratio.variables 	= NULL#
		)#
	# sampling bias#
	data_summary <- data %>%#
		mutate(#
			observed_minus_true_sqd = (#
				y_value_mean_observed - #
				Thompson1990Figure1Population_summary$y_value_mean#
		)^2) %>%#
		group_by(N.SRSWOR.plots) %>%#
		summarise(#
			y_value_mean_RB = (#
				# mean of HT estimates#
				mean(y_value_mean_observed) - #
				# mu, population mean#
				Thompson1990Figure1Population_summary$y_value_mean#
			) / Thompson1990Figure1Population_summary$y_value_mean * 100,#
			y_value_var_RB = (#
				mean(y_value_var_observed) - var(y_value_mean_observed)#
			) / var(y_value_mean_observed) * 100,#
			y_value_mean_MSE = sum(observed_minus_true_sqd) / #
				length(y_value_mean_observed)#
		) %>%#
		as.data.frame#
	temp <- data_summary %>% dplyr::select(y_value_mean_RB, y_value_var_RB)#
#
	temp$y_value_mean_RB %<>% round(3)#
	temp$y_value_var_RB %<>% round(3)#
#
	data_summary_stats <- calculateSamplingBias(#
		population_data_summary	= Thompson1990Figure1Population_summary, #
		simulation_data		= data, #
		population.grouping.variables = NULL, #
		sampling.grouping.variables	= "N.SRSWOR.plots", #
		variables			= "y_value", #
		rvar				= NULL #
	) %>%#
	as.data.frame#
#
	expect_that(#
		data_summary_stats %>%#
		dplyr::select(#
			y_value_mean_RB,#
			y_value_var_RB#
		) %>%#
		round(3),#
		equals(temp)#
	)#
})#
test_that("calculateSamplingBias, MSE function", {#
	temp <- data_summary %>% dplyr::select(y_value_mean_MSE)#
	temp$y_value_mean_MSE %<>% round(3)#
	expect_that(#
		data_summary_stats %>%#
		dplyr::select(#
			y_value_mean_MSE#
		) %>%#
		round(3),#
		equals(temp)#
	)#
})
setwd('/Users/KSauby/Documents/Projects/ACS/tests/testthat')
# PREP DATA#
	data(Thompson1990Figure1Population)#
	# calculate y_value estimates#
	samplesizes <- data.frame(#
		seed = 1:150,#
		N.SRSWOR.plots = rep(seq(from=130, to=280, by=30), each=25)#
	)#
	y_value_mean_observed <- vector()#
	y_value_var_observed <- vector()#
		for (i in 1:dim(samplesizes)[1]) {#
			temp <- createSRS(#
				population=Thompson1990Figure1Population, #
				seed=samplesizes$seed[i], #
				n1=samplesizes$N.SRSWOR.plots[i]#
			)#
			y_value_mean_observed[i] <- mean(temp$y_value)#
			y_value_var_observed[i] <- var(temp$y_value)#
		}#
	data <- cbind(samplesizes, y_value_mean_observed, y_value_var_observed)#
	# summarise population data#
	Thompson1990Figure1Population_summary <- #
		calculatePopulationSummaryStatistics(#
			population_data		= Thompson1990Figure1Population, #
			summary.variables 	= "y_value", #
			grouping.variables 	= NULL, #
			ratio.variables 	= NULL#
		)#
	# sampling bias#
	data_summary <- data %>%#
		mutate(#
			observed_minus_true_sqd = (#
				y_value_mean_observed - #
				Thompson1990Figure1Population_summary$y_value_mean#
		)^2) %>%#
		group_by(N.SRSWOR.plots) %>%#
		summarise(#
			y_value_mean_RB = (#
				# mean of HT estimates#
				mean(y_value_mean_observed) - #
				# mu, population mean#
				Thompson1990Figure1Population_summary$y_value_mean#
			) / Thompson1990Figure1Population_summary$y_value_mean * 100,#
			y_value_var_RB = (#
				mean(y_value_var_observed) - var(y_value_mean_observed)#
			) / var(y_value_mean_observed) * 100,#
			y_value_mean_MSE = sum(observed_minus_true_sqd) / #
				length(y_value_mean_observed)#
		) %>%#
		as.data.frame#
	temp <- data_summary %>% dplyr::select(y_value_mean_RB, y_value_var_RB)#
#
	temp$y_value_mean_RB %<>% round(3)#
	temp$y_value_var_RB %<>% round(3)#
#
	data_summary_stats <- calculateSamplingBias(#
		population_data_summary	= Thompson1990Figure1Population_summary, #
		simulation_data		= data, #
		population.grouping.variables = NULL, #
		sampling.grouping.variables	= "N.SRSWOR.plots", #
		variables			= "y_value", #
		rvar				= NULL #
	) %>%#
	as.data.frame#
#
	expect_that(#
		data_summary_stats %>%#
		dplyr::select(#
			y_value_mean_RB,#
			y_value_var_RB#
		) %>%#
		round(3),#
		equals(temp)#
	)
setwd('/Users/KSauby/Documents/Projects/ACS/tests/testthat')
temp <- data_summary %>% dplyr::select(y_value_mean_MSE)#
	temp$y_value_mean_MSE %<>% round(3)#
	expect_that(#
		data_summary_stats %>%#
		dplyr::select(#
			y_value_mean_MSE#
		) %>%#
		round(3),#
		equals(temp)#
	)
?expect_that
setwd('/Users/KSauby/Documents/Projects/ACS/tests/testthat')
expect_that(#
		data_summary_stats %>%#
		dplyr::select(#
			y_value_mean_MSE#
		) %>%#
		round(3),#
		equals(1),#
		label="calculateSamplingBias, MSE function"#
	)
setwd('/Users/KSauby/Documents/Projects/ACS/tests/testthat')
expect_that(#
		data_summary_stats %>%#
		dplyr::select(#
			y_value_mean_RB,#
			y_value_var_RB#
		) %>%#
		round(3),#
		equals(1),#
		label="calculateSamplingBias, bias calculation of mean and variances"#
	)#
	expect_that(#
		data_summary_stats %>%#
		dplyr::select(#
			y_value_mean_MSE#
		) %>%#
		round(3),#
		equals(1),#
		label="calculateSamplingBias, MSE function"#
	)
setwd('/Users/KSauby/Documents/Projects/ACS/tests/testthat')
test_that("calculateSamplingBias, bias calculation of mean and variances", {#
	# PREP DATA#
	data(Thompson1990Figure1Population)#
	# calculate y_value estimates#
	samplesizes <- data.frame(#
		seed = 1:150,#
		N.SRSWOR.plots = rep(seq(from=130, to=280, by=30), each=25)#
	)#
	y_value_mean_observed <- vector()#
	y_value_var_observed <- vector()#
		for (i in 1:dim(samplesizes)[1]) {#
			temp <- createSRS(#
				population=Thompson1990Figure1Population, #
				seed=samplesizes$seed[i], #
				n1=samplesizes$N.SRSWOR.plots[i]#
			)#
			y_value_mean_observed[i] <- mean(temp$y_value)#
			y_value_var_observed[i] <- var(temp$y_value)#
		}#
	data <- cbind(samplesizes, y_value_mean_observed, y_value_var_observed)#
	# summarise population data#
	Thompson1990Figure1Population_summary <- #
		calculatePopulationSummaryStatistics(#
			population_data		= Thompson1990Figure1Population, #
			summary.variables 	= "y_value", #
			grouping.variables 	= NULL, #
			ratio.variables 	= NULL#
		)#
	# sampling bias#
	data_summary <- data %>%#
		mutate(#
			observed_minus_true_sqd = (#
				y_value_mean_observed - #
				Thompson1990Figure1Population_summary$y_value_mean#
		)^2) %>%#
		group_by(N.SRSWOR.plots) %>%#
		summarise(#
			y_value_mean_RB = (#
				# mean of HT estimates#
				mean(y_value_mean_observed) - #
				# mu, population mean#
				Thompson1990Figure1Population_summary$y_value_mean#
			) / Thompson1990Figure1Population_summary$y_value_mean * 100,#
			y_value_var_RB = (#
				mean(y_value_var_observed) - var(y_value_mean_observed)#
			) / var(y_value_mean_observed) * 100,#
			y_value_mean_MSE = sum(observed_minus_true_sqd) / #
				length(y_value_mean_observed)#
		) %>%#
		as.data.frame#
	temp <- data_summary %>% dplyr::select(y_value_mean_RB, y_value_var_RB)#
#
	temp$y_value_mean_RB %<>% round(3)#
	temp$y_value_var_RB %<>% round(3)#
#
	data_summary_stats <- calculateSamplingBias(#
		population_data_summary	= Thompson1990Figure1Population_summary, #
		simulation_data		= data, #
		population.grouping.variables = NULL, #
		sampling.grouping.variables	= "N.SRSWOR.plots", #
		variables			= "y_value", #
		rvar				= NULL #
	) %>%#
	as.data.frame#
#
	expect_that(#
		data_summary_stats %>%#
		dplyr::select(#
			y_value_mean_RB,#
			y_value_var_RB#
		) %>%#
		round(3),#
		equals(1),#
		label="calculateSamplingBias, bias calculation of mean and variances"#
	)#
	expect_that(#
		data_summary_stats %>%#
		dplyr::select(#
			y_value_mean_MSE#
		) %>%#
		round(3),#
		equals(1),#
		label="calculateSamplingBias, MSE function"#
	)#
})
setwd('/Users/KSauby/Documents/Projects/ACS/tests/testthat')
test_that("calculateSamplingBias", {#
	# PREP DATA#
	data(Thompson1990Figure1Population)#
	# calculate y_value estimates#
	samplesizes <- data.frame(#
		seed = 1:150,#
		N.SRSWOR.plots = rep(seq(from=130, to=280, by=30), each=25)#
	)#
	y_value_mean_observed <- vector()#
	y_value_var_observed <- vector()#
		for (i in 1:dim(samplesizes)[1]) {#
			temp <- createSRS(#
				population=Thompson1990Figure1Population, #
				seed=samplesizes$seed[i], #
				n1=samplesizes$N.SRSWOR.plots[i]#
			)#
			y_value_mean_observed[i] <- mean(temp$y_value)#
			y_value_var_observed[i] <- var(temp$y_value)#
		}#
	data <- cbind(samplesizes, y_value_mean_observed, y_value_var_observed)#
	# summarise population data#
	Thompson1990Figure1Population_summary <- #
		calculatePopulationSummaryStatistics(#
			population_data		= Thompson1990Figure1Population, #
			summary.variables 	= "y_value", #
			grouping.variables 	= NULL, #
			ratio.variables 	= NULL#
		)#
	# sampling bias#
	data_summary <- data %>%#
		mutate(#
			observed_minus_true_sqd = (#
				y_value_mean_observed - #
				Thompson1990Figure1Population_summary$y_value_mean#
		)^2) %>%#
		group_by(N.SRSWOR.plots) %>%#
		summarise(#
			y_value_mean_RB = (#
				# mean of HT estimates#
				mean(y_value_mean_observed) - #
				# mu, population mean#
				Thompson1990Figure1Population_summary$y_value_mean#
			) / Thompson1990Figure1Population_summary$y_value_mean * 100,#
			y_value_var_RB = (#
				mean(y_value_var_observed) - var(y_value_mean_observed)#
			) / var(y_value_mean_observed) * 100,#
			y_value_mean_MSE = sum(observed_minus_true_sqd) / #
				length(y_value_mean_observed)#
		) %>%#
		as.data.frame#
	temp <- data_summary %>% dplyr::select(y_value_mean_RB, y_value_var_RB)#
#
	temp$y_value_mean_RB %<>% round(3)#
	temp$y_value_var_RB %<>% round(3)#
#
	data_summary_stats <- calculateSamplingBias(#
		population_data_summary	= Thompson1990Figure1Population_summary, #
		simulation_data		= data, #
		population.grouping.variables = NULL, #
		sampling.grouping.variables	= "N.SRSWOR.plots", #
		variables			= "y_value", #
		rvar				= NULL #
	) %>%#
	as.data.frame#
#
	expect_that(#
		data_summary_stats %>%#
		dplyr::select(#
			y_value_mean_RB,#
			y_value_var_RB#
		) %>%#
		round(3),#
		equals(temp),#
		label="calculateSamplingBias, bias calculation of mean and variances"#
	)#
	expect_that(#
		data_summary_stats %>%#
		dplyr::select(#
			y_value_mean_MSE#
		) %>%#
		round(3),#
		equals(temp),#
		label="calculateSamplingBias, MSE function"#
	)#
})
setwd('/Users/KSauby/Documents/Projects/ACS/tests/testthat')
data_summary_stats %>%#
		dplyr::select(#
			y_value_mean_MSE#
		) %>%#
		round(3)
setwd('/Users/KSauby/Documents/Projects/ACS/tests/testthat')
test_that("calculateSamplingBias", {#
	# PREP DATA#
	data(Thompson1990Figure1Population)#
	# calculate y_value estimates#
	samplesizes <- data.frame(#
		seed = 1:150,#
		N.SRSWOR.plots = rep(seq(from=130, to=280, by=30), each=25)#
	)#
	y_value_mean_observed <- vector()#
	y_value_var_observed <- vector()#
		for (i in 1:dim(samplesizes)[1]) {#
			temp <- createSRS(#
				population=Thompson1990Figure1Population, #
				seed=samplesizes$seed[i], #
				n1=samplesizes$N.SRSWOR.plots[i]#
			)#
			y_value_mean_observed[i] <- mean(temp$y_value)#
			y_value_var_observed[i] <- var(temp$y_value)#
		}#
	data <- cbind(samplesizes, y_value_mean_observed, y_value_var_observed)#
	# summarise population data#
	Thompson1990Figure1Population_summary <- #
		calculatePopulationSummaryStatistics(#
			population_data		= Thompson1990Figure1Population, #
			summary.variables 	= "y_value", #
			grouping.variables 	= NULL, #
			ratio.variables 	= NULL#
		)#
	# sampling bias#
	data_summary <- data %>%#
		mutate(#
			observed_minus_true_sqd = (#
				y_value_mean_observed - #
				Thompson1990Figure1Population_summary$y_value_mean#
		)^2) %>%#
		group_by(N.SRSWOR.plots) %>%#
		summarise(#
			y_value_mean_RB = (#
				# mean of HT estimates#
				mean(y_value_mean_observed) - #
				# mu, population mean#
				Thompson1990Figure1Population_summary$y_value_mean#
			) / Thompson1990Figure1Population_summary$y_value_mean * 100,#
			y_value_var_RB = (#
				mean(y_value_var_observed) - var(y_value_mean_observed)#
			) / var(y_value_mean_observed) * 100,#
			y_value_mean_MSE = sum(observed_minus_true_sqd) / #
				length(y_value_mean_observed)#
		) %>%#
		as.data.frame#
	temp <- data_summary %>% dplyr::select(y_value_mean_RB, y_value_var_RB)#
#
	temp$y_value_mean_RB %<>% round(3)#
	temp$y_value_var_RB %<>% round(3)#
#
	data_summary_stats <- calculateSamplingBias(#
		population_data_summary	= Thompson1990Figure1Population_summary, #
		simulation_data		= data, #
		population.grouping.variables = NULL, #
		sampling.grouping.variables	= "N.SRSWOR.plots", #
		variables			= "y_value", #
		rvar				= NULL #
	) %>%#
	as.data.frame#
#
	expect_that(#
		data_summary_stats %>%#
		dplyr::select(#
			y_value_mean_RB,#
			y_value_var_RB#
		) %>%#
		round(3),#
		equals(temp),#
		label="calculateSamplingBias, bias calculation of mean and variances"#
	)#
	temp <- data_summary %>% dplyr::select(y_value_mean_MSE)#
	temp$y_value_mean_MSE %<>% round(3)#
	expect_that(#
		data_summary_stats %>%#
		dplyr::select(#
			y_value_mean_MSE#
		) %>%#
		round(3),#
		equals(temp),#
		label="calculateSamplingBias, MSE function"#
	)#
})
setwd('/Users/KSauby/Documents/Projects/ACS/tests/testthat')
test_that("calculateRE", {#
	# ACS SAMPLING#
	y_value_var_observed <- vector()#
	total_sample_size <- vector()#
	for (i in 1:dim(samplesizes)[1]) {#
		temp <- createACS(#
			population=Thompson1990Figure1Population, #
			seed=samplesizes$seed[i], #
			n1=samplesizes$N.SRSWOR.plots[i],#
			y_variable="y_value"#
		)#
		y_value_mean_observed[i] <- y_HT(#
			y = temp$y_value,#
			N = dim(Thompson1990Figure1Population)[1],#
			n1 = samplesizes$N.SRSWOR.plots[i],#
			m = temp$m#
		)#
		y_value_var_observed[i] <- var_y_HT(#
			y = temp$y_value,#
			N = dim(Thompson1990Figure1Population)[1],#
			n1 = samplesizes$N.SRSWOR.plots[i],#
			m = temp$m#
		)#
		total_sample_size[i] <- dim(temp)[1]#
	}#
	ACSdata <- cbind(#
		samplesizes,#
		y_value_mean_observed,#
		y_value_var_observed,#
		total_sample_size#
	)#
	temp <- simdata_all %>%#
		group_by_(.dots = c(#
			population.grouping.variables, #
			sampling.grouping.variables#
		)) %>%#
		summarise(#
			N.ACS.plots_mean = round(mean(N.ACS.plots, na.rm=T),0),#
			N.ACS.plots_var = var(N.ACS.plots, na.rm=T),#
			N.Total.plots_mean = round(mean(N.Total.plots, na.rm=T),0),#
			N.Total.plots_var = var(N.Total.plots, na.rm=T)#
		)#
	ACSdata_summary_stats <- calculateSamplingBias(#
		population_data_summary	= Thompson1990Figure1Population_summary, #
		simulation_data		= ACSdata, #
		population.grouping.variables = NULL, #
		sampling.grouping.variables	= "N.Total.plots", #
		variables			= "y_value", #
		rvar				= NULL #
	) %>%#
	as.data.frame#
	RE_values <- data_summary_stats$y_value_mean_MSE / #
		ACSdata_summary_stats$y_value_mean_MSE#
	expect_that(#
		calculateRE(#
			MSE_ComparisonSamplingDesign = ACSdata_summary_stats,#
			population_data = Thompson1990Figure1Population,#
			population.grouping.variables = NULL,#
			sampling.grouping.variables = "N.Total.plots",#
			variables = "y_value"#
		) %$% y_value_mean_RE,#
		equals(RE_values)#
	)#
})
setwd('/Users/KSauby/Documents/Projects/ACS/tests/testthat')
# ACS SAMPLING#
	y_value_var_observed <- vector()#
	total_sample_size <- vector()#
	for (i in 1:dim(samplesizes)[1]) {#
		temp <- createACS(#
			population=Thompson1990Figure1Population, #
			seed=samplesizes$seed[i], #
			n1=samplesizes$N.SRSWOR.plots[i],#
			y_variable="y_value"#
		)#
		y_value_mean_observed[i] <- y_HT(#
			y = temp$y_value,#
			N = dim(Thompson1990Figure1Population)[1],#
			n1 = samplesizes$N.SRSWOR.plots[i],#
			m = temp$m#
		)#
		y_value_var_observed[i] <- var_y_HT(#
			y = temp$y_value,#
			N = dim(Thompson1990Figure1Population)[1],#
			n1 = samplesizes$N.SRSWOR.plots[i],#
			m = temp$m#
		)#
		total_sample_size[i] <- dim(temp)[1]#
	}#
	ACSdata <- cbind(#
		samplesizes,#
		y_value_mean_observed,#
		y_value_var_observed,#
		total_sample_size#
	)
dim(ACSdata)
head(ACSdata)
setwd('/Users/KSauby/Documents/Projects/ACS/tests/testthat')
temp <- ACSdata %>%#
		group_by(N.SRSWOR.plots) %>%#
		summarise(total_sample_size = round(mean(total_sample_size, na.rm=T),0))
temp
setwd('/Users/KSauby/Documents/Projects/ACS/tests/testthat')
temp <- ACSdata %>%#
		group_by(N.SRSWOR.plots) %>%#
		summarise(total_sample_size = round(mean(total_sample_size, na.rm=T),0))#
	ACSdata_re <- ACSdata %>% merge(temp, by=c(N.SRSWOR.plots))
head(ACSdata)
setwd('/Users/KSauby/Documents/Projects/ACS/tests/testthat')
temp <- ACSdata %>%#
		group_by(N.SRSWOR.plots) %>%#
		summarise(total_sample_size = round(mean(total_sample_size, na.rm=T),0))#
	ACSdata_re <- ACSdata %>% merge(temp, by=c(N.SRSWOR.plots))
setwd('/Users/KSauby/Documents/Projects/ACS/tests/testthat')
temp <- ACSdata %>%#
		group_by(N.SRSWOR.plots) %>%#
		summarise(total_sample_size = round(mean(total_sample_size, na.rm=T),0))#
	ACSdata_re <- ACSdata %>% merge(temp, by="N.SRSWOR.plots")
head(ACSdata_re)
setwd('/Users/KSauby/Documents/Projects/ACS/tests/testthat')
# ACS SAMPLING#
	y_value_var_observed <- vector()#
	total_sample_size <- vector()#
	for (i in 1:dim(samplesizes)[1]) {#
		temp <- createACS(#
			population=Thompson1990Figure1Population, #
			seed=samplesizes$seed[i], #
			n1=samplesizes$N.SRSWOR.plots[i],#
			y_variable="y_value"#
		)#
		y_value_mean_observed[i] <- y_HT(#
			y = temp$y_value,#
			N = dim(Thompson1990Figure1Population)[1],#
			n1 = samplesizes$N.SRSWOR.plots[i],#
			m = temp$m#
		)#
		y_value_var_observed[i] <- var_y_HT(#
			y = temp$y_value,#
			N = dim(Thompson1990Figure1Population)[1],#
			n1 = samplesizes$N.SRSWOR.plots[i],#
			m = temp$m#
		)#
		total_sample_size[i] <- dim(temp)[1]#
	}#
	ACSdata <- cbind(#
		samplesizes,#
		y_value_mean_observed,#
		y_value_var_observed,#
		total_sample_size#
	)#
	temp <- ACSdata %>%#
		group_by(N.SRSWOR.plots) %>%#
		summarise(total_sample_size = round(mean(total_sample_size, na.rm=T),0))#
	ACSdata_re <- ACSdata %>% merge(temp, by="N.SRSWOR.plots")
head(ACSdata_re)
setwd('/Users/KSauby/Documents/Projects/ACS/tests/testthat')
y_value_var_observed <- vector()#
	total_sample_size <- vector()#
	for (i in 1:dim(samplesizes)[1]) {#
		temp <- createACS(#
			population=Thompson1990Figure1Population, #
			seed=samplesizes$seed[i], #
			n1=samplesizes$N.SRSWOR.plots[i],#
			y_variable="y_value"#
		)#
		y_value_mean_observed[i] <- y_HT(#
			y = temp$y_value,#
			N = dim(Thompson1990Figure1Population)[1],#
			n1 = samplesizes$N.SRSWOR.plots[i],#
			m = temp$m#
		)#
		y_value_var_observed[i] <- var_y_HT(#
			y = temp$y_value,#
			N = dim(Thompson1990Figure1Population)[1],#
			n1 = samplesizes$N.SRSWOR.plots[i],#
			m = temp$m#
		)#
		total_sample_size[i] <- dim(temp)[1]#
	}#
	ACSdata <- cbind(#
		samplesizes,#
		y_value_mean_observed,#
		y_value_var_observed,#
		total_sample_size#
	)#
	temp <- ACSdata %>%#
		group_by(N.SRSWOR.plots) %>%#
		summarise(mean_total_sample_size = round(mean(total_sample_size, na.rm=T),0))#
	ACSdata_re <- ACSdata %>% merge(temp, by="N.SRSWOR.plots")
head(ACSdata_re)
setwd('/Users/KSauby/Documents/Projects/ACS/tests/testthat')
ACSdata_summary_stats <- calculateSamplingBias(#
		population_data_summary	= Thompson1990Figure1Population_summary, #
		simulation_data		= ACSdata_re, #
		population.grouping.variables = NULL, #
		sampling.grouping.variables	= "mean_total_sample_size", #
		variables			= "y_value", #
		rvar				= NULL #
	) %>%#
	as.data.frame
dim(ACSdata_summary_stats)
ACSdata_summary_stats
setwd('/Users/KSauby/Documents/Projects/ACS/tests/testthat')
RE_values <- data_summary_stats$y_value_mean_MSE / #
		ACSdata_summary_stats$y_value_mean_MSE
setwd('/Users/KSauby/Documents/Projects/ACS/tests/testthat')
calculateRE(#
			MSE_ComparisonSamplingDesign = ACSdata_summary_stats,#
			population_data = Thompson1990Figure1Population,#
			population.grouping.variables = NULL,#
			sampling.grouping.variables = "mean_total_sample_size",#
			variables = "y_value"#
		)
setwd('/Users/KSauby/Documents/Projects/ACS/tests/testthat')
MSE_ComparisonSamplingDesign = ACSdata_summary_stats
setwd('/Users/KSauby/Documents/Projects/ACS/tests/testthat')
population_data = Thompson1990Figure1Population
setwd('/Users/KSauby/Documents/Projects/ACS/tests/testthat')
population.grouping.variables = NULL
setwd('/Users/KSauby/Documents/Projects/ACS/tests/testthat')
sampling.grouping.variables = NULL
setwd('/Users/KSauby/Documents/Projects/ACS/tests/testthat')
sample.size.variable = "mean_total_sample_size"
setwd('/Users/KSauby/Documents/Projects/ACS/tests/testthat')
variables = "y_value"
setwd('/Users/KSauby/Documents/Projects/ACS/R')
X <- MSE_ComparisonSamplingDesign
head(X)
head(ACSdata_summary_stats)
setwd('/Users/KSauby/Documents/Projects/ACS/R')
X <- MSE_ComparisonSamplingDesign %>%#
		setnames(sample.size.variable, "sample.size.variable")
head(X)
i
i=1
setwd('/Users/KSauby/Documents/Projects/ACS/R')
variances <- population_data %>% #
			group_by_(.dots=population.grouping.variables) %>% #
			summarise_(#
				population_variance = interp(#
					~var(variable, na.rm = TRUE), #
					variable = #
					as.name(variables[i])#
				)#
			)
setwd('/Users/KSauby/Documents/Projects/ACS/R')
X %<>% #
			merge(variances, by=population.grouping.variables) %>%#
			group_by_(.dots=c(#
				population.grouping.variables, #
				sampling.grouping.variables#
			)) %>% #
			summarise(#
				var_y_bar = population_variance[1]/sample.size.variable[1]#
			) %>%#
			merge(#
				X,#
				by=c(#
					population.grouping.variables, #
					sampling.grouping.variables#
				)#
			) %>%#
			mutate(#
				RE = var_y_bar /#
				# comparison sampling design#
				eval(#
					parse(#
						text=paste(#
							"temp$",#
							variables[i], #
							"_mean_MSE", #
							sep=""#
						)#
					)#
				)#
			) %>%#
			setnames(#
				., #
				"RE", #
				paste(#
					variables[i], #
					"_mean_RE", #
					sep=""#
				)#
			) %>%#
			dplyr::select(-var_y_bar)
setwd('/Users/KSauby/Documents/Projects/ACS/R')
X <- MSE_ComparisonSamplingDesign %>%#
		setnames(sample.size.variable, "sample.size.variable")
setwd('/Users/KSauby/Documents/Projects/ACS/R')
variances <- population_data %>% #
			group_by_(.dots=population.grouping.variables) %>% #
			summarise_(#
				population_variance = interp(#
					~var(variable, na.rm = TRUE), #
					variable = #
					as.name(variables[i])#
				)#
			)#
		X %<>% #
			merge(variances, by=population.grouping.variables) %>%#
			group_by_(.dots=c(#
				population.grouping.variables, #
				sampling.grouping.variables#
			))
setwd('/Users/KSauby/Documents/Projects/ACS/R')
X %<>% #
			merge(variances, by=population.grouping.variables) %>%#
			group_by_(.dots=c(#
				population.grouping.variables, #
				sampling.grouping.variables#
			)) %>% #
			summarise(#
				var_y_bar = population_variance[1]/sample.size.variable[1]#
			)
setwd('/Users/KSauby/Documents/Projects/ACS/R')
X <- MSE_ComparisonSamplingDesign %>%#
		setnames(sample.size.variable, "sample.size.variable")
setwd('/Users/KSauby/Documents/Projects/ACS/R')
variances <- population_data %>% #
			group_by_(.dots=population.grouping.variables) %>% #
			summarise_(#
				population_variance = interp(#
					~var(variable, na.rm = TRUE), #
					variable = #
					as.name(variables[i])#
				)#
			)
setwd('/Users/KSauby/Documents/Projects/ACS/R')
X %<>% #
			merge(variances, by=population.grouping.variables) %>%#
			group_by_(.dots=c(#
				population.grouping.variables, #
				sampling.grouping.variables#
			)) %>% #
			summarise(#
				var_y_bar = population_variance[1]/sample.size.variable[1]#
			)
setwd('/Users/KSauby/Documents/Projects/ACS/R')
X <- MSE_ComparisonSamplingDesign %>%#
		setnames(sample.size.variable, "sample.size.variable")
setwd('/Users/KSauby/Documents/Projects/ACS/R')
variances <- population_data %>% #
			group_by_(.dots=population.grouping.variables) %>% #
			summarise_(#
				population_variance = interp(#
					~var(variable, na.rm = TRUE), #
					variable = #
					as.name(variables[i])#
				)#
			)
setwd('/Users/KSauby/Documents/Projects/ACS/R')
variances
setwd('/Users/KSauby/Documents/Projects/ACS/R')
X %<>% #
			merge(variances, by=population.grouping.variables) %>%#
			group_by_(.dots=c(#
				population.grouping.variables, #
				sampling.grouping.variables#
			))
dim(X)
X
X %>% as.data.frame
setwd('/Users/KSauby/Documents/Projects/ACS/R')
X <- MSE_ComparisonSamplingDesign %>%#
		setnames(sample.size.variable, "sample.size.variable")
setwd('/Users/KSauby/Documents/Projects/ACS/R')
variances <- population_data %>% #
			group_by_(.dots=population.grouping.variables) %>% #
			summarise_(#
				population_variance = interp(#
					~var(variable, na.rm = TRUE), #
					variable = #
					as.name(variables[i])#
				)#
			)#
		X %<>% #
			merge(variances, by=population.grouping.variables)
X %>% as.data.frame
setwd('/Users/KSauby/Documents/Projects/ACS/tests/testthat')
MSE_ComparisonSamplingDesign = ACSdata_summary_stats
setwd('/Users/KSauby/Documents/Projects/ACS/tests/testthat')
ACSdata_summary_stats
setwd('/Users/KSauby/Documents/Projects/ACS/R')
X <- MSE_ComparisonSamplingDesign %>%#
		setnames(sample.size.variable, "sample.size.variable")
setwd('/Users/KSauby/Documents/Projects/ACS/R')
variances <- population_data %>% #
			group_by_(.dots=population.grouping.variables) %>% #
			summarise_(#
				population_variance = interp(#
					~var(variable, na.rm = TRUE), #
					variable = #
					as.name(variables[i])#
				)#
			)#
		X %<>% #
			merge(variances, by=population.grouping.variables)
X
setwd('/Users/KSauby/Documents/Projects/ACS/R')
X <- MSE_ComparisonSamplingDesign %>%#
		setnames(sample.size.variable, "sample.size.variable")
setwd('/Users/KSauby/Documents/Projects/ACS/tests/testthat')
MSE_ComparisonSamplingDesign = ACSdata_summary_stats
setwd('/Users/KSauby/Documents/Projects/ACS/R')
MSE_ComparisonSamplingDesign
setwd('/Users/KSauby/Documents/Projects/ACS/R')
X <- MSE_ComparisonSamplingDesign %>%#
		setnames(sample.size.variable, "sample.size.variable")
setwd('/Users/KSauby/Documents/Projects/ACS/R')
MSE_ComparisonSamplingDesign
setwd('/Users/KSauby/Documents/Projects/ACS/R')
X <- NULL#
	X <- MSE_ComparisonSamplingDesign %>%#
		setnames(sample.size.variable, "sample.size.variable")
setwd('/Users/KSauby/Documents/Projects/ACS/tests/testthat')
ACSdata_summary_stats
setwd('/Users/KSauby/Documents/Projects/ACS/tests/testthat')
MSE_ComparisonSamplingDesign = ACSdata_summary_stats
setwd('/Users/KSauby/Documents/Projects/ACS/tests/testthat')
MSE_ComparisonSamplingDesign
setwd('/Users/KSauby/Documents/Projects/ACS/R')
X <- NULL#
	X <- MSE_ComparisonSamplingDesign %>%#
		setnames(sample.size.variable, "sample.size.variable")

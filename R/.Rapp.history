*.84.07
4.07*.8
4.95*.8
4.95*.9
42+1+5+6
5.82+2.32
8.14*4
24.44/250
68/500
install.packages("blogdown")
blogdown::install_hugo()
library(blogdown)
blogdown::install_hugo()
library(blogdown)
blogdown::install_hugo()
blogdown::new_site()
library(dplyr)
.libPaths()
library(dplyr)
library(plotly)
library(magrittr)
.libPaths()
library(ACSampling)
setwd('/Users/KSauby/Documents/Projects/ACSampling_project/code/Manuscript/Figure_generation')
temp <- simulation_data_summary_table_original_yHT %>% #filter(SamplingDesign=="RACS") %>%#
filter(Plots=="Horvitz Thompson Mean (All Plots)")#
#
temp$MEPR_on_Stricta_ratio_true_mean %<>% round(3)#
temp$CACA_on_Stricta_ratio_true_mean %<>% round(3)#
temp$Old_Moth_Evidence_Stricta_ratio_true_mean %<>% round(3)
setwd('/Users/KSauby/Documents/Projects/ACSampling_project/code/Manuscript/simulations')
# -----------------------------------------------------------------------------##
# ABUNDANCE VARIABLES#
# -----------------------------------------------------------------------------##
# -----------------------------------------------------------------------------##
# OCCUPANCY VARIABLES#
# -----------------------------------------------------------------------------##
ovar <- c(#
	"Stricta",#
	"Pusilla",#
	"Cactus"#
)#
# -----------------------------------------------------------------------------##
# RATIO VARIABLES#
# -----------------------------------------------------------------------------##
rvar <- c(#
	"MEPR_on_Stricta",#
	"CACA_on_Stricta",#
	"Percent_Cover_Stricta",#
	"Height_Stricta",#
	#"Old_Moth_Evidence_Pusilla",#
	"Old_Moth_Evidence_Stricta"#
)#
#
# "Percent_Cover_Pusilla",#
# "Height_Pusilla",#
# )
setwd('/Users/KSauby/Documents/Projects/ACSampling_project/code/Manuscript/Figure_generation')
temp <- simulation_data_summary_table_original_yHT %>% #filter(SamplingDesign=="RACS") %>%#
filter(Plots=="Horvitz Thompson Mean (All Plots)")#
#
temp$MEPR_on_Stricta_ratio_true_mean %<>% round(3)#
temp$CACA_on_Stricta_ratio_true_mean %<>% round(3)#
temp$Old_Moth_Evidence_Stricta_ratio_true_mean %<>% round(3)
setwd('/Users/KSauby/Documents/Projects/ACSampling_project/code/Manuscript/simulations')
population.grouping.variables	<- c("population")#
sampling.grouping.variables <- c("N.SRSWOR.plots", "SamplingDesign", "Plots")#
statistics 			<- c("mean", "var")#
ratio.statistics	<- c("mean")#
#
patch_data_summary_wide <- createWidePopulationSummaryStatistics(#
	PopulationSummaryStatistics = patch_data_summary,#
	ovar = ovar,#
	rvar = rvar#
)#
#
# -----------------------------------------------------------------------------##
# Simulations testing biased-ness of insects variables NOT using ratio estimator#
# -----------------------------------------------------------------------------##
#
# simdatainsect_denom <- rbind.fill(#
# 	simulation_data_25Jan17_RACS, #
# 	simulation_data_30Jan17_ACS#
# )#
# simdata %<>% setnames("n.networks", "population")#
# simdata$population %<>% as.factor()#
# levels(simdata$population) <- 1:6#
# simulation_data_summary_table_original_insectdenom = calculateSamplingBias(#
# 	population_data_summary	= patch_data_summary_wide, #
# 	simulation_data		= simdata,#
# 	sampling.grouping.variables	= sampling.grouping.variables, #
# 	population.grouping.variables = "population",#
# 	ovar			= c(ovar,rvar), #
# 	rvar				= rvar#
# )#
#
# simulation_data_summary_table_original_insectdenom %<>% filter(SamplingDesign=="RACS")#
#
# -----------------------------------------------------------------------------##
# Sampling Bias - original Y_HT formula#
# -----------------------------------------------------------------------------##
simulation_data_summary_table_original_yHT = calculateSamplingBias(#
	population_data_summary	= patch_data_summary_wide, #
	simulation_data		= simdata_all, #
	sampling.grouping.variables	= sampling.grouping.variables, #
	population.grouping.variables = population.grouping.variables,#
	ovar			= ovar, #
	rvar			= rvar,#
	o_rvar			= "Stricta"#
)#
simulation_data_summary_table_original_yHT_CACA_stricta = calculateSamplingBias(#
	population_data_summary	= patch_data_summary_wide, #
	simulation_data		= simdata_all, #
	sampling.grouping.variables	= sampling.grouping.variables, #
	population.grouping.variables = population.grouping.variables,#
	ovar			= ovar, #
	rvar				= rvar#
)#
#
simulation_data_summary_table_ACS <- simulation_data_summary_table_original_yHT %>% filter(SamplingDesign=="ACS")#
#
simulation_data_summary_table_RACS <- simulation_data_summary_table_original_yHT %>% filter(SamplingDesign=="RACS")#
setwd("/Users/KSauby/Documents/Projects/ACSampling_project")#
	cache("simulation_data_summary_table_original_yHT")
setwd('/Users/KSauby/Documents/Projects/ACSampling_project')
library(ProjectTemplate)#
#
# when working on a Windows computer#
# setwd("C:/Users/KSauby/Dropbox/gradschool/Research/Projects/sampling")#
#
# load project#
load.project()
setwd('/Users/KSauby/Documents/Projects/ACSampling_project/code/Manuscript/simulations')
# -----------------------------------------------------------------------------##
# ABUNDANCE VARIABLES#
# -----------------------------------------------------------------------------##
# -----------------------------------------------------------------------------##
# OCCUPANCY VARIABLES#
# -----------------------------------------------------------------------------##
ovar <- c(#
	"Stricta",#
	"Pusilla",#
	"Cactus"#
)#
# -----------------------------------------------------------------------------##
# RATIO VARIABLES#
# -----------------------------------------------------------------------------##
rvar <- c(#
	"MEPR_on_Stricta",#
	"CACA_on_Stricta",#
	"Percent_Cover_Stricta",#
	"Height_Stricta",#
	#"Old_Moth_Evidence_Pusilla",#
	"Old_Moth_Evidence_Stricta"#
)#
#
# "Percent_Cover_Pusilla",#
# "Height_Pusilla",#
# )
setwd('/Users/KSauby/Documents/Projects/ACSampling_project/code/Manuscript/Figure_generation')
temp <- simulation_data_summary_table_original_yHT %>% #filter(SamplingDesign=="RACS") %>%#
filter(Plots=="Horvitz Thompson Mean (All Plots)")#
#
temp$MEPR_on_Stricta_ratio_true_mean %<>% round(3)#
temp$CACA_on_Stricta_ratio_true_mean %<>% round(3)#
temp$Old_Moth_Evidence_Stricta_ratio_true_mean %<>% round(3)
setwd('/Users/KSauby/Documents/Projects/ACSampling_project/code/Manuscript/Figure_generation')
# bias#
X <- temp %>%#
	dplyr::select(#
		SamplingDesign,#
		population,#
		ovar_n_sims,#
		N.SRSWOR.plots, #
		MEPR_on_Stricta_ratio_var_RB, #
		CACA_on_Stricta_ratio_var_RB,#
		Old_Moth_Evidence_Stricta_ratio_var_RB#
	) %>%#
	reshape2::melt(id.vars=c(#
		"SamplingDesign",#
		"population",#
		"N.SRSWOR.plots",#
		"ovar_n_sims"#
	)) %>%#
	arrange(N.SRSWOR.plots)#
names(X)[6] <- "RB"#
X$variable %<>% str_sub(1,6)#
#
# true values#
Y <- temp %>%#
	dplyr::select(#
		population,#
		MEPR_on_Stricta_ratio_true_mean, #
		CACA_on_Stricta_ratio_true_mean, #
		Old_Moth_Evidence_Stricta_ratio_true_mean#
	) %>%#
	reshape2::melt(id.vars=c(#
		"population"#
	))#
names(Y)[3] <- "True_Value"#
Y$variable %<>% str_sub(1,6)#
#
Y %<>% unique#
Y$True_Value <- with(Y, paste(True_Value, population))#
#
X %<>% merge(Y, by=c("population", "variable"))#
X$variable %<>% as.factor	#
levels(X$variable) <- c(#
	"a" = expression(atop("Invasive Moth on ", italic("O. stricta"))),#
	"b" = expression(atop("Native Moth on ", italic("O. stricta"))),#
	"c" = expression(atop("Moth Damage on ", italic("O. stricta")))#
)#
#X$SamplingDesign %<>% as.factor
setwd('/Users/KSauby/Documents/Projects/ACSampling_project/code/Manuscript/Figure_generation')
#X %<>% filter(Plots!="SRSWOR_data") %>% filter(Plots=="HT")#
X %<>% mutate(Estimator = "var_y_HT")#
var_bias_data_original_y_HT <- X#
var_bias_data_original_y_HT %<>%#
	mutate(#
		SamplingDesign=replace(#
			SamplingDesign,#
			SamplingDesign=="RACS",#
			"RACS (uncorrected)"#
		)#
	)#
# ----------------------------- new var_y_HT --------------------------------- ##
temp <- simulation_data_summary_table_new_yHT %>% filter(SamplingDesign=="RACS") %>%#
filter(Plots=="Horvitz Thompson Mean (All Plots)")#
#
temp$MEPR_on_Stricta_ratio_true_mean %<>% round(3)#
temp$CACA_on_Stricta_ratio_true_mean %<>% round(3)#
temp$Old_Moth_Evidence_Stricta_ratio_true_mean %<>% round(3)#
#
# bias#
X <- temp %>%#
	dplyr::select(#
		SamplingDesign,#
		population,#
		ovar_n_sims,#
		N.SRSWOR.plots, #
		MEPR_on_Stricta_ratio_var_RB, #
		CACA_on_Stricta_ratio_var_RB,#
		Old_Moth_Evidence_Stricta_ratio_var_RB#
	) %>%#
	reshape2::melt(id.vars=c(#
		"SamplingDesign",#
		"population",#
		"N.SRSWOR.plots",#
		"ovar_n_sims"#
	)) %>%#
	arrange(N.SRSWOR.plots)#
names(X)[6] <- "RB"#
X$variable %<>% str_sub(1,6)#
#
# true values#
Y <- temp %>%#
	dplyr::select(#
		population,#
		MEPR_on_Stricta_ratio_true_mean, #
		CACA_on_Stricta_ratio_true_mean, #
		Old_Moth_Evidence_Stricta_ratio_true_mean#
	) %>%#
	reshape2::melt(id.vars=c(#
		"population"#
	))#
names(Y)[3] <- "True_Value"#
Y$variable %<>% str_sub(1,6)#
#
Y %<>% unique#
Y$True_Value <- with(Y, paste(True_Value, population))#
#
X %<>% merge(Y, by=c("population", "variable"))#
X$variable %<>% as.factor	#
#
levels(X$variable) <- c(#
	"a" = expression(atop("Invasive Moth on ", italic("O. stricta"))),#
	"b" = expression(atop("Native Moth on ", italic("O. stricta"))),#
	"c" = expression(atop("Moth Damage on ", italic("O. stricta")))#
)#
#
X$SamplingDesign %<>% as.factor	#
#
X$SamplingDesign <- "RACS (corrected)"#
#
X %<>% mutate(Estimator = "var_y_RACS_HT")#
var_bias_data_new_y_HT <- X#
# ----------------------------- plot ----------------------------------------- ##
occupancy_bias_data <- rbind.fill(#
	var_bias_data_original_y_HT, #
	var_bias_data_new_y_HT#
)
setwd('/Users/KSauby/Documents/Projects/ACSampling_project/code/Manuscript/Figure_generation')
occupancy_bias_data$SamplingDesign %<>% #
	factor(levels=c(#
		"ACS", #
		"RACS (uncorrected)", #
		"RACS (corrected)"#
	))#
levels(occupancy_bias_data$SamplingDesign) <- c(#
	expression(atop("", "ACS")),#
	expression(atop("RACS", "(uncorrected)")),#
	expression(atop("RACS", "(corrected)"))#
)#
#occupancy_bias_data$Estimator %<>% as.factor#
#levels(occupancy_bias_data$Estimator) <- c(#
#	expression(vary[HT]),#
#	expression(vary["HT,RACS"])#
#)#
#occupancy_bias_data %<>% filter(#
#	population==" (Pop. 2)" |#
#	population=="(Pop. 3)"#
#	)#
#
legendposition="bottom"#
legendcolor="black"#
#x_breaks, #
x_angle=45#
xlength=6#
ylength=4#
roundn=2#
	ylab_name			= "Percent Relative Bias of the Variance Estimate"#
xlab_name			= "True Occupancy"#
x = occupancy_bias_data %>% #
	as.data.table %>%#
	setnames("RB", "y_variable") %>%#
	setnames("True_Value", "x_variable") %>%#
	setnames("N.SRSWOR.plots", "grouping_variable") %>%#
	#setnames(variable, "x.variable") %>%#
	as.data.frame %>%#
	filter(y_variable!=-Inf)#
levels(x$population) <- c(#
	"1 (Low Occ.)",#
	"2",#
	"3",#
	"4",#
	"5",#
	"6 (High Occ.)"#
)
setwd('/Users/KSauby/Documents/Projects/ACSampling_project/code/Manuscript/Figure_generation')
ggplot(#
	x, #
	aes(#
		x 		= factor(population), #
		y 		= y_variable, #
		shape 	= factor(grouping_variable), #
		colour = factor(grouping_variable)#
	)#
) +#
geom_hline(aes(yintercept=0)) +  #
geom_point(#
	aes(shape 	= factor(grouping_variable), #
		colour = factor(grouping_variable)#
		), #
	size=6, #
	na.rm=T#
) +#
geom_line(#
	aes(linetype=factor(grouping_variable),#
		colour = factor(grouping_variable),#
		group 	= factor(grouping_variable)), #
	na.rm=T#
) +#
facet_grid(SamplingDesign~variable, space="free", labeller=label_parsed) + #
guides(#
	shape=guide_legend(title="Primary Sample Size"), #
	linetype=guide_legend(title="Primary Sample Size"),#
	colour=guide_legend(title="Primary Sample Size")#
) +#
#scale_y_continuous(breaks=c(0,500,1000,1500,2000), limits=c(-100,2000)) +#
xlab("Population") +#
ylab(ylab_name) +#
theme(#
	legend.position=legendposition,#
	legend.key = element_rect(colour=NA),#
	legend.text = element_text(colour="black", size=20), ##
	legend.title = element_text(colour="black", size=20), ##
	panel.border = element_rect(colour = "black", fill=NA, #
		size=2),#
	panel.background = element_rect(linetype="solid", #
		fill="white"),#
	strip.text = element_text(face="bold", size=15),#
	strip.background = element_rect(fill="white"),#
	axis.text.y = element_text(size=14, colour="black"),#
	axis.text.x = element_text(angle=45, hjust=0.9, size=16, colour="black"),#
	axis.title.x = element_text(size=20, colour="black"),#
	axis.title.y = element_text(size=20, colour="black"), #
	text=element_text(family="serif")#
)
setwd('/Users/KSauby/Documents/Projects/ACSampling_project/code/Manuscript/Figure_generation')
temp <- simulation_data_summary_table_original_yHT %>% #filter(SamplingDesign=="RACS") %>%#
filter(Plots=="Horvitz Thompson Mean (All Plots)")#
#
temp$MEPR_on_Stricta_ratio_true_mean %<>% round(3)#
temp$CACA_on_Stricta_ratio_true_mean %<>% round(3)#
temp$Old_Moth_Evidence_Stricta_ratio_true_mean %<>% round(3)
head(temp)
setwd('/Users/KSauby/Documents/Projects/ACSampling_project/code/Manuscript/Figure_generation')
X <- temp %>%#
	dplyr::select(#
		SamplingDesign,#
		population,#
		ovar_n_sims,#
		N.SRSWOR.plots, #
		MEPR_on_Stricta_ratio_var_RB, #
		CACA_on_Stricta_ratio_var_RB,#
		Old_Moth_Evidence_Stricta_ratio_var_RB#
	) %>%#
	reshape2::melt(id.vars=c(#
		"SamplingDesign",#
		"population",#
		"N.SRSWOR.plots",#
		"ovar_n_sims"#
	)) %>%#
	arrange(N.SRSWOR.plots)
head(X)
setwd('/Users/KSauby/Documents/Projects/ACSampling_project/code/Manuscript/simulations')
population.grouping.variables	<- c("population")#
sampling.grouping.variables <- c("N.SRSWOR.plots", "SamplingDesign", "Plots")#
statistics 			<- c("mean", "var")#
ratio.statistics	<- c("mean")#
#
patch_data_summary_wide <- createWidePopulationSummaryStatistics(#
	PopulationSummaryStatistics = patch_data_summary,#
	ovar = ovar,#
	rvar = rvar#
)
setwd('/Users/KSauby/Documents/Projects/ACSampling_project/code/Manuscript/simulations')
population_data_summary	= patch_data_summary_wide
setwd('/Users/KSauby/Documents/Projects/ACSampling_project/code/Manuscript/simulations')
simulation_data		= simdata_all
setwd('/Users/KSauby/Documents/Projects/ACSampling_project/code/Manuscript/simulations')
o_rvar			= "Stricta"
setwd('/Users/KSauby/Documents/Projects/ACS/R')
rvar_variables <- paste(rvar, "_ratio", sep="")#
	. <- n_sims <- A <- B <- C <- D <- E <- I <- G <- H <- NULL#
	A <- merge(#
		population_data_summary, #
		simulation_data, #
		by=population.grouping.variables#
	)#
	# ------------------------------------------------------------------------ ##
	# OCCUPANCY VARIABLES	#
	# ------------------------------------------------------------------------ ##
	B <- A #
	# add number of simulations to dataset#
	n_sims <- B %>% #
		group_by_(.dots = c(#
			population.grouping.variables, #
			sampling.grouping.variables#
		)) %>%#
		summarise(n_sims = n())#
	B %<>% merge(#
		n_sims, #
		by = c(#
			population.grouping.variables, #
			sampling.grouping.variables#
		)#
	)#
	temp <- B %>% group_by_(.dots = c(#
		population.grouping.variables, #
		sampling.grouping.variables, #
		"n_sims"#
	))#
	C <- vector("list", length(ovar))#
	# for each of the population.grouping.variables and sampling.grouping.variables, calculate:#
	#	mean of observed means#
	#	sample size used for those calculations
setwd('/Users/KSauby/Documents/Projects/ACS/R')
ovar
i=1
setwd('/Users/KSauby/Documents/Projects/ACS/R')
C[[i]] <- list()#
		# observed mean#
		C[[i]] <- temp %>%#
			summarise_(#
				mean_of_observed_means = interp(#
					~mean(var, na.rm = TRUE), #
					var = as.name(#
						paste(#
							ovar[i],#
							"_mean_observed",#
							sep=""#
						)#
					)#
				),#
				sample_size = interp(#
					~length(var[which(!is.na(var))]), #
					var = as.name(#
						paste(#
							ovar[i],#
							"_mean_observed",#
							sep=""#
						)#
					)#
				)#
			)#
		colnames(C[[i]])[names(C[[i]]) == "mean_of_observed_means"] <- paste(#
			ovar[i],#
			"_mean_of_observed_means",#
			sep=""#
		)#
		colnames(C[[i]])[names(C[[i]]) == "sample_size"] <- paste(#
			ovar[i],#
			"_mean_of_observed_means_n",#
			sep=""#
		)#
	}#
	D <- Reduce(#
		function(x, y) merge(#
			x, y,#
			by=c(#
				population.grouping.variables, #
				sampling.grouping.variables, #
				"n_sims"#
			)#
		),#
		C#
	)#
	B %<>% merge(#
		D, #
		by=c(#
			population.grouping.variables, #
			sampling.grouping.variables,#
			"n_sims"#
		)#
	)
setwd('/Users/KSauby/Documents/Projects/ACS/R')
for (i in 1:length(ovar)) {#
		C[[i]] <- list()#
		# observed mean#
		C[[i]] <- temp %>%#
			summarise_(#
				mean_of_observed_means = interp(#
					~mean(var, na.rm = TRUE), #
					var = as.name(#
						paste(#
							ovar[i],#
							"_mean_observed",#
							sep=""#
						)#
					)#
				),#
				sample_size = interp(#
					~length(var[which(!is.na(var))]), #
					var = as.name(#
						paste(#
							ovar[i],#
							"_mean_observed",#
							sep=""#
						)#
					)#
				)#
			)#
		colnames(C[[i]])[names(C[[i]]) == "mean_of_observed_means"] <- paste(#
			ovar[i],#
			"_mean_of_observed_means",#
			sep=""#
		)#
		colnames(C[[i]])[names(C[[i]]) == "sample_size"] <- paste(#
			ovar[i],#
			"_mean_of_observed_means_n",#
			sep=""#
		)#
	}
setwd('/Users/KSauby/Documents/Projects/ACS/R')
D <- Reduce(#
		function(x, y) merge(#
			x, y,#
			by=c(#
				population.grouping.variables, #
				sampling.grouping.variables, #
				"n_sims"#
			)#
		),#
		C#
	)
setwd('/Users/KSauby/Documents/Projects/ACS/R')
B %<>% merge(#
		D, #
		by=c(#
			population.grouping.variables, #
			sampling.grouping.variables,#
			"n_sims"#
		)#
	)#
	# ------------------------------------------------------------------------ ##
	# RATIO VARIABLES	#
	# ------------------------------------------------------------------------ ##
	E <- A#
	E %<>% merge(#
		n_sims, #
		by = c(#
			population.grouping.variables, #
			sampling.grouping.variables#
		)#
	)
setwd('/Users/KSauby/Documents/Projects/ACS/R')
temp <- E %>% #
		group_by_(.dots = c(#
		population.grouping.variables, #
		sampling.grouping.variables, #
		"n_sims"#
	))#
	I <- vector("list", length(rvar_variables))#
	# for each of the population.grouping.variables and sampling.grouping.variables, calculate:#
	#	mean of observed means#
	#	sample size used for those calculations
setwd('/Users/KSauby/Documents/Projects/ACS/R')
for (i in 1:length(c(rvar_variables, o_rvar))) {#
		I[[i]] <- list()#
		I[[i]] <- temp %>%#
			summarise_(#
				mean_of_observed_means = interp(#
					~mean(var, na.rm = TRUE), #
					var = #
					as.name(#
						paste(#
							c(rvar_variables, o_rvar)[i],#
							"_mean_observed",#
							sep=""#
						)#
					)#
				),#
				sample_size = interp(#
					~length(var[which(!is.na(var))]), #
					var = #
					as.name(#
						paste(#
							c(rvar_variables, o_rvar)[i],#
							"_mean_observed",#
							sep=""#
						)#
					)#
				)#
			) %>%#
			setnames(#
		      	.,#
		      	"mean_of_observed_means",#
		      	paste(#
		      		c(rvar_variables, o_rvar)[i],#
		      		"_mean_of_observed_means",#
		      		sep=""#
				)#
			) %>%#
			setnames(#
		      	.,#
		      	"sample_size",#
		      	paste(#
		      		c(rvar_variables, o_rvar)[i],#
		      		"_mean_of_observed_means_n",#
		      		sep=""#
				)#
			)#
	}#
	G <- Reduce(#
		function(x, y) merge(#
			x, y,#
			by=c(#
				population.grouping.variables, #
				sampling.grouping.variables, #
				"n_sims"#
			)#
		),#
		I#
	)#
	E %<>% merge(#
		G, #
		by=c(#
			population.grouping.variables, #
			sampling.grouping.variables,#
			"n_sims"#
		)#
	)
setwd('/Users/KSauby/Documents/Projects/ACS/R')
E %<>% calculatedSquaredDifferences(variables=c(o_rvar, rvar_variables))#
	E %<>% calculateDifferencesinMeans(variables=c(o_rvar, rvar_variables))
setwd('/Users/KSauby/Documents/Projects/ACS/R')
calculatedSquaredDifferences <- function(dataframe, variables) {#
	# for each simulation and variable, calculate:#
	#	(observed mean - true mean)^2#
	for (i in 1:length(variables)) {#
		dataframe %<>%#
			mutate(#
				observed_minus_true_squared = #
						# observed -#
						(eval(#
							parse(#
								text=paste(#
									variables[i], #
									"_mean_observed", #
									sep=""#
								)#
							)#
						) - #
						# true#
						eval(#
							parse(#
								text = paste(#
								variables[i], #
								"_mean", #
								sep=""#
							)#
						)#
						)#
				)^2#
			) %>%#
			setnames(#
				., #
				"observed_minus_true_squared", #
				paste(#
					variables[i], #
					"_mean_observed_minus_true_squared", #
					sep=""#
				)#
			)#
	}#
	return(dataframe)#
}#
calculateDifferencesinMeans <- function(dataframe, variables) {#
	# for each simulation and variable, calculate:#
	#	observed mean - mean of observed means#
	for (i in 1:length(variables)) {#
		dataframe %<>%#
			mutate(#
				observed_minus_mean_of_observed_means = #
						# (observed -#
						eval(#
							parse(#
								text = paste(#
									variables[i], #
									"_mean_observed", #
									sep=""#
								)#
							)#
						) - #
						# true)#
						eval(#
							parse(#
								text = paste(#
									variables[i], #
									"_mean_of_observed_means", #
									sep=""#
								)#
							)#
						)#
			) %>%#
			setnames(#
				., #
				"observed_minus_mean_of_observed_means", #
				paste(#
					variables[i], #
					"_observed_minus_mean_of_observed_means", #
					sep=""#
				)#
			)#
	}#
	return(dataframe)#
}#
calculateBiasComponents	<- function(dataframe, resultslist, variables) {#
	for (i in 1:length(variables)) {#
		resultslist[[i]] <- list()#
		resultslist[[i]] <- dataframe %>%#
			summarise_(#
				# save true mean#
				mean_RB_true_mean = interp(#
					~var[1], #
					var = #
					as.name(#
						paste(#
							variables[i],#
							"_mean", #
							sep=""#
						)#
					)#
				),#
				# calculate mean of observed means#
				mean_RB_mean_of_observed_means = interp(#
					~mean(var, na.rm = TRUE), #
					var = #
					as.name(#
						paste(#
							variables[i],#
							"_mean_observed",#
							sep=""#
						)#
					)#
				),#
				# sample size used to calculate mean of observed means#
				RB_n = interp(#
					~length(var[which(!is.na(var))]), #
					var = #
					as.name(#
						paste(#
							variables[i],#
							"_mean_observed",#
							sep=""#
						)#
					)#
				),#
				# calculate MSE#
				MSE_sum_of_observed_minus_true_sqrd = interp(#
					~sum(var, na.rm = TRUE), #
					var = #
					as.name(#
						paste(#
							variables[i],#
							"_mean_observed_minus_true_squared",#
							sep=""#
						)#
					)#
				),#
				# sample size used to calculate MSE#
				MSE_n_sims = interp(#
					~length(var[which(!is.na(var))]), #
					var = #
					as.name(#
						paste(#
							variables[i],#
							"_mean_observed_minus_true_squared",#
							sep=""#
						)#
					)#
				),#
				# for var_RB: calculate mean of simulated HT variance estimates#
				var_RB_mean_of_var_estimates = interp(#
					~mean(var, na.rm = TRUE), #
					var = #
					as.name(#
						paste(#
							variables[i],#
							"_var_observed",#
							sep=""#
						)#
					)#
				),#
				# for var_RB: sample size used to calculate mean of simulated HT variance estimates#
				var_RB_mean_of_var_estimates_n = interp(#
					~length(var[which(!is.na(var))]), #
					var = #
					as.name(#
						paste(#
							variables[i],#
							"_var_observed",#
							sep=""#
						)#
					)#
				),#
				# for var_RB: calculate variance of _mean_observed#
				var_RB_var_of_mean_estimates = interp(#
					~var(variable, na.rm = TRUE), #
					variable = #
					as.name(#
						paste(#
							variables[i],#
							"_mean_observed",#
							sep=""#
						)#
					)#
				),#
				# for var_RB: calculate sample size used to calculate variance of _mean_observed#
				var_RB_var_of_mean_estimates_n = interp(#
					~length(var[which(!is.na(var))]), #
					var = #
					as.name(#
						paste(#
							variables[i],#
							"_mean_observed",#
							sep=""#
						)#
					)#
				)#
			) %>%#
			as.data.frame#
		resultslist[[i]] %<>% #
			mutate(#
				RB = 100 * #
					(mean_RB_mean_of_observed_means - mean_RB_true_mean) / #
					mean_RB_true_mean,#
				MSE = MSE_sum_of_observed_minus_true_sqrd/MSE_n_sims,#
				var_RB = 100 *#
				(var_RB_mean_of_var_estimates - var_RB_var_of_mean_estimates) / #
					var_RB_var_of_mean_estimates,#
				var_RB_n = min(#
					var_RB_mean_of_var_estimates_n, #
					var_RB_var_of_mean_estimates_n#
				)#
			) %>%#
			setnames(#
	      		.,#
	      		"mean_RB_true_mean",#
	      		paste(#
	      			variables[i],#
	      			"_true_mean",#
	      			sep=""#
				)#
			) %>%#
			setnames(#
	      		.,#
	      		"RB",#
	      		paste(#
	      			variables[i],#
	      			"_mean_RB",#
	      			sep=""#
				)#
			) %>%#
			setnames(#
	      		.,#
	      		"MSE",#
	      		paste(#
	      			variables[i],#
	      			"_mean_MSE",#
	      			sep=""#
				)#
			) %>%#
			setnames(#
	      		.,#
	      		"var_RB",#
	      		paste(#
	      			variables[i],#
	      			"_var_RB",#
	      			sep=""#
				)#
			) %>%#
			# rename sample size variables#
			setnames(#
	      		.,#
	      		"RB_n",#
	      		paste(#
	      			variables[i],#
	      			"_mean_RB_n",#
	      			sep=""#
				)#
			) %>%#
			setnames(#
	      		.,#
	      		"MSE_n_sims",#
	      		paste(#
	      			variables[i],#
	      			"_mean_MSE_n",#
	      			sep=""#
				)#
			) %>%#
			setnames(#
	      		.,#
	      		"var_RB_n",#
	      		paste(#
	      			variables[i],#
	      			"_var_RB_n",#
	      			sep=""#
				)#
			) %>%#
			dplyr::select(-c(#
				mean_RB_mean_of_observed_means,#
				MSE_sum_of_observed_minus_true_sqrd,#
				var_RB_mean_of_var_estimates,#
				var_RB_mean_of_var_estimates_n,#
				var_RB_var_of_mean_estimates,#
				var_RB_var_of_mean_estimates_n#
			))#
	}#
	return(resultslist)#
}
setwd('/Users/KSauby/Documents/Projects/ACS/R')
E %<>% calculatedSquaredDifferences(variables=c(o_rvar, rvar_variables))#
	E %<>% calculateDifferencesinMeans(variables=c(o_rvar, rvar_variables))
head(E)
setwd('/Users/KSauby/Documents/Projects/ACS/R')
B %<>% calculatedSquaredDifferences(variables=ovar)#
	B %<>% calculateDifferencesinMeans(variables=ovar)
setwd('/Users/KSauby/Documents/Projects/ACS/R')
# occupancy variables#
	H <- vector("list", length(ovar))#
	X.grp <- B %>% #
		group_by_(.dots=c(#
			population.grouping.variables, #
			sampling.grouping.variables, #
			"n_sims"#
		)) %>% #
		calculateBiasComponents(., resultslist=H, variables=ovar)
setwd('/Users/KSauby/Documents/Projects/ACS/R')
Y <- Reduce(#
		function(x, y) merge(#
			x, y,#
			by=c(#
				population.grouping.variables, #
				sampling.grouping.variables, #
				"n_sims"#
			)#
		),#
		X.grp#
	) %>%#
		setnames("n_sims", "ovar_n_sims")
setwd('/Users/KSauby/Documents/Projects/ACS/R')
rvar_variables
setwd('/Users/KSauby/Documents/Projects/ACS/R')
X.grp <- E %>% #
		group_by_(.dots=c(#
			population.grouping.variables, #
			sampling.grouping.variables, #
			"n_sims"#
		)) %>% #
		calculateBiasComponents(., resultslist=H, variables=rvar_variables)
head(X.grp)
head(X.grp[[1]])
str(X.grp)
setwd('/Users/KSauby/Documents/Projects/ACS/R')
H <- vector("list", length(ovar))#
	X.grp <- B %>% #
		group_by_(.dots=c(#
			population.grouping.variables, #
			sampling.grouping.variables, #
			"n_sims"#
		))
setwd('/Users/KSauby/Documents/Projects/ACS/R')
resultslist=H
setwd('/Users/KSauby/Documents/Projects/ACS/R')
variables=ovar
dataframe=X.grp
setwd('/Users/KSauby/Documents/Projects/ACS/R')
variables
setwd('/Users/KSauby/Documents/Projects/ACS/R')
variables=rvar_variables
variables
i=1
setwd('/Users/KSauby/Documents/Projects/ACS/R')
resultslist[[i]] <- list()#
		resultslist[[i]] <- dataframe %>%#
			summarise_(#
				# save true mean#
				mean_RB_true_mean = interp(#
					~var[1], #
					var = #
					as.name(#
						paste(#
							variables[i],#
							"_mean", #
							sep=""#
						)#
					)#
				),#
				# calculate mean of observed means#
				mean_RB_mean_of_observed_means = interp(#
					~mean(var, na.rm = TRUE), #
					var = #
					as.name(#
						paste(#
							variables[i],#
							"_mean_observed",#
							sep=""#
						)#
					)#
				),#
				# sample size used to calculate mean of observed means#
				RB_n = interp(#
					~length(var[which(!is.na(var))]), #
					var = #
					as.name(#
						paste(#
							variables[i],#
							"_mean_observed",#
							sep=""#
						)#
					)#
				),#
				# calculate MSE#
				MSE_sum_of_observed_minus_true_sqrd = interp(#
					~sum(var, na.rm = TRUE), #
					var = #
					as.name(#
						paste(#
							variables[i],#
							"_mean_observed_minus_true_squared",#
							sep=""#
						)#
					)#
				),#
				# sample size used to calculate MSE#
				MSE_n_sims = interp(#
					~length(var[which(!is.na(var))]), #
					var = #
					as.name(#
						paste(#
							variables[i],#
							"_mean_observed_minus_true_squared",#
							sep=""#
						)#
					)#
				),#
				# for var_RB: calculate mean of simulated HT variance estimates#
				var_RB_mean_of_var_estimates = interp(#
					~mean(var, na.rm = TRUE), #
					var = #
					as.name(#
						paste(#
							variables[i],#
							"_var_observed",#
							sep=""#
						)#
					)#
				),#
				# for var_RB: sample size used to calculate mean of simulated HT variance estimates#
				var_RB_mean_of_var_estimates_n = interp(#
					~length(var[which(!is.na(var))]), #
					var = #
					as.name(#
						paste(#
							variables[i],#
							"_var_observed",#
							sep=""#
						)#
					)#
				),#
				# for var_RB: calculate variance of _mean_observed#
				var_RB_var_of_mean_estimates = interp(#
					~var(variable, na.rm = TRUE), #
					variable = #
					as.name(#
						paste(#
							variables[i],#
							"_mean_observed",#
							sep=""#
						)#
					)#
				),#
				# for var_RB: calculate sample size used to calculate variance of _mean_observed#
				var_RB_var_of_mean_estimates_n = interp(#
					~length(var[which(!is.na(var))]), #
					var = #
					as.name(#
						paste(#
							variables[i],#
							"_mean_observed",#
							sep=""#
						)#
					)#
				)#
			) %>%#
			as.data.frame
setwd('/Users/KSauby/Documents/Projects/ACS/R')
resultslist[[i]] <- list()#
		resultslist[[i]] <- dataframe %>%#
			summarise_(#
				# save true mean#
				mean_RB_true_mean = interp(#
					~var[1], #
					var = #
					as.name(#
						paste(#
							variables[i],#
							"_mean", #
							sep=""#
						)#
					)#
				),
)
setwd('/Users/KSauby/Documents/Projects/ACS/R')
resultslist[[i]] <- list()#
		resultslist[[i]] <- dataframe %>%#
			summarise_(#
				# save true mean#
				mean_RB_true_mean = interp(#
					~var[1], #
					var = #
					as.name(#
						paste(#
							variables[i],#
							"_mean", #
							sep=""#
						)#
					)#
				)
)
head(resultslist[[i]] )
setwd('/Users/KSauby/Documents/Projects/ACS/R')
resultslist[[i]] <- list()#
		resultslist[[i]] <- dataframe %>%#
			summarise_(#
				# save true mean#
				mean_RB_true_mean = interp(#
					~var[1], #
					var = #
					as.name(#
						paste(#
							variables[i],#
							"_mean", #
							sep=""#
						)#
					)#
				),#
				# calculate mean of observed means#
				mean_RB_mean_of_observed_means = interp(#
					~mean(var, na.rm = TRUE), #
					var = #
					as.name(#
						paste(#
							variables[i],#
							"_mean_observed",#
							sep=""#
						)#
					)#
				),#
				# sample size used to calculate mean of observed means#
				RB_n = interp(#
					~length(var[which(!is.na(var))]), #
					var = #
					as.name(#
						paste(#
							variables[i],#
							"_mean_observed",#
							sep=""#
						)#
					)#
				),#
				# calculate MSE#
				MSE_sum_of_observed_minus_true_sqrd = interp(#
					~sum(var, na.rm = TRUE), #
					var = #
					as.name(#
						paste(#
							variables[i],#
							"_mean_observed_minus_true_squared",#
							sep=""#
						)#
					)#
				)
)
head(X.grp)
head(X.grp) %>% as.data.frae
head(X.grp) %>% as.data.frame
resultslist[[i]] <- list()#
		resultslist[[i]] <- dataframe %>%#
			summarise_(#
				# save true mean#
				mean_RB_true_mean = interp(#
					~var[1], #
					var = #
					as.name(#
						paste(#
							variables[i],#
							"_mean", #
							sep=""#
						)#
					)#
				),#
				# calculate mean of observed means#
				mean_RB_mean_of_observed_means = interp(#
					~mean(var, na.rm = TRUE), #
					var = #
					as.name(#
						paste(#
							variables[i],#
							"_mean_observed",#
							sep=""#
						)#
					)#
				),#
				# sample size used to calculate mean of observed means#
				RB_n = interp(#
					~length(var[which(!is.na(var))]), #
					var = #
					as.name(#
						paste(#
							variables[i],#
							"_mean_observed",#
							sep=""#
						)#
					)#
				),#
				# calculate MSE#
				MSE_sum_of_observed_minus_true_sqrd = interp(#
					~sum(var, na.rm = TRUE), #
					var = #
					as.name(#
						paste(#
							variables[i],#
							"_mean_observed_minus_true_squared",#
							sep=""#
						)#
					)#
				)
)
setwd('/Users/KSauby/Documents/Projects/ACS/R')
resultslist[[i]] <- list()#
		resultslist[[i]] <- dataframe %>%#
			summarise_(#
				# save true mean#
				mean_RB_true_mean = interp(#
					~var[1], #
					var = #
					as.name(#
						paste(#
							variables[i],#
							"_mean", #
							sep=""#
						)#
					)#
				),#
				# calculate mean of observed means#
				mean_RB_mean_of_observed_means = interp(#
					~mean(var, na.rm = TRUE), #
					var = #
					as.name(#
						paste(#
							variables[i],#
							"_mean_observed",#
							sep=""#
						)#
					)#
				),#
				# sample size used to calculate mean of observed means#
				RB_n = interp(#
					~length(var[which(!is.na(var))]), #
					var = #
					as.name(#
						paste(#
							variables[i],#
							"_mean_observed",#
							sep=""#
						)#
					)#
				)
)
head(resultslist[[i]])
setwd('/Users/KSauby/Documents/Projects/ACS/R')
paste(#
							variables[i],#
							"_mean_observed_minus_true_squared",#
							sep=""#
						)
str(X.grp)
setwd('/Users/KSauby/Documents/Projects/ACS/R')
rvar_variables <- paste(rvar, "_ratio", sep="")#
	. <- n_sims <- A <- B <- C <- D <- E <- I <- G <- H <- NULL#
	A <- merge(#
		population_data_summary, #
		simulation_data, #
		by=population.grouping.variables#
	)#
	# ------------------------------------------------------------------------ ##
	# OCCUPANCY VARIABLES	#
	# ------------------------------------------------------------------------ ##
	B <- A #
	# add number of simulations to dataset#
	n_sims <- B %>% #
		group_by_(.dots = c(#
			population.grouping.variables, #
			sampling.grouping.variables#
		)) %>%#
		summarise(n_sims = n())#
	B %<>% merge(#
		n_sims, #
		by = c(#
			population.grouping.variables, #
			sampling.grouping.variables#
		)#
	)#
	temp <- B %>% group_by_(.dots = c(#
		population.grouping.variables, #
		sampling.grouping.variables, #
		"n_sims"#
	))#
	C <- vector("list", length(ovar))#
	# for each of the population.grouping.variables and sampling.grouping.variables, calculate:#
	#	mean of observed means#
	#	sample size used for those calculations#
	for (i in 1:length(ovar)) {#
		C[[i]] <- list()#
		# observed mean#
		C[[i]] <- temp %>%#
			summarise_(#
				mean_of_observed_means = interp(#
					~mean(var, na.rm = TRUE), #
					var = as.name(#
						paste(#
							ovar[i],#
							"_mean_observed",#
							sep=""#
						)#
					)#
				),#
				sample_size = interp(#
					~length(var[which(!is.na(var))]), #
					var = as.name(#
						paste(#
							ovar[i],#
							"_mean_observed",#
							sep=""#
						)#
					)#
				)#
			)#
		colnames(C[[i]])[names(C[[i]]) == "mean_of_observed_means"] <- paste(#
			ovar[i],#
			"_mean_of_observed_means",#
			sep=""#
		)#
		colnames(C[[i]])[names(C[[i]]) == "sample_size"] <- paste(#
			ovar[i],#
			"_mean_of_observed_means_n",#
			sep=""#
		)#
	}#
	D <- Reduce(#
		function(x, y) merge(#
			x, y,#
			by=c(#
				population.grouping.variables, #
				sampling.grouping.variables, #
				"n_sims"#
			)#
		),#
		C#
	)#
	B %<>% merge(#
		D, #
		by=c(#
			population.grouping.variables, #
			sampling.grouping.variables,#
			"n_sims"#
		)#
	)#
	# ------------------------------------------------------------------------ ##
	# RATIO VARIABLES	#
	# ------------------------------------------------------------------------ ##
	E <- A#
	E %<>% merge(#
		n_sims, #
		by = c(#
			population.grouping.variables, #
			sampling.grouping.variables#
		)#
	)#
	# mean of observed means	#
	temp <- E %>% #
		group_by_(.dots = c(#
		population.grouping.variables, #
		sampling.grouping.variables, #
		"n_sims"#
	))#
	I <- vector("list", length(rvar_variables))#
	# for each of the population.grouping.variables and sampling.grouping.variables, calculate:#
	#	mean of observed means#
	#	sample size used for those calculations#
	for (i in 1:length(c(rvar_variables, o_rvar))) {#
		I[[i]] <- list()#
		I[[i]] <- temp %>%#
			summarise_(#
				mean_of_observed_means = interp(#
					~mean(var, na.rm = TRUE), #
					var = #
					as.name(#
						paste(#
							c(rvar_variables, o_rvar)[i],#
							"_mean_observed",#
							sep=""#
						)#
					)#
				),#
				sample_size = interp(#
					~length(var[which(!is.na(var))]), #
					var = #
					as.name(#
						paste(#
							c(rvar_variables, o_rvar)[i],#
							"_mean_observed",#
							sep=""#
						)#
					)#
				)#
			) %>%#
			setnames(#
		      	.,#
		      	"mean_of_observed_means",#
		      	paste(#
		      		c(rvar_variables, o_rvar)[i],#
		      		"_mean_of_observed_means",#
		      		sep=""#
				)#
			) %>%#
			setnames(#
		      	.,#
		      	"sample_size",#
		      	paste(#
		      		c(rvar_variables, o_rvar)[i],#
		      		"_mean_of_observed_means_n",#
		      		sep=""#
				)#
			)#
	}#
	G <- Reduce(#
		function(x, y) merge(#
			x, y,#
			by=c(#
				population.grouping.variables, #
				sampling.grouping.variables, #
				"n_sims"#
			)#
		),#
		I#
	)#
	E %<>% merge(#
		G, #
		by=c(#
			population.grouping.variables, #
			sampling.grouping.variables,#
			"n_sims"#
		)#
	)#
	E %<>% calculatedSquaredDifferences(variables=c(o_rvar, rvar_variables))#
	E %<>% calculateDifferencesinMeans(variables=c(o_rvar, rvar_variables))#
#
	B %<>% calculatedSquaredDifferences(variables=ovar)#
	B %<>% calculateDifferencesinMeans(variables=ovar)#
	# calculate bias and MSE#
	# occupancy variables#
	H <- vector("list", length(ovar))#
	X.grp <- B %>% #
		group_by_(.dots=c(#
			population.grouping.variables, #
			sampling.grouping.variables, #
			"n_sims"#
		)) %>% #
		calculateBiasComponents(., resultslist=H, variables=ovar)#
	Y <- Reduce(#
		function(x, y) merge(#
			x, y,#
			by=c(#
				population.grouping.variables, #
				sampling.grouping.variables, #
				"n_sims"#
			)#
		),#
		X.grp#
	) %>%#
		setnames("n_sims", "ovar_n_sims")#
	# ratio variables#
	H <- vector("list", length(ovar))
str(E)
setwd('/Users/KSauby/Documents/Projects/ACS/R')
rvar_variables <- paste(rvar, "_ratio", sep="")#
	. <- n_sims <- A <- B <- C <- D <- E <- I <- G <- H <- NULL#
	A <- merge(#
		population_data_summary, #
		simulation_data, #
		by=population.grouping.variables#
	)#
	# ------------------------------------------------------------------------ ##
	# OCCUPANCY VARIABLES	#
	# ------------------------------------------------------------------------ ##
	B <- A #
	# add number of simulations to dataset#
	n_sims <- B %>% #
		group_by_(.dots = c(#
			population.grouping.variables, #
			sampling.grouping.variables#
		)) %>%#
		summarise(n_sims = n())#
	B %<>% merge(#
		n_sims, #
		by = c(#
			population.grouping.variables, #
			sampling.grouping.variables#
		)#
	)#
	temp <- B %>% group_by_(.dots = c(#
		population.grouping.variables, #
		sampling.grouping.variables, #
		"n_sims"#
	))#
	C <- vector("list", length(ovar))#
	# for each of the population.grouping.variables and sampling.grouping.variables, calculate:#
	#	mean of observed means#
	#	sample size used for those calculations#
	for (i in 1:length(ovar)) {#
		C[[i]] <- list()#
		# observed mean#
		C[[i]] <- temp %>%#
			summarise_(#
				mean_of_observed_means = interp(#
					~mean(var, na.rm = TRUE), #
					var = as.name(#
						paste(#
							ovar[i],#
							"_mean_observed",#
							sep=""#
						)#
					)#
				),#
				sample_size = interp(#
					~length(var[which(!is.na(var))]), #
					var = as.name(#
						paste(#
							ovar[i],#
							"_mean_observed",#
							sep=""#
						)#
					)#
				)#
			)#
		colnames(C[[i]])[names(C[[i]]) == "mean_of_observed_means"] <- paste(#
			ovar[i],#
			"_mean_of_observed_means",#
			sep=""#
		)#
		colnames(C[[i]])[names(C[[i]]) == "sample_size"] <- paste(#
			ovar[i],#
			"_mean_of_observed_means_n",#
			sep=""#
		)#
	}#
	D <- Reduce(#
		function(x, y) merge(#
			x, y,#
			by=c(#
				population.grouping.variables, #
				sampling.grouping.variables, #
				"n_sims"#
			)#
		),#
		C#
	)#
	B %<>% merge(#
		D, #
		by=c(#
			population.grouping.variables, #
			sampling.grouping.variables,#
			"n_sims"#
		)#
	)#
	# ------------------------------------------------------------------------ ##
	# RATIO VARIABLES	#
	# ------------------------------------------------------------------------ ##
	E <- A#
	E %<>% merge(#
		n_sims, #
		by = c(#
			population.grouping.variables, #
			sampling.grouping.variables#
		)#
	)#
	# mean of observed means	#
	temp <- E %>% #
		group_by_(.dots = c(#
		population.grouping.variables, #
		sampling.grouping.variables, #
		"n_sims"#
	))#
	I <- vector("list", length(rvar_variables))#
	# for each of the population.grouping.variables and sampling.grouping.variables, calculate:#
	#	mean of observed means#
	#	sample size used for those calculations#
	for (i in 1:length(c(rvar_variables, o_rvar))) {#
		I[[i]] <- list()#
		I[[i]] <- temp %>%#
			summarise_(#
				mean_of_observed_means = interp(#
					~mean(var, na.rm = TRUE), #
					var = #
					as.name(#
						paste(#
							c(rvar_variables, o_rvar)[i],#
							"_mean_observed",#
							sep=""#
						)#
					)#
				),#
				sample_size = interp(#
					~length(var[which(!is.na(var))]), #
					var = #
					as.name(#
						paste(#
							c(rvar_variables, o_rvar)[i],#
							"_mean_observed",#
							sep=""#
						)#
					)#
				)#
			) %>%#
			setnames(#
		      	.,#
		      	"mean_of_observed_means",#
		      	paste(#
		      		c(rvar_variables, o_rvar)[i],#
		      		"_mean_of_observed_means",#
		      		sep=""#
				)#
			) %>%#
			setnames(#
		      	.,#
		      	"sample_size",#
		      	paste(#
		      		c(rvar_variables, o_rvar)[i],#
		      		"_mean_of_observed_means_n",#
		      		sep=""#
				)#
			)#
	}#
	G <- Reduce(#
		function(x, y) merge(#
			x, y,#
			by=c(#
				population.grouping.variables, #
				sampling.grouping.variables, #
				"n_sims"#
			)#
		),#
		I#
	)#
	E %<>% merge(#
		G, #
		by=c(#
			population.grouping.variables, #
			sampling.grouping.variables,#
			"n_sims"#
		)#
	)
str(E)
setwd('/Users/KSauby/Documents/Projects/ACS/R')
variables=c(o_rvar, rvar_variables)
dataframe=E
setwd('/Users/KSauby/Documents/Projects/ACS/R')
variables
i=2
setwd('/Users/KSauby/Documents/Projects/ACS/R')
paste(#
									variables[i], #
									"_mean_observed", #
									sep=""#
								)
setwd('/Users/KSauby/Documents/Projects/ACS/R')
paste(#
								variables[i], #
								"_mean", #
								sep=""#
							)
setwd('/Users/KSauby/Documents/Projects/ACS/R')
paste(#
					variables[i], #
					"_mean_observed_minus_true_squared", #
					sep=""#
				)
setwd('/Users/KSauby/Documents/Projects/ACS/R')
paste(#
									variables[i], #
									"_mean_observed", #
									sep=""#
								)
setwd('/Users/KSauby/Documents/Projects/ACS/R')
paste(#
									variables[i], #
									"_mean_of_observed_means", #
									sep=""#
								)
length(rvar)
length(ovar)
setwd('/Users/KSauby/Documents/Projects/ACS/R')
rvar_variables <- paste(rvar, "_ratio", sep="")#
	. <- n_sims <- A <- B <- C <- D <- E <- I <- G <- H <- NULL#
	A <- merge(#
		population_data_summary, #
		simulation_data, #
		by=population.grouping.variables#
	)#
	# ------------------------------------------------------------------------ ##
	# OCCUPANCY VARIABLES	#
	# ------------------------------------------------------------------------ ##
	B <- A #
	# add number of simulations to dataset#
	n_sims <- B %>% #
		group_by_(.dots = c(#
			population.grouping.variables, #
			sampling.grouping.variables#
		)) %>%#
		summarise(n_sims = n())#
	B %<>% merge(#
		n_sims, #
		by = c(#
			population.grouping.variables, #
			sampling.grouping.variables#
		)#
	)#
	temp <- B %>% group_by_(.dots = c(#
		population.grouping.variables, #
		sampling.grouping.variables, #
		"n_sims"#
	))#
	C <- vector("list", length(ovar))#
	# for each of the population.grouping.variables and sampling.grouping.variables, calculate:#
	#	mean of observed means#
	#	sample size used for those calculations#
	for (i in 1:length(ovar)) {#
		C[[i]] <- list()#
		# observed mean#
		C[[i]] <- temp %>%#
			summarise_(#
				mean_of_observed_means = interp(#
					~mean(var, na.rm = TRUE), #
					var = as.name(#
						paste(#
							ovar[i],#
							"_mean_observed",#
							sep=""#
						)#
					)#
				),#
				sample_size = interp(#
					~length(var[which(!is.na(var))]), #
					var = as.name(#
						paste(#
							ovar[i],#
							"_mean_observed",#
							sep=""#
						)#
					)#
				)#
			)#
		colnames(C[[i]])[names(C[[i]]) == "mean_of_observed_means"] <- paste(#
			ovar[i],#
			"_mean_of_observed_means",#
			sep=""#
		)#
		colnames(C[[i]])[names(C[[i]]) == "sample_size"] <- paste(#
			ovar[i],#
			"_mean_of_observed_means_n",#
			sep=""#
		)#
	}#
	D <- Reduce(#
		function(x, y) merge(#
			x, y,#
			by=c(#
				population.grouping.variables, #
				sampling.grouping.variables, #
				"n_sims"#
			)#
		),#
		C#
	)#
	B %<>% merge(#
		D, #
		by=c(#
			population.grouping.variables, #
			sampling.grouping.variables,#
			"n_sims"#
		)#
	)#
	# ------------------------------------------------------------------------ ##
	# RATIO VARIABLES	#
	# ------------------------------------------------------------------------ ##
	E <- A#
	E %<>% merge(#
		n_sims, #
		by = c(#
			population.grouping.variables, #
			sampling.grouping.variables#
		)#
	)#
	# mean of observed means	#
	temp <- E %>% #
		group_by_(.dots = c(#
		population.grouping.variables, #
		sampling.grouping.variables, #
		"n_sims"#
	))#
	I <- vector("list", length(rvar_variables))#
	# for each of the population.grouping.variables and sampling.grouping.variables, calculate:#
	#	mean of observed means#
	#	sample size used for those calculations#
	for (i in 1:length(c(rvar_variables, o_rvar))) {#
		I[[i]] <- list()#
		I[[i]] <- temp %>%#
			summarise_(#
				mean_of_observed_means = interp(#
					~mean(var, na.rm = TRUE), #
					var = #
					as.name(#
						paste(#
							c(rvar_variables, o_rvar)[i],#
							"_mean_observed",#
							sep=""#
						)#
					)#
				),#
				sample_size = interp(#
					~length(var[which(!is.na(var))]), #
					var = #
					as.name(#
						paste(#
							c(rvar_variables, o_rvar)[i],#
							"_mean_observed",#
							sep=""#
						)#
					)#
				)#
			) %>%#
			setnames(#
		      	.,#
		      	"mean_of_observed_means",#
		      	paste(#
		      		c(rvar_variables, o_rvar)[i],#
		      		"_mean_of_observed_means",#
		      		sep=""#
				)#
			) %>%#
			setnames(#
		      	.,#
		      	"sample_size",#
		      	paste(#
		      		c(rvar_variables, o_rvar)[i],#
		      		"_mean_of_observed_means_n",#
		      		sep=""#
				)#
			)#
	}#
	G <- Reduce(#
		function(x, y) merge(#
			x, y,#
			by=c(#
				population.grouping.variables, #
				sampling.grouping.variables, #
				"n_sims"#
			)#
		),#
		I#
	)#
	E %<>% merge(#
		G, #
		by=c(#
			population.grouping.variables, #
			sampling.grouping.variables,#
			"n_sims"#
		)#
	)#
	E %<>% calculatedSquaredDifferences(variables=c(o_rvar, rvar_variables))#
	E %<>% calculateDifferencesinMeans(variables=c(o_rvar, rvar_variables))#
#
	B %<>% calculatedSquaredDifferences(variables=ovar)#
	B %<>% calculateDifferencesinMeans(variables=ovar)#
	# calculate bias and MSE#
	# occupancy variables#
	H <- vector("list", length(ovar))#
	X.grp <- B %>% #
		group_by_(.dots=c(#
			population.grouping.variables, #
			sampling.grouping.variables, #
			"n_sims"#
		)) %>% #
		calculateBiasComponents(., resultslist=H, variables=ovar)
str(X.grp)
dim(X.grp)
length(X.grp)
setwd('/Users/KSauby/Documents/Projects/ACS/R')
Y <- Reduce(#
		function(x, y) merge(#
			x, y,#
			by=c(#
				population.grouping.variables, #
				sampling.grouping.variables, #
				"n_sims"#
			)#
		),#
		X.grp#
	) %>%#
		setnames("n_sims", "ovar_n_sims")
setwd('/Users/KSauby/Documents/Projects/ACS/R')
H <- vector("list", length(ovar))#
	X.grp <- E %>% #
		group_by_(.dots=c(#
			population.grouping.variables, #
			sampling.grouping.variables, #
			"n_sims"#
		)) %>% #
		calculateBiasComponents(., resultslist=H, variables=rvar_variables)
length(X.grp)
H
setwd('/Users/KSauby/Documents/Projects/ACS/R')
vector("list", length(rvar))
head(E)
str(E)
setwd('/Users/KSauby/Documents/Projects/ACS/R')
rvar_variables <- paste(rvar, "_ratio", sep="")#
	. <- n_sims <- A <- B <- C <- D <- E <- I <- G <- H <- NULL#
	A <- merge(#
		population_data_summary, #
		simulation_data, #
		by=population.grouping.variables#
	)#
	# ------------------------------------------------------------------------ ##
	# OCCUPANCY VARIABLES	#
	# ------------------------------------------------------------------------ ##
	B <- A #
	# add number of simulations to dataset#
	n_sims <- B %>% #
		group_by_(.dots = c(#
			population.grouping.variables, #
			sampling.grouping.variables#
		)) %>%#
		summarise(n_sims = n())#
	B %<>% merge(#
		n_sims, #
		by = c(#
			population.grouping.variables, #
			sampling.grouping.variables#
		)#
	)#
	temp <- B %>% group_by_(.dots = c(#
		population.grouping.variables, #
		sampling.grouping.variables, #
		"n_sims"#
	))#
	C <- vector("list", length(ovar))#
	# for each of the population.grouping.variables and sampling.grouping.variables, calculate:#
	#	mean of observed means#
	#	sample size used for those calculations#
	for (i in 1:length(ovar)) {#
		C[[i]] <- list()#
		# observed mean#
		C[[i]] <- temp %>%#
			summarise_(#
				mean_of_observed_means = interp(#
					~mean(var, na.rm = TRUE), #
					var = as.name(#
						paste(#
							ovar[i],#
							"_mean_observed",#
							sep=""#
						)#
					)#
				),#
				sample_size = interp(#
					~length(var[which(!is.na(var))]), #
					var = as.name(#
						paste(#
							ovar[i],#
							"_mean_observed",#
							sep=""#
						)#
					)#
				)#
			)#
		colnames(C[[i]])[names(C[[i]]) == "mean_of_observed_means"] <- paste(#
			ovar[i],#
			"_mean_of_observed_means",#
			sep=""#
		)#
		colnames(C[[i]])[names(C[[i]]) == "sample_size"] <- paste(#
			ovar[i],#
			"_mean_of_observed_means_n",#
			sep=""#
		)#
	}#
	D <- Reduce(#
		function(x, y) merge(#
			x, y,#
			by=c(#
				population.grouping.variables, #
				sampling.grouping.variables, #
				"n_sims"#
			)#
		),#
		C#
	)#
	B %<>% merge(#
		D, #
		by=c(#
			population.grouping.variables, #
			sampling.grouping.variables,#
			"n_sims"#
		)#
	)#
	# ------------------------------------------------------------------------ ##
	# RATIO VARIABLES	#
	# ------------------------------------------------------------------------ ##
	E <- A#
	E %<>% merge(#
		n_sims, #
		by = c(#
			population.grouping.variables, #
			sampling.grouping.variables#
		)#
	)#
	# mean of observed means	#
	temp <- E %>% #
		group_by_(.dots = c(#
		population.grouping.variables, #
		sampling.grouping.variables, #
		"n_sims"#
	))#
	I <- vector("list", length(rvar_variables))#
	# for each of the population.grouping.variables and sampling.grouping.variables, calculate:#
	#	mean of observed means#
	#	sample size used for those calculations#
	for (i in 1:length(c(rvar_variables, o_rvar))) {#
		I[[i]] <- list()#
		I[[i]] <- temp %>%#
			summarise_(#
				mean_of_observed_means = interp(#
					~mean(var, na.rm = TRUE), #
					var = #
					as.name(#
						paste(#
							c(rvar_variables, o_rvar)[i],#
							"_mean_observed",#
							sep=""#
						)#
					)#
				),#
				sample_size = interp(#
					~length(var[which(!is.na(var))]), #
					var = #
					as.name(#
						paste(#
							c(rvar_variables, o_rvar)[i],#
							"_mean_observed",#
							sep=""#
						)#
					)#
				)#
			) %>%#
			setnames(#
		      	.,#
		      	"mean_of_observed_means",#
		      	paste(#
		      		c(rvar_variables, o_rvar)[i],#
		      		"_mean_of_observed_means",#
		      		sep=""#
				)#
			) %>%#
			setnames(#
		      	.,#
		      	"sample_size",#
		      	paste(#
		      		c(rvar_variables, o_rvar)[i],#
		      		"_mean_of_observed_means_n",#
		      		sep=""#
				)#
			)#
	}#
	G <- Reduce(#
		function(x, y) merge(#
			x, y,#
			by=c(#
				population.grouping.variables, #
				sampling.grouping.variables, #
				"n_sims"#
			)#
		),#
		I#
	)#
	E %<>% merge(#
		G, #
		by=c(#
			population.grouping.variables, #
			sampling.grouping.variables,#
			"n_sims"#
		)#
	)#
	E %<>% calculatedSquaredDifferences(variables=c(o_rvar, rvar_variables))#
	E %<>% calculateDifferencesinMeans(variables=c(o_rvar, rvar_variables))#
#
	B %<>% calculatedSquaredDifferences(variables=ovar)#
	B %<>% calculateDifferencesinMeans(variables=ovar)#
	# calculate bias and MSE#
	# occupancy variables#
	H <- vector("list", length(ovar))#
	X.grp <- B %>% #
		group_by_(.dots=c(#
			population.grouping.variables, #
			sampling.grouping.variables, #
			"n_sims"#
		)) %>% #
		calculateBiasComponents(., resultslist=H, variables=ovar)#
	Y <- Reduce(#
		function(x, y) merge(#
			x, y,#
			by=c(#
				population.grouping.variables, #
				sampling.grouping.variables, #
				"n_sims"#
			)#
		),#
		X.grp#
	) %>%#
		setnames("n_sims", "ovar_n_sims")
setwd('/Users/KSauby/Documents/Projects/ACS/R')
H <- vector("list", length(rvar))
setwd('/Users/KSauby/Documents/Projects/ACS/R')
X.grp <- E %>% #
		group_by_(.dots=c(#
			population.grouping.variables, #
			sampling.grouping.variables, #
			"n_sims"#
		))
dataframe=X.grp
setwd('/Users/KSauby/Documents/Projects/ACS/R')
resultslist=H
setwd('/Users/KSauby/Documents/Projects/ACS/R')
variables=rvar_variables
setwd('/Users/KSauby/Documents/Projects/ACS/R')
variables
i=1
setwd('/Users/KSauby/Documents/Projects/ACS/R')
resultslist[[i]] <- list()
head(X.grp)
head(X.grp) %>% as.data.frame
setwd('/Users/KSauby/Documents/Projects/ACS/R')
paste(#
							variables[i],#
							"_mean", #
							sep=""#
						)
setwd('/Users/KSauby/Documents/Projects/ACS/R')
paste(#
							variables[i],#
							"_mean_observed",#
							sep=""#
						)
X.grp$MEPR_on_Stricta_ratio_mean_observed
setwd('/Users/KSauby/Documents/Projects/ACS/R')
paste(#
							variables[i],#
							"_mean_observed_minus_true_squared",#
							sep=""#
						)
setwd('/Users/KSauby/Documents/Projects/ACS/R')
paste(#
							variables[i],#
							"_var_observed",#
							sep=""#
						)
X.grp$MEPR_on_Stricta_ratio_var_observed[1:100]
setwd('/Users/KSauby/Documents/Projects/ACS/R')
paste(#
							variables[i],#
							"_mean_observed",#
							sep=""#
						)
X.grp$MEPR_on_Stricta_ratio_mean_observed[1:100]
X.grp$MEPR_on_Stricta_ratio_var_observed[1:100] %>% mean
X.grp$MEPR_on_Stricta_ratio_mean_observed[1:100] %>% var
setwd('/Users/KSauby/Documents/Projects/ACS/R')
rvar_variables <- paste(rvar, "_ratio", sep="")#
	. <- n_sims <- A <- B <- C <- D <- E <- I <- G <- H <- NULL#
	A <- merge(#
		population_data_summary, #
		simulation_data, #
		by=population.grouping.variables#
	)#
	# ------------------------------------------------------------------------ ##
	# OCCUPANCY VARIABLES	#
	# ------------------------------------------------------------------------ ##
	B <- A #
	# add number of simulations to dataset#
	n_sims <- B %>% #
		group_by_(.dots = c(#
			population.grouping.variables, #
			sampling.grouping.variables#
		)) %>%#
		summarise(n_sims = n())#
	B %<>% merge(#
		n_sims, #
		by = c(#
			population.grouping.variables, #
			sampling.grouping.variables#
		)#
	)#
	temp <- B %>% group_by_(.dots = c(#
		population.grouping.variables, #
		sampling.grouping.variables, #
		"n_sims"#
	))#
	C <- vector("list", length(ovar))#
	# for each of the population.grouping.variables and sampling.grouping.variables, calculate:#
	#	mean of observed means#
	#	sample size used for those calculations#
	for (i in 1:length(ovar)) {#
		C[[i]] <- list()#
		# observed mean#
		C[[i]] <- temp %>%#
			summarise_(#
				mean_of_observed_means = interp(#
					~mean(var, na.rm = TRUE), #
					var = as.name(#
						paste(#
							ovar[i],#
							"_mean_observed",#
							sep=""#
						)#
					)#
				),#
				sample_size = interp(#
					~length(var[which(!is.na(var))]), #
					var = as.name(#
						paste(#
							ovar[i],#
							"_mean_observed",#
							sep=""#
						)#
					)#
				)#
			)#
		colnames(C[[i]])[names(C[[i]]) == "mean_of_observed_means"] <- paste(#
			ovar[i],#
			"_mean_of_observed_means",#
			sep=""#
		)#
		colnames(C[[i]])[names(C[[i]]) == "sample_size"] <- paste(#
			ovar[i],#
			"_mean_of_observed_means_n",#
			sep=""#
		)#
	}#
	D <- Reduce(#
		function(x, y) merge(#
			x, y,#
			by=c(#
				population.grouping.variables, #
				sampling.grouping.variables, #
				"n_sims"#
			)#
		),#
		C#
	)#
	B %<>% merge(#
		D, #
		by=c(#
			population.grouping.variables, #
			sampling.grouping.variables,#
			"n_sims"#
		)#
	)#
	# ------------------------------------------------------------------------ ##
	# RATIO VARIABLES	#
	# ------------------------------------------------------------------------ ##
	E <- A#
	E %<>% merge(#
		n_sims, #
		by = c(#
			population.grouping.variables, #
			sampling.grouping.variables#
		)#
	)#
	# mean of observed means	#
	temp <- E %>% #
		group_by_(.dots = c(#
		population.grouping.variables, #
		sampling.grouping.variables, #
		"n_sims"#
	))#
	I <- vector("list", length(rvar_variables))#
	# for each of the population.grouping.variables and sampling.grouping.variables, calculate:#
	#	mean of observed means#
	#	sample size used for those calculations#
	for (i in 1:length(c(rvar_variables, o_rvar))) {#
		I[[i]] <- list()#
		I[[i]] <- temp %>%#
			summarise_(#
				mean_of_observed_means = interp(#
					~mean(var, na.rm = TRUE), #
					var = #
					as.name(#
						paste(#
							c(rvar_variables, o_rvar)[i],#
							"_mean_observed",#
							sep=""#
						)#
					)#
				),#
				sample_size = interp(#
					~length(var[which(!is.na(var))]), #
					var = #
					as.name(#
						paste(#
							c(rvar_variables, o_rvar)[i],#
							"_mean_observed",#
							sep=""#
						)#
					)#
				)#
			) %>%#
			setnames(#
		      	.,#
		      	"mean_of_observed_means",#
		      	paste(#
		      		c(rvar_variables, o_rvar)[i],#
		      		"_mean_of_observed_means",#
		      		sep=""#
				)#
			) %>%#
			setnames(#
		      	.,#
		      	"sample_size",#
		      	paste(#
		      		c(rvar_variables, o_rvar)[i],#
		      		"_mean_of_observed_means_n",#
		      		sep=""#
				)#
			)#
	}#
	G <- Reduce(#
		function(x, y) merge(#
			x, y,#
			by=c(#
				population.grouping.variables, #
				sampling.grouping.variables, #
				"n_sims"#
			)#
		),#
		I#
	)#
	E %<>% merge(#
		G, #
		by=c(#
			population.grouping.variables, #
			sampling.grouping.variables,#
			"n_sims"#
		)#
	)#
	E %<>% calculatedSquaredDifferences(variables=c(o_rvar, rvar_variables))#
	E %<>% calculateDifferencesinMeans(variables=c(o_rvar, rvar_variables))#
#
	B %<>% calculatedSquaredDifferences(variables=ovar)#
	B %<>% calculateDifferencesinMeans(variables=ovar)#
	# calculate bias and MSE#
	# occupancy variables#
	H <- vector("list", length(ovar))#
	X.grp <- B %>% #
		group_by_(.dots=c(#
			population.grouping.variables, #
			sampling.grouping.variables, #
			"n_sims"#
		)) %>% #
		calculateBiasComponents(., resultslist=H, variables=ovar)#
	Y <- Reduce(#
		function(x, y) merge(#
			x, y,#
			by=c(#
				population.grouping.variables, #
				sampling.grouping.variables, #
				"n_sims"#
			)#
		),#
		X.grp#
	) %>%#
		setnames("n_sims", "ovar_n_sims")#
	# ratio variables#
	H <- vector("list", length(rvar))#
	X.grp <- E %>% #
		group_by_(.dots=c(#
			population.grouping.variables, #
			sampling.grouping.variables, #
			"n_sims"#
		)) %>% #
		calculateBiasComponents(., resultslist=H, variables=rvar_variables)
str(X.grp)
str(X.grp[1])
head(E)
str(E)
setwd('/Users/KSauby/Documents/Projects/ACS/R')
E %<>% filter(Stricta_mean!=0)
setwd('/Users/KSauby/Documents/Projects/ACS/R')
X.grp <- E %>% #
		group_by_(.dots=c(#
			population.grouping.variables, #
			sampling.grouping.variables, #
			"n_sims"#
		)) %>% #
		calculateBiasComponents(., resultslist=H, variables=rvar_variables)
setwd('/Users/KSauby/Documents/Projects/ACS/R')
Z <- Reduce(#
		function(x, y) merge(#
			x, y,#
			by=c(#
				population.grouping.variables, #
				sampling.grouping.variables, #
				"n_sims"#
			)#
		),#
		X.grp#
	) %>%#
		setnames("n_sims", "rvar_n_sims")
setwd('/Users/KSauby/Documents/Projects/ACS/R')
Y %<>% merge(Z, #
		by=c(#
			population.grouping.variables, #
			sampling.grouping.variables#
		),#
		all=T#
	)
head(Y)
head(X.grp)
head(X.grp[1])
head(X.grp[[1]])
E$Stricta_mean
head(E)
setwd('/Users/KSauby/Documents/Projects/ACS/R')
E %<>% filter(Stricta_mean_observed!=0)
setwd('/Users/KSauby/Documents/Projects/ACS/R')
X.grp <- E %>% #
		group_by_(.dots=c(#
			population.grouping.variables, #
			sampling.grouping.variables, #
			"n_sims"#
		)) %>% #
		calculateBiasComponents(., resultslist=H, variables=rvar_variables)#
	Z <- Reduce(#
		function(x, y) merge(#
			x, y,#
			by=c(#
				population.grouping.variables, #
				sampling.grouping.variables, #
				"n_sims"#
			)#
		),#
		X.grp#
	) %>%#
		setnames("n_sims", "rvar_n_sims")#
	Y %<>% merge(Z, #
		by=c(#
			population.grouping.variables, #
			sampling.grouping.variables#
		),#
		all=T#
	)
head(Y)
setwd('/Users/KSauby/Documents/Projects/ACS/R')
rvar_variables <- paste(rvar, "_ratio", sep="")#
	. <- n_sims <- A <- B <- C <- D <- E <- I <- G <- H <- NULL#
	A <- merge(#
		population_data_summary, #
		simulation_data, #
		by=population.grouping.variables#
	)#
	# ------------------------------------------------------------------------ ##
	# OCCUPANCY VARIABLES	#
	# ------------------------------------------------------------------------ ##
	B <- A #
	# add number of simulations to dataset#
	n_sims <- B %>% #
		group_by_(.dots = c(#
			population.grouping.variables, #
			sampling.grouping.variables#
		)) %>%#
		summarise(n_sims = n())#
	B %<>% merge(#
		n_sims, #
		by = c(#
			population.grouping.variables, #
			sampling.grouping.variables#
		)#
	)#
	temp <- B %>% group_by_(.dots = c(#
		population.grouping.variables, #
		sampling.grouping.variables, #
		"n_sims"#
	))#
	C <- vector("list", length(ovar))#
	# for each of the population.grouping.variables and sampling.grouping.variables, calculate:#
	#	mean of observed means#
	#	sample size used for those calculations#
	for (i in 1:length(ovar)) {#
		C[[i]] <- list()#
		# observed mean#
		C[[i]] <- temp %>%#
			summarise_(#
				mean_of_observed_means = interp(#
					~mean(var, na.rm = TRUE), #
					var = as.name(#
						paste(#
							ovar[i],#
							"_mean_observed",#
							sep=""#
						)#
					)#
				),#
				sample_size = interp(#
					~length(var[which(!is.na(var))]), #
					var = as.name(#
						paste(#
							ovar[i],#
							"_mean_observed",#
							sep=""#
						)#
					)#
				)#
			)#
		colnames(C[[i]])[names(C[[i]]) == "mean_of_observed_means"] <- paste(#
			ovar[i],#
			"_mean_of_observed_means",#
			sep=""#
		)#
		colnames(C[[i]])[names(C[[i]]) == "sample_size"] <- paste(#
			ovar[i],#
			"_mean_of_observed_means_n",#
			sep=""#
		)#
	}#
	D <- Reduce(#
		function(x, y) merge(#
			x, y,#
			by=c(#
				population.grouping.variables, #
				sampling.grouping.variables, #
				"n_sims"#
			)#
		),#
		C#
	)#
	B %<>% merge(#
		D, #
		by=c(#
			population.grouping.variables, #
			sampling.grouping.variables,#
			"n_sims"#
		)#
	)#
	# ------------------------------------------------------------------------ ##
	# RATIO VARIABLES	#
	# ------------------------------------------------------------------------ ##
	E <- A#
	E %<>% merge(#
		n_sims, #
		by = c(#
			population.grouping.variables, #
			sampling.grouping.variables#
		)#
	)#
	# mean of observed means	#
	temp <- E %>% #
		group_by_(.dots = c(#
		population.grouping.variables, #
		sampling.grouping.variables, #
		"n_sims"#
	))#
	I <- vector("list", length(rvar_variables))#
	# for each of the population.grouping.variables and sampling.grouping.variables, calculate:#
	#	mean of observed means#
	#	sample size used for those calculations#
	for (i in 1:length(c(rvar_variables, o_rvar))) {#
		I[[i]] <- list()#
		I[[i]] <- temp %>%#
			summarise_(#
				mean_of_observed_means = interp(#
					~mean(var, na.rm = TRUE), #
					var = #
					as.name(#
						paste(#
							c(rvar_variables, o_rvar)[i],#
							"_mean_observed",#
							sep=""#
						)#
					)#
				),#
				sample_size = interp(#
					~length(var[which(!is.na(var))]), #
					var = #
					as.name(#
						paste(#
							c(rvar_variables, o_rvar)[i],#
							"_mean_observed",#
							sep=""#
						)#
					)#
				)#
			) %>%#
			setnames(#
		      	.,#
		      	"mean_of_observed_means",#
		      	paste(#
		      		c(rvar_variables, o_rvar)[i],#
		      		"_mean_of_observed_means",#
		      		sep=""#
				)#
			) %>%#
			setnames(#
		      	.,#
		      	"sample_size",#
		      	paste(#
		      		c(rvar_variables, o_rvar)[i],#
		      		"_mean_of_observed_means_n",#
		      		sep=""#
				)#
			)#
	}#
	G <- Reduce(#
		function(x, y) merge(#
			x, y,#
			by=c(#
				population.grouping.variables, #
				sampling.grouping.variables, #
				"n_sims"#
			)#
		),#
		I#
	)#
	E %<>% merge(#
		G, #
		by=c(#
			population.grouping.variables, #
			sampling.grouping.variables,#
			"n_sims"#
		)#
	)#
	E %<>% calculatedSquaredDifferences(variables=c(o_rvar, rvar_variables))#
	E %<>% calculateDifferencesinMeans(variables=c(o_rvar, rvar_variables))#
#
	B %<>% calculatedSquaredDifferences(variables=ovar)#
	B %<>% calculateDifferencesinMeans(variables=ovar)#
	# calculate bias and MSE#
	# occupancy variables#
	H <- vector("list", length(ovar))#
	X.grp <- B %>% #
		group_by_(.dots=c(#
			population.grouping.variables, #
			sampling.grouping.variables, #
			"n_sims"#
		)) %>% #
		calculateBiasComponents(., resultslist=H, variables=ovar)#
	Y <- Reduce(#
		function(x, y) merge(#
			x, y,#
			by=c(#
				population.grouping.variables, #
				sampling.grouping.variables, #
				"n_sims"#
			)#
		),#
		X.grp#
	) %>%#
		setnames("n_sims", "ovar_n_sims")#
	# ratio variables#
	H <- vector("list", length(rvar))#
	E %<>% filter(Stricta_mean_observed!=0)
head(E)
setwd('/Users/KSauby/Documents/Projects/ACS/R')
rvar_variables <- paste(rvar, "_ratio", sep="")#
	. <- n_sims <- A <- B <- C <- D <- E <- I <- G <- H <- NULL#
	A <- merge(#
		population_data_summary, #
		simulation_data, #
		by=population.grouping.variables#
	)#
	# ------------------------------------------------------------------------ ##
	# OCCUPANCY VARIABLES	#
	# ------------------------------------------------------------------------ ##
	B <- A #
	# add number of simulations to dataset#
	n_sims <- B %>% #
		group_by_(.dots = c(#
			population.grouping.variables, #
			sampling.grouping.variables#
		)) %>%#
		summarise(n_sims = n())#
	B %<>% merge(#
		n_sims, #
		by = c(#
			population.grouping.variables, #
			sampling.grouping.variables#
		)#
	)#
	temp <- B %>% group_by_(.dots = c(#
		population.grouping.variables, #
		sampling.grouping.variables, #
		"n_sims"#
	))#
	C <- vector("list", length(ovar))#
	# for each of the population.grouping.variables and sampling.grouping.variables, calculate:#
	#	mean of observed means#
	#	sample size used for those calculations#
	for (i in 1:length(ovar)) {#
		C[[i]] <- list()#
		# observed mean#
		C[[i]] <- temp %>%#
			summarise_(#
				mean_of_observed_means = interp(#
					~mean(var, na.rm = TRUE), #
					var = as.name(#
						paste(#
							ovar[i],#
							"_mean_observed",#
							sep=""#
						)#
					)#
				),#
				sample_size = interp(#
					~length(var[which(!is.na(var))]), #
					var = as.name(#
						paste(#
							ovar[i],#
							"_mean_observed",#
							sep=""#
						)#
					)#
				)#
			)#
		colnames(C[[i]])[names(C[[i]]) == "mean_of_observed_means"] <- paste(#
			ovar[i],#
			"_mean_of_observed_means",#
			sep=""#
		)#
		colnames(C[[i]])[names(C[[i]]) == "sample_size"] <- paste(#
			ovar[i],#
			"_mean_of_observed_means_n",#
			sep=""#
		)#
	}#
	D <- Reduce(#
		function(x, y) merge(#
			x, y,#
			by=c(#
				population.grouping.variables, #
				sampling.grouping.variables, #
				"n_sims"#
			)#
		),#
		C#
	)#
	B %<>% merge(#
		D, #
		by=c(#
			population.grouping.variables, #
			sampling.grouping.variables,#
			"n_sims"#
		)#
	)#
	# ------------------------------------------------------------------------ ##
	# RATIO VARIABLES	#
	# ------------------------------------------------------------------------ ##
	E <- A
head(E)
setwd('/Users/KSauby/Documents/Projects/ACS/R')
E %<>% filter(Stricta_mean_observed!=0)
setwd('/Users/KSauby/Documents/Projects/ACS/R')
E %<>% merge(#
		n_sims, #
		by = c(#
			population.grouping.variables, #
			sampling.grouping.variables#
		)#
	)#
	# mean of observed means	#
	temp <- E %>% #
		group_by_(.dots = c(#
		population.grouping.variables, #
		sampling.grouping.variables, #
		"n_sims"#
	))#
	I <- vector("list", length(rvar_variables))#
	# for each of the population.grouping.variables and sampling.grouping.variables, calculate:#
	#	mean of observed means#
	#	sample size used for those calculations#
	for (i in 1:length(c(rvar_variables, o_rvar))) {#
		I[[i]] <- list()#
		I[[i]] <- temp %>%#
			summarise_(#
				mean_of_observed_means = interp(#
					~mean(var, na.rm = TRUE), #
					var = #
					as.name(#
						paste(#
							c(rvar_variables, o_rvar)[i],#
							"_mean_observed",#
							sep=""#
						)#
					)#
				),#
				sample_size = interp(#
					~length(var[which(!is.na(var))]), #
					var = #
					as.name(#
						paste(#
							c(rvar_variables, o_rvar)[i],#
							"_mean_observed",#
							sep=""#
						)#
					)#
				)#
			) %>%#
			setnames(#
		      	.,#
		      	"mean_of_observed_means",#
		      	paste(#
		      		c(rvar_variables, o_rvar)[i],#
		      		"_mean_of_observed_means",#
		      		sep=""#
				)#
			) %>%#
			setnames(#
		      	.,#
		      	"sample_size",#
		      	paste(#
		      		c(rvar_variables, o_rvar)[i],#
		      		"_mean_of_observed_means_n",#
		      		sep=""#
				)#
			)#
	}#
	G <- Reduce(#
		function(x, y) merge(#
			x, y,#
			by=c(#
				population.grouping.variables, #
				sampling.grouping.variables, #
				"n_sims"#
			)#
		),#
		I#
	)#
	E %<>% merge(#
		G, #
		by=c(#
			population.grouping.variables, #
			sampling.grouping.variables,#
			"n_sims"#
		)#
	)#
	E %<>% calculatedSquaredDifferences(variables=c(o_rvar, rvar_variables))#
	E %<>% calculateDifferencesinMeans(variables=c(o_rvar, rvar_variables))#
#
	B %<>% calculatedSquaredDifferences(variables=ovar)#
	B %<>% calculateDifferencesinMeans(variables=ovar)#
	# calculate bias and MSE#
	# occupancy variables#
	H <- vector("list", length(ovar))#
	X.grp <- B %>% #
		group_by_(.dots=c(#
			population.grouping.variables, #
			sampling.grouping.variables, #
			"n_sims"#
		)) %>% #
		calculateBiasComponents(., resultslist=H, variables=ovar)#
	Y <- Reduce(#
		function(x, y) merge(#
			x, y,#
			by=c(#
				population.grouping.variables, #
				sampling.grouping.variables, #
				"n_sims"#
			)#
		),#
		X.grp#
	) %>%#
		setnames("n_sims", "ovar_n_sims")#
	# ratio variables#
	H <- vector("list", length(rvar))#
	X.grp <- E %>% #
		group_by_(.dots=c(#
			population.grouping.variables, #
			sampling.grouping.variables, #
			"n_sims"#
		)) %>% #
		calculateBiasComponents(., resultslist=H, variables=rvar_variables)#
	Z <- Reduce(#
		function(x, y) merge(#
			x, y,#
			by=c(#
				population.grouping.variables, #
				sampling.grouping.variables, #
				"n_sims"#
			)#
		),#
		X.grp#
	) %>%#
		setnames("n_sims", "rvar_n_sims")#
	Y %<>% merge(Z, #
		by=c(#
			population.grouping.variables, #
			sampling.grouping.variables#
		),#
		all=T#
	)
head(Y)
setwd('/Users/KSauby/Documents/Projects/ACS/R')
rvar_variables <- paste(rvar, "_ratio", sep="")#
	. <- n_sims <- A <- B <- C <- D <- E <- I <- G <- H <- NULL#
	A <- merge(#
		population_data_summary, #
		simulation_data, #
		by=population.grouping.variables#
	)#
	# ------------------------------------------------------------------------ ##
	# OCCUPANCY VARIABLES	#
	# ------------------------------------------------------------------------ ##
	B <- A #
	# add number of simulations to dataset#
	n_sims <- B %>% #
		group_by_(.dots = c(#
			population.grouping.variables, #
			sampling.grouping.variables#
		)) %>%#
		summarise(n_sims = n())#
	B %<>% merge(#
		n_sims, #
		by = c(#
			population.grouping.variables, #
			sampling.grouping.variables#
		)#
	)#
	temp <- B %>% group_by_(.dots = c(#
		population.grouping.variables, #
		sampling.grouping.variables, #
		"n_sims"#
	))#
	C <- vector("list", length(ovar))#
	# for each of the population.grouping.variables and sampling.grouping.variables, calculate:#
	#	mean of observed means#
	#	sample size used for those calculations#
	for (i in 1:length(ovar)) {#
		C[[i]] <- list()#
		# observed mean#
		C[[i]] <- temp %>%#
			summarise_(#
				mean_of_observed_means = interp(#
					~mean(var, na.rm = TRUE), #
					var = as.name(#
						paste(#
							ovar[i],#
							"_mean_observed",#
							sep=""#
						)#
					)#
				),#
				sample_size = interp(#
					~length(var[which(!is.na(var))]), #
					var = as.name(#
						paste(#
							ovar[i],#
							"_mean_observed",#
							sep=""#
						)#
					)#
				)#
			)#
		colnames(C[[i]])[names(C[[i]]) == "mean_of_observed_means"] <- paste(#
			ovar[i],#
			"_mean_of_observed_means",#
			sep=""#
		)#
		colnames(C[[i]])[names(C[[i]]) == "sample_size"] <- paste(#
			ovar[i],#
			"_mean_of_observed_means_n",#
			sep=""#
		)#
	}#
	D <- Reduce(#
		function(x, y) merge(#
			x, y,#
			by=c(#
				population.grouping.variables, #
				sampling.grouping.variables, #
				"n_sims"#
			)#
		),#
		C#
	)#
	B %<>% merge(#
		D, #
		by=c(#
			population.grouping.variables, #
			sampling.grouping.variables,#
			"n_sims"#
		)#
	)#
	# ------------------------------------------------------------------------ ##
	# RATIO VARIABLES	#
	# ------------------------------------------------------------------------ ##
	E <- A#
	E %<>% filter(Stricta_mean_observed!=0)
head(E)
range(E$Stricta_mean_observed)
setwd('/Users/KSauby/Documents/Projects/ACS/R')
E %<>% merge(#
		n_sims, #
		by = c(#
			population.grouping.variables, #
			sampling.grouping.variables#
		)#
	)#
	# mean of observed means	#
	temp <- E %>% #
		group_by_(.dots = c(#
		population.grouping.variables, #
		sampling.grouping.variables, #
		"n_sims"#
	))#
	I <- vector("list", length(rvar_variables))#
	# for each of the population.grouping.variables and sampling.grouping.variables, calculate:#
	#	mean of observed means#
	#	sample size used for those calculations#
	for (i in 1:length(c(rvar_variables, o_rvar))) {#
		I[[i]] <- list()#
		I[[i]] <- temp %>%#
			summarise_(#
				mean_of_observed_means = interp(#
					~mean(var, na.rm = TRUE), #
					var = #
					as.name(#
						paste(#
							c(rvar_variables, o_rvar)[i],#
							"_mean_observed",#
							sep=""#
						)#
					)#
				),#
				sample_size = interp(#
					~length(var[which(!is.na(var))]), #
					var = #
					as.name(#
						paste(#
							c(rvar_variables, o_rvar)[i],#
							"_mean_observed",#
							sep=""#
						)#
					)#
				)#
			) %>%#
			setnames(#
		      	.,#
		      	"mean_of_observed_means",#
		      	paste(#
		      		c(rvar_variables, o_rvar)[i],#
		      		"_mean_of_observed_means",#
		      		sep=""#
				)#
			) %>%#
			setnames(#
		      	.,#
		      	"sample_size",#
		      	paste(#
		      		c(rvar_variables, o_rvar)[i],#
		      		"_mean_of_observed_means_n",#
		      		sep=""#
				)#
			)#
	}#
	G <- Reduce(#
		function(x, y) merge(#
			x, y,#
			by=c(#
				population.grouping.variables, #
				sampling.grouping.variables, #
				"n_sims"#
			)#
		),#
		I#
	)#
	E %<>% merge(#
		G, #
		by=c(#
			population.grouping.variables, #
			sampling.grouping.variables,#
			"n_sims"#
		)#
	)#
	E %<>% calculatedSquaredDifferences(variables=c(o_rvar, rvar_variables))#
	E %<>% calculateDifferencesinMeans(variables=c(o_rvar, rvar_variables))#
#
	B %<>% calculatedSquaredDifferences(variables=ovar)#
	B %<>% calculateDifferencesinMeans(variables=ovar)
setwd('/Users/KSauby/Documents/Projects/ACS/R')
H <- vector("list", length(ovar))#
	X.grp <- B %>% #
		group_by_(.dots=c(#
			population.grouping.variables, #
			sampling.grouping.variables, #
			"n_sims"#
		)) %>% #
		calculateBiasComponents(., resultslist=H, variables=ovar)#
	Y <- Reduce(#
		function(x, y) merge(#
			x, y,#
			by=c(#
				population.grouping.variables, #
				sampling.grouping.variables, #
				"n_sims"#
			)#
		),#
		X.grp#
	) %>%#
		setnames("n_sims", "ovar_n_sims")#
	# ratio variables#
	H <- vector("list", length(rvar))#
	X.grp <- E %>% #
		group_by_(.dots=c(#
			population.grouping.variables, #
			sampling.grouping.variables, #
			"n_sims"#
		)) %>% #
		calculateBiasComponents(., resultslist=H, variables=rvar_variables)#
	Z <- Reduce(#
		function(x, y) merge(#
			x, y,#
			by=c(#
				population.grouping.variables, #
				sampling.grouping.variables, #
				"n_sims"#
			)#
		),#
		X.grp#
	) %>%#
		setnames("n_sims", "rvar_n_sims")
head(Z)

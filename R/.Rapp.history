setwd('/Users/KSauby/Documents/Projects/ACS/R')
A[[i]][[j]][[k]] <- alldata %>% #
					filter(Sampling!="Edge") %>%#
					dplyr::select(pop, x, y, NetworkID, Sampling) %>%#
					arrange(NetworkID)#
				# save for m summary data#
				data_networks <- alldata %>%#
					filter(m!=0)#
				# GET INCLUSION MATRIX FOR NETWORKS#
				temp <- #
					A[[i]][[j]][[k]] %>%#
					filter(Sampling=="SRSWOR") %>%#
					group_by(NetworkID) %>% dplyr::summarise(n())
temp
setwd('/Users/KSauby/Documents/Projects/ACS/R')
Z <- matrix(#
					temp$`n()`, #
					nrow=dim(temp)[1], #
					ncol=dim(temp)[1], #
					dimnames=list(temp$NetworkID, temp$NetworkID)#
				)#
				Z[lower.tri(Z)] <- t(Z)[lower.tri(Z)]
Z
k=2
setwd('/Users/KSauby/Documents/Projects/ACS/R')
temp_seed <- seeds[k]*100000
setwd('/Users/KSauby/Documents/Projects/ACS/R')
alldata <- createACS(#
						population=P, #
						seed=temp_seed, #
						n1=n1, #
						y_variable=y_variable#
					) %>% #
						as.data.table
setwd('/Users/KSauby/Documents/Projects/ACS/R')
A[[i]][[j]][[k]] <- alldata %>% #
					filter(Sampling!="Edge") %>%#
					dplyr::select(pop, x, y, NetworkID, Sampling) %>%#
					arrange(NetworkID)#
				# save for m summary data#
				data_networks <- alldata %>%#
					filter(m!=0)
setwd('/Users/KSauby/Documents/Projects/ACS/R')
temp <- #
					A[[i]][[j]][[k]] %>%#
					filter(Sampling=="SRSWOR") %>%#
					group_by(NetworkID) %>% dplyr::summarise(n())
temp
k=3
setwd('/Users/KSauby/Documents/Projects/ACS/R')
temp_seed <- seeds[k]*100000
setwd('/Users/KSauby/Documents/Projects/ACS/R')
alldata <- createACS(#
						population=P, #
						seed=temp_seed, #
						n1=n1, #
						y_variable=y_variable#
					) %>% #
						as.data.table
setwd('/Users/KSauby/Documents/Projects/ACS/R')
A[[i]][[j]][[k]] <- alldata %>% #
					filter(Sampling!="Edge") %>%#
					dplyr::select(pop, x, y, NetworkID, Sampling) %>%#
					arrange(NetworkID)#
				# save for m summary data#
				data_networks <- alldata %>%#
					filter(m!=0)#
				# GET INCLUSION MATRIX FOR NETWORKS
setwd('/Users/KSauby/Documents/Projects/ACS/R')
A[[i]][[j]][[k]] %>%#
					filter(Sampling=="SRSWOR") %>%#
					group_by(NetworkID) %>% dplyr::summarise(n())
j=2
setwd('/Users/KSauby/Documents/Projects/ACS/R')
P 			<- patchdat %>% filter(pop==unique(patchdat$pop)[i])#
			N 			<- dim(P)[1]#
			n1 			<- nsamples[j]#
			# save simulation attributes#
			A[[i]][[j]] <- list()#
			# save counts of joint inclusions#
			B[[i]][[j]] <- matrix(#
				nrow=length(unique(P$NetworkID)),#
				ncol=length(unique(P$NetworkID)),#
				dimnames=list(#
					unique(P$NetworkID),#
					unique(P$NetworkID)#
				),#
				0#
			)#
			# zeros#
			zeros <- B[[i]][[j]]#
			r 			<- (i - 1) * j + j#
			seeds 		<- runif(simulations)
setwd('/Users/KSauby/Documents/Projects/ACS/R')
temp_seed <- seeds[k]*100000
setwd('/Users/KSauby/Documents/Projects/ACS/R')
alldata <- createACS(#
						population=P, #
						seed=temp_seed, #
						n1=n1, #
						y_variable=y_variable#
					) %>% #
						as.data.table
setwd('/Users/KSauby/Documents/Projects/ACS/R')
A[[i]][[j]][[k]] <- alldata %>% #
					filter(Sampling!="Edge") %>%#
					dplyr::select(pop, x, y, NetworkID, Sampling) %>%#
					arrange(NetworkID)#
				# save for m summary data#
				data_networks <- alldata %>%#
					filter(m!=0)#
				# GET INCLUSION MATRIX FOR NETWORKS#
				temp <- #
					A[[i]][[j]][[k]] %>%#
					filter(Sampling=="SRSWOR") %>%#
					group_by(NetworkID) %>% dplyr::summarise(n())
temp
setwd('/Users/KSauby/Documents/Projects/ACS/R')
Z <- matrix(#
					temp$`n()`, #
					nrow=dim(temp)[1], #
					ncol=dim(temp)[1], #
					dimnames=list(temp$NetworkID, temp$NetworkID)#
				)#
				Z[lower.tri(Z)] <- t(Z)[lower.tri(Z)]
Z
setwd('/Users/KSauby/Documents/Projects/ACS/R')
temp <- #
					A[[i]][[j]][[k]] %>%#
					filter(Sampling=="SRSWOR") %>%#
					group_by(NetworkID) %>%#
					dplyr::summarise(n()) %>%#
					arrange(`n()`)#
				Z <- matrix(#
					temp$`n()`, #
					nrow=dim(temp)[1], #
					ncol=dim(temp)[1], #
					dimnames=list(temp$NetworkID, temp$NetworkID)#
				)
Z
setwd('/Users/KSauby/Documents/Projects/ACS/R')
temp <- #
					A[[i]][[j]][[k]] %>%#
					filter(Sampling=="SRSWOR") %>%#
					group_by(NetworkID) %>%#
					dplyr::summarise(n()) %>%#
					arrange(-`n()`)#
				Z <- matrix(#
					temp$`n()`, #
					nrow=dim(temp)[1], #
					ncol=dim(temp)[1], #
					dimnames=list(temp$NetworkID, temp$NetworkID)#
				)
Z
setwd('/Users/KSauby/Documents/Projects/ACS/R')
temp <- #
					A[[i]][[j]][[k]] %>%#
					filter(Sampling=="SRSWOR") %>%#
					group_by(NetworkID) %>%#
					dplyr::summarise(n())
setwd('/Users/KSauby/Documents/Projects/ACS/R')
Z <- matrix(#
					temp$`n()`, #
					nrow=dim(temp)[1], #
					ncol=dim(temp)[1], #
					dimnames=list(temp$NetworkID, temp$NetworkID)#
				)#
				Z[lower.tri(Z)] <- t(Z)[lower.tri(Z)]
Z
setwd('/Users/KSauby/Documents/Projects/ACS/R')
temp <- #
					A[[i]][[j]][[k]] %>%#
					filter(Sampling=="SRSWOR") %>%#
					group_by(NetworkID) %>%#
					dplyr::summarise(n()) %>%#
					arrange(-`n()`)#
				Z <- matrix(#
					temp$`n()`, #
					nrow=dim(temp)[1], #
					ncol=dim(temp)[1], #
					dimnames=list(temp$NetworkID, temp$NetworkID)#
				)#
				Z[lower.tri(Z)] <- t(Z)[lower.tri(Z)]
Z
k=4
setwd('/Users/KSauby/Documents/Projects/ACS/R')
temp_seed <- seeds[k]*100000
setwd('/Users/KSauby/Documents/Projects/ACS/R')
alldata <- createACS(#
						population=P, #
						seed=temp_seed, #
						n1=n1, #
						y_variable=y_variable#
					) %>% #
						as.data.table
setwd('/Users/KSauby/Documents/Projects/ACS/R')
A[[i]][[j]][[k]] <- alldata %>% #
					filter(Sampling!="Edge") %>%#
					dplyr::select(pop, x, y, NetworkID, Sampling) %>%#
					arrange(NetworkID)#
				# save for m summary data#
				data_networks <- alldata %>%#
					filter(m!=0)#
				# GET INCLUSION MATRIX FOR NETWORKS
setwd('/Users/KSauby/Documents/Projects/ACS/R')
temp <- #
					A[[i]][[j]][[k]] %>%#
					filter(Sampling=="SRSWOR") %>%#
					group_by(NetworkID) %>%#
					dplyr::summarise(n()) %>%#
					arrange(-`n()`)#
				Z <- matrix(#
					temp$`n()`, #
					nrow=dim(temp)[1], #
					ncol=dim(temp)[1], #
					dimnames=list(temp$NetworkID, temp$NetworkID)#
				)#
				Z[lower.tri(Z)] <- t(Z)[lower.tri(Z)]
Z
k=10
setwd('/Users/KSauby/Documents/Projects/ACS/R')
temp_seed <- seeds[k]*100000
setwd('/Users/KSauby/Documents/Projects/ACS/R')
alldata <- createACS(#
						population=P, #
						seed=temp_seed, #
						n1=n1, #
						y_variable=y_variable#
					) %>% #
						as.data.table
setwd('/Users/KSauby/Documents/Projects/ACS/R')
A[[i]][[j]][[k]] <- alldata %>% #
					filter(Sampling!="Edge") %>%#
					dplyr::select(pop, x, y, NetworkID, Sampling) %>%#
					arrange(NetworkID)#
				# save for m summary data#
				data_networks <- alldata %>%#
					filter(m!=0)#
				# GET INCLUSION MATRIX FOR NETWORKS#
				temp <- #
					A[[i]][[j]][[k]] %>%#
					filter(Sampling=="SRSWOR") %>%#
					group_by(NetworkID) %>%#
					dplyr::summarise(n()) %>%#
					arrange(-`n()`)#
				Z <- matrix(#
					temp$`n()`, #
					nrow=dim(temp)[1], #
					ncol=dim(temp)[1], #
					dimnames=list(temp$NetworkID, temp$NetworkID)#
				)#
				Z[lower.tri(Z)] <- t(Z)[lower.tri(Z)]
Z
setwd('/Users/KSauby/Documents/Projects/ACS/R')
indxB <- outer(#
					rownames(B[[i]][[j]]), #
					colnames(B[[i]][[j]]), #
					FUN=paste#
				) %in% outer(#
					rownames(Z), #
					colnames(Z), #
					FUN=paste#
				)#
				B1 <- zeros#
				# fill B1 with values from Z at indxB locations#
				B1[indxB] <- Z
head(B1)
tail(Z)
str(B1)
rownames(B1)
tail(B1)
tail(B[[i]][[j]])
setwd('/Users/KSauby/Documents/Projects')
setwd("./ACS")#
#setwd("./modresproc")#
#devtools::test()#
devtools::document()#
devtools::install()#
devtools::build()
setwd('/Users/KSauby/Documents/Projects/ACSampling_project/code')
# How to load functions in ACSampling package#
#
library(ggplot2)#
library(magrittr) #
library(dplyr)#
library(plyr) #
library(intergraph) #
library(igraph)#
library(network)#
library(devtools)#
setwd("YOUR WORKING DIRECTORY /Restricted_ACS_Simulations/ACSampling/R")#
# for Kristen: setwd("./ACSampling")#
devtools::test()#
devtools::document()#
devtools::install()#
library(ACSampling)#
#
setwd("./ACSampling")#
# devtools::check()#
devtools::build()#
devtools::RCMD()#
#devtools::build_vignette()#
#
cl<-makeCluster(4)#
registerDoParallel(cl)#
#
stopCluster(cl)#
#
# to track progress#
library(doSNOW)#
cl <- makeCluster(4, outfile="")#
registerDoSNOW(cl)
setwd('/Users/KSauby/Documents/Projects/ACSampling_project/code')
stopCluster(cl)
setwd('/Users/KSauby/Documents/Projects/ACSampling_project/code')
cl<-makeCluster(4)#
registerDoParallel(cl)
setwd('/Users/KSauby/Documents/Projects/ACSampling_project/code/Manuscript/simulations')
patch_data %<>% setnames("pop","population")#
patch_data_6 <- patch_data %>% filter(#
	population == levels(population)[5] |#
	population == levels(population)[6]	#
)#
#
calc_20Nov16_5 <- calculateJointInclusionProbabilities(#
	patchdat = patch_data_6, #
	simulations = 500, #
	nsamples = c(20, 40), # 40 and 75 took 3.4 hours! #
	#ACS=TRUE, #
	SamplingDesign="ACS",#
	y_variable = "Cactus",#
	f_max = 2,#
	population.grouping.variable = "population"#
) #
#
write.csv(calc_20Nov16_5[[1]], "/Users/KSauby/Documents/Projects/ACSampling_project/data/csv_data_files/simulatedJointInclusProb_patch1_2_ACS_25Jul17_attr_symmmatrix_2.csv")#
list.save(calc_20Nov16_5[[2]], file="simulatedJointInclusProb_patch1_2_ACS_25Jul17_attr_symmmatrix_2.RData")
setwd('/Users/KSauby/Documents/Projects')
setwd("./ACS")#
#setwd("./modresproc")#
#devtools::test()#
devtools::document()#
devtools::install()#
devtools::build()
setwd('/Users/KSauby/Documents/Projects/ACSampling_project/code/Manuscript/simulations')
patch_data %<>% setnames("pop","population")#
patch_data_6 <- patch_data %>% filter(#
	population == levels(population)[5] |#
	population == levels(population)[6]	#
)#
#
calc_20Nov16_5 <- calculateJointInclusionProbabilities(#
	patchdat = patch_data_6, #
	simulations = 500, #
	nsamples = c(20, 40), # 40 and 75 took 3.4 hours! #
	#ACS=TRUE, #
	SamplingDesign="ACS",#
	y_variable = "Cactus",#
	f_max = 2,#
	population.grouping.variable = "population"#
) #
#
write.csv(calc_20Nov16_5[[1]], "/Users/KSauby/Documents/Projects/ACSampling_project/data/csv_data_files/simulatedJointInclusProb_patch1_2_ACS_25Jul17_attr_symmmatrix_2.csv")#
list.save(calc_20Nov16_5[[2]], file="simulatedJointInclusProb_patch1_2_ACS_25Jul17_attr_symmmatrix_2.RData")
setwd('/Users/KSauby/Documents/Projects/ACSampling_project/code/Manuscript/simulations')
plotJointInclusionProbs <- function(population_data, simulation_data, simulation_sample_size, calculated_pi_ijs, calculated_pi_ijs_networks, sample_size) {#
	# calculate pi_ij from simulations#
	D <- simulation_data/simulation_sample_size#
	# average calculated pi_ij per network#
	calculated_pi_ijs %<>% rowMeans %>% as.data.frame#
	names(calculated_pi_ijs) <- "calculated_pi_ij"#
	calculated_pi_ijs$NetworkID <- calculated_pi_ijs_networks#
	# average pi_ij per network, estimated from simulations#
	D %<>% rowMeans %>% as.data.frame#
	names(D) <- "simulated_pi_ij"#
	D$NetworkID <- rownames(D)#
	D %<>% #
		merge(calculated_pi_ijs, by="NetworkID") %>%#
		mutate(sim_error = calculated_pi_ij - simulated_pi_ij)#
	# mean joint inclusion probability error PER network#
	E <- population_data %>% merge(D, by="NetworkID")#
}#
#
#################################################################################
# Christman data#
#
X_5_20 <- plotJointInclusionProbs(#
	population_data = patch_data %>% filter(population=="6"), #
	simulation_data = calc_20Nov16_5[[2]]$nsamples_20_pop_6, #
	simulation_sample_size = 500, #
	calculated_pi_ijs = population_inclusion_probabilities$pop6$piij_20,#
	calculated_pi_ijs_networks = population_inclusion_probabilities$pop6$NetworkID,#
	sample_size=20#
) #
#
X_5_20 %<>%#
	mutate(#
		`primary sample size` = "Primary Sample Size = 20",#
		population = "Population 6"#
	)#
#################################################################################
# PLOT POP. 5, nsamples=40#
#
X_5_40 <- plotJointInclusionProbs(#
	population_data = patch_data %>% filter(population=="6"), #
	simulation_data = calc_20Nov16_5[[2]]$nsamples_40_pop_6, #
	simulation_sample_size = 500, #
	calculated_pi_ijs = population_inclusion_probabilities$pop6$piij_40,#
	calculated_pi_ijs_networks = population_inclusion_probabilities$pop6$NetworkID,#
	sample_size=40#
) #
#
X_5_40 %<>%#
	mutate(#
		`primary sample size` = "Primary Sample Size = 40",#
		population = "Population 6"#
	)#
#################################################################################
# PLOT POP. 10, nsamples=20#
#
X_10_20 <- plotJointInclusionProbs(#
	population_data = patch_data %>% filter(population=="5"), #
	simulation_data = calc_20Nov16_5[[2]]$nsamples_20_pop_5, #
	simulation_sample_size = 500, #
	calculated_pi_ijs = population_inclusion_probabilities$pop5$piij_20,#
	calculated_pi_ijs_networks = population_inclusion_probabilities$pop5$NetworkID,#
	sample_size=20#
) #
X_10_20 %<>%#
	mutate(#
		`primary sample size` = "Primary Sample Size = 20",#
		population = "Population 5"#
	)#
#
#################################################################################
	# PLOT POP. 10, nsamples=40#
#
X_10_40 <- plotJointInclusionProbs(#
	population_data = patch_data %>% filter(population=="5"), #
	simulation_data = calc_20Nov16_5[[2]]$nsamples_40_pop_5, #
	simulation_sample_size = 500, #
	calculated_pi_ijs = population_inclusion_probabilities$pop5$piij_40,#
	calculated_pi_ijs_networks = population_inclusion_probabilities$pop5$NetworkID,#
	sample_size=40#
) #
#
X_10_40 %<>%#
	mutate(#
		`primary sample size` = "Primary Sample Size = 40",#
		population = "Population 5"#
	)#
#
X <- rbind.fill(#
	X_5_20,#
	X_5_40,#
	X_10_20,#
	X_10_40#
)#
ggplot(X, aes(x,y,size=sim_error,colour=sim_error)) + geom_point() +#
facet_grid(population ~ `primary sample size`) + scale_colour_gradient2() + theme_dark()
setwd('/Users/KSauby/Documents/Projects/ACSampling_project/code/Manuscript/simulations')
patch_data_1 <- patch_data %>% #
	filter(population=="6") %>% #
	arrange(NetworkID) %>%#
	dplyr::select(#
		m,#
		NetworkID,#
		x,#
		y#
	)
setwd('/Users/KSauby/Documents/Projects/ACSampling_project/code/Manuscript/simulations')
ggplot(patch_data_1, aes(x,y,colour=NetworkID, label=NetworkID)) + geom_text() +#
facet_wrap(~pop)
setwd('/Users/KSauby/Documents/Projects/ACSampling_project/code/Manuscript/simulations')
ggplot(patch_data_1, aes(x,y,colour=NetworkID, label=NetworkID)) + geom_text()
plotJointInclusionProbs <- function(population_data, simulation_data, simulation_sample_size, calculated_pi_ijs, calculated_pi_ijs_networks, sample_size) {#
	# calculate pi_ij from simulations#
	D <- simulation_data/simulation_sample_size#
	# average calculated pi_ij per network#
	calculated_pi_ijs %<>% rowMeans %>% as.data.frame#
	names(calculated_pi_ijs) <- "calculated_pi_ij"#
	calculated_pi_ijs$NetworkID <- calculated_pi_ijs_networks#
	# average pi_ij per network, estimated from simulations#
	D %<>% rowMeans %>% as.data.frame#
	names(D) <- "simulated_pi_ij"#
	D$NetworkID <- rownames(D)#
	D %<>% #
		merge(calculated_pi_ijs, by="NetworkID") %>%#
		mutate(sim_error = calculated_pi_ij - simulated_pi_ij)#
	# mean joint inclusion probability error PER network#
	E <- population_data %>% merge(D, by="NetworkID")#
}#
#
#################################################################################
# Christman data#
#
X_5_20 <- plotJointInclusionProbs(#
	population_data = patch_data %>% filter(population=="6"), #
	simulation_data = calc_20Nov16_5[[2]]$nsamples_20_pop_6, #
	simulation_sample_size = 500, #
	calculated_pi_ijs = population_inclusion_probabilities$pop6$piij_20,#
	calculated_pi_ijs_networks = population_inclusion_probabilities$pop6$NetworkID,#
	sample_size=20#
) #
#
X_5_20 %<>%#
	mutate(#
		`primary sample size` = "Primary Sample Size = 20",#
		population = "Population 6"#
	)#
#################################################################################
# PLOT POP. 5, nsamples=40#
#
X_5_40 <- plotJointInclusionProbs(#
	population_data = patch_data %>% filter(population=="6"), #
	simulation_data = calc_20Nov16_5[[2]]$nsamples_40_pop_6, #
	simulation_sample_size = 500, #
	calculated_pi_ijs = population_inclusion_probabilities$pop6$piij_40,#
	calculated_pi_ijs_networks = population_inclusion_probabilities$pop6$NetworkID,#
	sample_size=40#
) #
#
X_5_40 %<>%#
	mutate(#
		`primary sample size` = "Primary Sample Size = 40",#
		population = "Population 6"#
	)#
#################################################################################
# PLOT POP. 10, nsamples=20#
#
X_10_20 <- plotJointInclusionProbs(#
	population_data = patch_data %>% filter(population=="5"), #
	simulation_data = calc_20Nov16_5[[2]]$nsamples_20_pop_5, #
	simulation_sample_size = 500, #
	calculated_pi_ijs = population_inclusion_probabilities$pop5$piij_20,#
	calculated_pi_ijs_networks = population_inclusion_probabilities$pop5$NetworkID,#
	sample_size=20#
) #
X_10_20 %<>%#
	mutate(#
		`primary sample size` = "Primary Sample Size = 20",#
		population = "Population 5"#
	)#
#
#################################################################################
	# PLOT POP. 10, nsamples=40#
#
X_10_40 <- plotJointInclusionProbs(#
	population_data = patch_data %>% filter(population=="5"), #
	simulation_data = calc_20Nov16_5[[2]]$nsamples_40_pop_5, #
	simulation_sample_size = 500, #
	calculated_pi_ijs = population_inclusion_probabilities$pop5$piij_40,#
	calculated_pi_ijs_networks = population_inclusion_probabilities$pop5$NetworkID,#
	sample_size=40#
) #
#
X_10_40 %<>%#
	mutate(#
		`primary sample size` = "Primary Sample Size = 40",#
		population = "Population 5"#
	)#
#
X <- rbind.fill(#
	X_5_20,#
	X_5_40,#
	X_10_20,#
	X_10_40#
)#
ggplot(X, aes(x,y,size=sim_error,colour=sim_error)) + geom_point() +#
facet_grid(population ~ `primary sample size`) + scale_colour_gradient2() + theme_dark()
setwd('/Users/KSauby/Documents/Projects/ACSampling_project/code/Manuscript/simulations')
population_data = patch_data %>% filter(population=="6")
setwd('/Users/KSauby/Documents/Projects/ACSampling_project/code/Manuscript/simulations')
simulation_data = calc_20Nov16_5[[2]]$nsamples_20_pop_6
setwd('/Users/KSauby/Documents/Projects/ACSampling_project/code/Manuscript/simulations')
simulation_sample_size = 500
setwd('/Users/KSauby/Documents/Projects/ACSampling_project/code/Manuscript/simulations')
calculated_pi_ijs = population_inclusion_probabilities$pop6$piij_20
setwd('/Users/KSauby/Documents/Projects/ACSampling_project/code/Manuscript/simulations')
calculated_pi_ijs_networks = population_inclusion_probabilities$pop6$NetworkID
setwd('/Users/KSauby/Documents/Projects/ACSampling_project/code/Manuscript/simulations')
sample_size=20
setwd('/Users/KSauby/Documents/Projects/ACSampling_project/code/Manuscript/simulations')
D <- simulation_data/simulation_sample_size
head(D)
setwd('/Users/KSauby/Documents/Projects/ACSampling_project/code/Manuscript/simulations')
calculated_pi_ijs %<>% rowMeans %>% as.data.frame#
	names(calculated_pi_ijs) <- "calculated_pi_ij"#
	calculated_pi_ijs$NetworkID <- calculated_pi_ijs_networks
head(calculated_pi_ijs)
setwd('/Users/KSauby/Documents/Projects/ACSampling_project/code/Manuscript/simulations')
D %<>% rowMeans %>% as.data.frame#
	names(D) <- "simulated_pi_ij"
head(D)
setwd('/Users/KSauby/Documents/Projects/ACSampling_project/code/Manuscript/simulations')
D$NetworkID <- rownames(D)
head(D)
head(calculated_pi_ijs)
setwd('/Users/KSauby/Documents/Projects/ACSampling_project/code/Manuscript/simulations')
D %<>% #
		merge(calculated_pi_ijs, by="NetworkID")
head(D)
setwd('/Users/KSauby/Documents/Projects/ACSampling_project/code/Manuscript/simulations')
D %<>% #
		merge(calculated_pi_ijs, by="NetworkID") %>%#
		mutate(sim_error = calculated_pi_ij - simulated_pi_ij)
setwd('/Users/KSauby/Documents/Projects/ACSampling_project/code/Manuscript/simulations')
calculated_pi_ijs = population_inclusion_probabilities$pop6$piij_20
setwd('/Users/KSauby/Documents/Projects/ACSampling_project/code/Manuscript/simulations')
D <- simulation_data/simulation_sample_size#
	# average calculated pi_ij per network#
	calculated_pi_ijs %<>% rowMeans %>% as.data.frame#
	names(calculated_pi_ijs) <- "calculated_pi_ij"#
	calculated_pi_ijs$NetworkID <- calculated_pi_ijs_networks#
	# average pi_ij per network, estimated from simulations#
	D %<>% rowMeans %>% as.data.frame#
	names(D) <- "simulated_pi_ij"#
	D$NetworkID <- rownames(D)#
	D %<>% #
		merge(calculated_pi_ijs, by="NetworkID") %>%#
		mutate(sim_error = calculated_pi_ij - simulated_pi_ij)
head(D)
tail(D)
setwd('/Users/KSauby/Documents/Projects/ACSampling_project/code/Manuscript/simulations')
patch_data %<>% setnames("pop","population")#
patch_data_6 <- patch_data %>% filter(#
	population == levels(population)[5] |#
	population == levels(population)[6]	#
)
setwd('/Users/KSauby/Documents/Projects/ACSampling_project/code/Manuscript/simulations')
patchdat = patch_data_6
setwd('/Users/KSauby/Documents/Projects/ACSampling_project/code/Manuscript/simulations')
simulations = 500
setwd('/Users/KSauby/Documents/Projects/ACSampling_project/code/Manuscript/simulations')
nsamples = c(20, 40)
setwd('/Users/KSauby/Documents/Projects/ACSampling_project/code/Manuscript/simulations')
SamplingDesign="ACS"
setwd('/Users/KSauby/Documents/Projects/ACSampling_project/code/Manuscript/simulations')
y_variable = "Cactus"
setwd('/Users/KSauby/Documents/Projects/ACSampling_project/code/Manuscript/simulations')
f_max = 2
setwd('/Users/KSauby/Documents/Projects/ACSampling_project/code/Manuscript/simulations')
population.grouping.variable = "population"
setwd('/Users/KSauby/Documents/Projects/ACS/R')
pop <- i <- j <- Sampling <- . <- NetworkID <- NULL#
	TIME 			<- Sys.time()#
	patchdat 		%<>% arrange_(.dots=population.grouping.variable)#
	if (population.grouping.variable != "pop") {#
		# patchdat	%<>% setnames(population.grouping.variable, "pop")#
		colnames(patchdat)[which(names(patchdat) == population.grouping.variable)] <- "pop"#
	}#
	n.pop 			<- length(unique(patchdat$pop))#
	nsample.length 	<- length(nsamples)#
	A 				<- vector("list", n.pop)#
	B 				<- vector("list", n.pop)
i=1
j=1
k=1
setwd('/Users/KSauby/Documents/Projects/ACS/R')
P 			<- patchdat %>% filter(pop==unique(patchdat$pop)[i])#
			N 			<- dim(P)[1]#
			n1 			<- nsamples[j]#
			# save simulation attributes#
			A[[i]][[j]] <- list()#
			# save counts of joint inclusions#
			B[[i]][[j]] <- matrix(#
				nrow=length(unique(P$NetworkID)),#
				ncol=length(unique(P$NetworkID)),#
				dimnames=list(#
					unique(P$NetworkID),#
					unique(P$NetworkID)#
				),#
				0#
			)#
			# zeros#
			zeros <- B[[i]][[j]]#
			r 			<- (i - 1) * j + j#
			seeds 		<- runif(simulations)
setwd('/Users/KSauby/Documents/Projects/ACS/R')
temp_seed <- seeds[k]*100000
setwd('/Users/KSauby/Documents/Projects/ACS/R')
alldata <- createACS(#
						population=P, #
						seed=temp_seed, #
						n1=n1, #
						y_variable=y_variable#
					) %>% #
						as.data.table
setwd('/Users/KSauby/Documents/Projects/ACS/R')
A[[i]][[j]][[k]] <- alldata %>% #
					filter(Sampling!="Edge") %>%#
					dplyr::select(pop, x, y, NetworkID, Sampling) %>%#
					arrange(NetworkID)#
				# save for m summary data#
				data_networks <- alldata %>%#
					filter(m!=0)#
				# GET INCLUSION MATRIX FOR NETWORKS#
				temp <- #
					A[[i]][[j]][[k]] %>%#
					filter(Sampling=="SRSWOR") %>%#
					group_by(NetworkID) %>%#
					dplyr::summarise(n()) %>%#
					arrange(-`n()`)#
				Z <- matrix(#
					temp$`n()`, #
					nrow=dim(temp)[1], #
					ncol=dim(temp)[1], #
					dimnames=list(temp$NetworkID, temp$NetworkID)#
				)#
				Z[lower.tri(Z)] <- t(Z)[lower.tri(Z)]#
				# Z <- matrix(#
				# 	nrow=length(unique(A[[i]][[j]][[k]]$NetworkID)),#
				# 	ncol=length(unique(A[[i]][[j]][[k]]$NetworkID)),#
				# 	dimnames=list(#
				# 		unique(A[[i]][[j]][[k]]$NetworkID),#
				# 		unique(A[[i]][[j]][[k]]$NetworkID)#
				# 	),#
				# 	1#
				# )#
				# get B[[i]][[j]] indices for Z information#
				indxB <- outer(
)
str(Z)
head(Z)
rownames(B1)
setwd('/Users/KSauby/Documents/Projects/ACS/R')
indxB <- outer(#
					rownames(B[[i]][[j]]), #
					colnames(B[[i]][[j]]), #
					FUN=paste#
				) %in% outer(#
					rownames(Z), #
					colnames(Z), #
					FUN=paste#
				)#
				B1 <- zeros#
				# fill B1 with values from Z at indxB locations#
				B1[indxB] <- Z
rownames(B1)
rownames(B[[i]][[j]])
setwd('/Users/KSauby/Documents/Projects/ACS/R')
B1_sorted <- B1#
				sorted[] <- B1[cbind(#
					as.vector(B[[i]][[j]]), #
					as.vector(col(B[[i]][[j]]))#
				)]
setwd('/Users/KSauby/Documents/Projects/ACS/R')
B1_sorted <- B1#
				B1_sorted[] <- B1[cbind(#
					as.vector(B[[i]][[j]]), #
					as.vector(col(B[[i]][[j]]))#
				)]
str(B[[i]][[j]])
str(B1)
sortMe <- matrix(rnorm(6), ncol=2)#
sortBy <- matrix(c(2,1,3, 1,3,2), ncol=2)
sortMe
sortBy
sorted <- sortMe#
sorted[] <- sortMe[cbind(as.vector(sortBy), as.vector(col(sortBy)))]
sorted
setwd('/Users/KSauby/Documents/Projects/ACS/R')
rownames(B1)==rownames(B[[i]][[j]])
?all
setwd('/Users/KSauby/Documents/Projects/ACS/R')
all(rownames(B1)==rownames(B[[i]][[j]]))
setwd('/Users/KSauby/Documents/Projects/ACS/R')
all(colnames(B1)==colnames(B[[i]][[j]]))
setwd('/Users/KSauby/Documents/Projects/ACS/R')
rowcolequal <- paste(#
					all(rownames(B1)==rownames(B[[i]][[j]])),#
					all(colnames(B1)==colnames(B[[i]][[j]]))#
				)
rowcolequal
setwd('/Users/KSauby/Documents/Projects')
setwd("./ACS")#
#setwd("./modresproc")#
#devtools::test()#
devtools::document()#
devtools::install()
setwd('/Users/KSauby/Documents/Projects/ACSampling_project/code/Manuscript/simulations')
patch_data %<>% setnames("pop","population")#
patch_data_6 <- patch_data %>% filter(#
	population == levels(population)[5] |#
	population == levels(population)[6]	#
)#
#
calc_20Nov16_5 <- calculateJointInclusionProbabilities(#
	patchdat = patch_data_6, #
	simulations = 5, #
	nsamples = c(20, 40), # 40 and 75 took 3.4 hours! #
	#ACS=TRUE, #
	SamplingDesign="ACS",#
	y_variable = "Cactus",#
	f_max = 2,#
	population.grouping.variable = "population"#
)
str(calc_20Nov16_5)
calc_20Nov16_5[[1]] %>% str
calc_20Nov16_5[[1]] %$% unique(rowcolequal)
Z
k=1
k=10
setwd('/Users/KSauby/Documents/Projects/ACS/R')
temp_seed <- seeds[k]*100000
setwd('/Users/KSauby/Documents/Projects/ACS/R')
alldata <- createACS(#
						population=P, #
						seed=temp_seed, #
						n1=n1, #
						y_variable=y_variable#
					) %>% #
						as.data.table
setwd('/Users/KSauby/Documents/Projects/ACS/R')
alldata %>% #
					filter(Sampling!="Edge") %>%#
					dplyr::select(pop, x, y, NetworkID, Sampling) %>%#
					arrange(NetworkID)
setwd('/Users/KSauby/Documents/Projects/ACS/R')
A[[i]][[j]][[k]] <- alldata %>% #
					filter(Sampling!="Edge") %>%#
					dplyr::select(pop, x, y, NetworkID, Sampling) %>%#
					arrange(NetworkID)#
				# save for m summary data#
				data_networks <- alldata %>%#
					filter(m!=0)#
				# GET INCLUSION MATRIX FOR NETWORKS#
				temp <- #
					A[[i]][[j]][[k]] %>%#
					filter(Sampling=="SRSWOR") %>%#
					group_by(NetworkID) %>%#
					dplyr::summarise(n()) %>%#
					arrange(-`n()`)
temp
j=2
setwd('/Users/KSauby/Documents/Projects/ACS/R')
P 			<- patchdat %>% filter(pop==unique(patchdat$pop)[i])#
			N 			<- dim(P)[1]#
			n1 			<- nsamples[j]#
			# save simulation attributes#
			A[[i]][[j]] <- list()#
			# save counts of joint inclusions#
			B[[i]][[j]] <- matrix(#
				nrow=length(unique(P$NetworkID)),#
				ncol=length(unique(P$NetworkID)),#
				dimnames=list(#
					unique(P$NetworkID),#
					unique(P$NetworkID)#
				),#
				0#
			)#
			# zeros#
			zeros <- B[[i]][[j]]#
			r 			<- (i - 1) * j + j#
			seeds 		<- runif(simulations)
setwd('/Users/KSauby/Documents/Projects/ACS/R')
temp_seed <- seeds[k]*100000
setwd('/Users/KSauby/Documents/Projects/ACS/R')
alldata <- createACS(#
						population=P, #
						seed=temp_seed, #
						n1=n1, #
						y_variable=y_variable#
					) %>% #
						as.data.table
setwd('/Users/KSauby/Documents/Projects/ACS/R')
A[[i]][[j]][[k]] <- alldata %>% #
					filter(Sampling!="Edge") %>%#
					dplyr::select(pop, x, y, NetworkID, Sampling) %>%#
					arrange(NetworkID)#
				# save for m summary data#
				data_networks <- alldata %>%#
					filter(m!=0)#
				# GET INCLUSION MATRIX FOR NETWORKS#
				temp <- #
					A[[i]][[j]][[k]] %>%#
					filter(Sampling=="SRSWOR") %>%#
					group_by(NetworkID) %>%#
					dplyr::summarise(n()) %>%
arrange(-`n()`)
temp
k=20
setwd('/Users/KSauby/Documents/Projects/ACS/R')
temp_seed <- seeds[k]*100000
setwd('/Users/KSauby/Documents/Projects/ACS/R')
alldata <- createACS(#
						population=P, #
						seed=temp_seed, #
						n1=n1, #
						y_variable=y_variable#
					) %>% #
						as.data.table
setwd('/Users/KSauby/Documents/Projects/ACS/R')
A[[i]][[j]][[k]] <- alldata %>% #
					filter(Sampling!="Edge") %>%#
					dplyr::select(pop, x, y, NetworkID, Sampling) %>%#
					arrange(NetworkID)#
				# save for m summary data#
				data_networks <- alldata %>%#
					filter(m!=0)#
				# GET INCLUSION MATRIX FOR NETWORKS#
				temp <- #
					A[[i]][[j]][[k]] %>%#
					filter(Sampling=="SRSWOR") %>%#
					group_by(NetworkID) %>%#
					dplyr::summarise(n()) %>%#
					arrange(-`n()`)
temp
setwd('/Users/KSauby/Documents/Projects/ACS/R')
Z <- matrix(#
					temp$`n()`, #
					nrow=dim(temp)[1], #
					ncol=dim(temp)[1], #
					dimnames=list(temp$NetworkID, temp$NetworkID)#
				)#
				Z[lower.tri(Z)] <- t(Z)[lower.tri(Z)]
Z
setwd('/Users/KSauby/Documents/Projects/ACS/R')
indxB <- outer(#
					rownames(B[[i]][[j]]), #
					colnames(B[[i]][[j]]), #
					FUN=paste#
				) %in% outer(#
					rownames(Z), #
					colnames(Z), #
					FUN=paste#
				)#
				B1 <- zeros#
				# fill B1 with values from Z at indxB locations#
				B1[indxB] <- Z
B1[which(B1!=0)]
B1[which(B1!=0,arr.ind=T)]
B1[which(B1!=0,arr.ind=T),]
B1[which(B1!=0,arr.ind=T),which(B1!=0,arr.ind=T)]
B1[which(B1!=0),which(B1!=0)]
B1[which(B1!=0,arr.in=T)]
[which(B1!=0,arr.in=T)]
which(B1!=0,arr.in=T)]
which(B1!=0,arr.in=T)
dim(Z)
B1[which(B1!=0,arr.in=T)]
matrix(B1[which(B1!=0,arr.in=T)],nrow=dim(Z)[1],ncol=dim(Z)[1])
